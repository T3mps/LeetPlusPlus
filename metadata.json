{
  "1": {
    "titleSlug": "two-sum",
    "title": "Two Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 55.87838594136525
  },
  "2": {
    "titleSlug": "add-two-numbers",
    "title": "Add Two Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Math",
      "Recursion"
    ],
    "acRate": 46.36816336870686
  },
  "3": {
    "titleSlug": "longest-substring-without-repeating-characters",
    "title": "Longest Substring Without Repeating Characters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 37.057849752187835
  },
  "4": {
    "titleSlug": "median-of-two-sorted-arrays",
    "title": "Median of Two Sorted Arrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer"
    ],
    "acRate": 43.992299067034395
  },
  "5": {
    "titleSlug": "longest-palindromic-substring",
    "title": "Longest Palindromic Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 35.95918864665966
  },
  "6": {
    "titleSlug": "zigzag-conversion",
    "title": "Zigzag Conversion",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 51.7556789072108
  },
  "7": {
    "titleSlug": "reverse-integer",
    "title": "Reverse Integer",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 30.396624713060056
  },
  "8": {
    "titleSlug": "string-to-integer-atoi",
    "title": "String to Integer (atoi)",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 19.33639563230614
  },
  "9": {
    "titleSlug": "palindrome-number",
    "title": "Palindrome Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 59.30622655826853
  },
  "10": {
    "titleSlug": "regular-expression-matching",
    "title": "Regular Expression Matching",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Recursion"
    ],
    "acRate": 29.351052042114524
  },
  "11": {
    "titleSlug": "container-with-most-water",
    "title": "Container With Most Water",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy"
    ],
    "acRate": 57.88340662343793
  },
  "12": {
    "titleSlug": "integer-to-roman",
    "title": "Integer to Roman",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String"
    ],
    "acRate": 68.77267309664515
  },
  "13": {
    "titleSlug": "roman-to-integer",
    "title": "Roman to Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String"
    ],
    "acRate": 64.97928296459492
  },
  "14": {
    "titleSlug": "longest-common-prefix",
    "title": "Longest Common Prefix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Trie"
    ],
    "acRate": 45.60814938402895
  },
  "15": {
    "titleSlug": "3sum",
    "title": "3Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 37.19645676535109
  },
  "16": {
    "titleSlug": "3sum-closest",
    "title": "3Sum Closest",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 46.95772807821156
  },
  "17": {
    "titleSlug": "letter-combinations-of-a-phone-number",
    "title": "Letter Combinations of a Phone Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Backtracking"
    ],
    "acRate": 63.99295120256503
  },
  "18": {
    "titleSlug": "4sum",
    "title": "4Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 38.35264936064662
  },
  "19": {
    "titleSlug": "remove-nth-node-from-end-of-list",
    "title": "Remove Nth Node From End of List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 49.14289383752412
  },
  "20": {
    "titleSlug": "valid-parentheses",
    "title": "Valid Parentheses",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 42.42167963872358
  },
  "21": {
    "titleSlug": "merge-two-sorted-lists",
    "title": "Merge Two Sorted Lists",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Recursion"
    ],
    "acRate": 66.93630059417808
  },
  "22": {
    "titleSlug": "generate-parentheses",
    "title": "Generate Parentheses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ],
    "acRate": 77.24912222489866
  },
  "23": {
    "titleSlug": "merge-k-sorted-lists",
    "title": "Merge k Sorted Lists",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ],
    "acRate": 56.9588972817602
  },
  "24": {
    "titleSlug": "swap-nodes-in-pairs",
    "title": "Swap Nodes in Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Recursion"
    ],
    "acRate": 67.34780221921937
  },
  "25": {
    "titleSlug": "reverse-nodes-in-k-group",
    "title": "Reverse Nodes in k-Group",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Recursion"
    ],
    "acRate": 63.2616136575629
  },
  "26": {
    "titleSlug": "remove-duplicates-from-sorted-array",
    "title": "Remove Duplicates from Sorted Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 60.5084993064393
  },
  "27": {
    "titleSlug": "remove-element",
    "title": "Remove Element",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 60.13287246986416
  },
  "28": {
    "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
    "title": "Find the Index of the First Occurrence in a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "String Matching"
    ],
    "acRate": 45.07356417433622
  },
  "29": {
    "titleSlug": "divide-two-integers",
    "title": "Divide Two Integers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 18.46191678762141
  },
  "30": {
    "titleSlug": "substring-with-concatenation-of-all-words",
    "title": "Substring with Concatenation of All Words",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 33.045820869376996
  },
  "31": {
    "titleSlug": "next-permutation",
    "title": "Next Permutation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 43.20828810147775
  },
  "32": {
    "titleSlug": "longest-valid-parentheses",
    "title": "Longest Valid Parentheses",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Stack"
    ],
    "acRate": 36.44141951233753
  },
  "33": {
    "titleSlug": "search-in-rotated-sorted-array",
    "title": "Search in Rotated Sorted Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 42.94992818345316
  },
  "34": {
    "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
    "title": "Find First and Last Position of Element in Sorted Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 46.96621559456589
  },
  "35": {
    "titleSlug": "search-insert-position",
    "title": "Search Insert Position",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 49.14562966370594
  },
  "36": {
    "titleSlug": "valid-sudoku",
    "title": "Valid Sudoku",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "acRate": 62.381971203869966
  },
  "37": {
    "titleSlug": "sudoku-solver",
    "title": "Sudoku Solver",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Backtracking",
      "Matrix"
    ],
    "acRate": 64.00999479538918
  },
  "38": {
    "titleSlug": "count-and-say",
    "title": "Count and Say",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 60.64572557858716
  },
  "39": {
    "titleSlug": "combination-sum",
    "title": "Combination Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking"
    ],
    "acRate": 74.82003067540055
  },
  "40": {
    "titleSlug": "combination-sum-ii",
    "title": "Combination Sum II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking"
    ],
    "acRate": 57.781172473534035
  },
  "41": {
    "titleSlug": "first-missing-positive",
    "title": "First Missing Positive",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 41.18115691791841
  },
  "42": {
    "titleSlug": "trapping-rain-water",
    "title": "Trapping Rain Water",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 65.26421042286216
  },
  "43": {
    "titleSlug": "multiply-strings",
    "title": "Multiply Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation"
    ],
    "acRate": 42.368330723693184
  },
  "44": {
    "titleSlug": "wildcard-matching",
    "title": "Wildcard Matching",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Greedy",
      "Recursion"
    ],
    "acRate": 30.03908017572987
  },
  "45": {
    "titleSlug": "jump-game-ii",
    "title": "Jump Game II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 41.58828328774767
  },
  "46": {
    "titleSlug": "permutations",
    "title": "Permutations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking"
    ],
    "acRate": 80.75378569359553
  },
  "47": {
    "titleSlug": "permutations-ii",
    "title": "Permutations II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Sorting"
    ],
    "acRate": 61.71083922184898
  },
  "48": {
    "titleSlug": "rotate-image",
    "title": "Rotate Image",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Matrix"
    ],
    "acRate": 78.03392207127655
  },
  "49": {
    "titleSlug": "group-anagrams",
    "title": "Group Anagrams",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 71.03398026945024
  },
  "50": {
    "titleSlug": "powx-n",
    "title": "Pow(x, n)",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Recursion"
    ],
    "acRate": 37.12570202400445
  },
  "51": {
    "titleSlug": "n-queens",
    "title": "N-Queens",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking"
    ],
    "acRate": 73.05672756309957
  },
  "52": {
    "titleSlug": "n-queens-ii",
    "title": "N-Queens II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Backtracking"
    ],
    "acRate": 76.84587069401165
  },
  "53": {
    "titleSlug": "maximum-subarray",
    "title": "Maximum Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ],
    "acRate": 52.16394256736866
  },
  "54": {
    "titleSlug": "spiral-matrix",
    "title": "Spiral Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 54.13651566827057
  },
  "55": {
    "titleSlug": "jump-game",
    "title": "Jump Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 39.57953111561551
  },
  "56": {
    "titleSlug": "merge-intervals",
    "title": "Merge Intervals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 49.50360732192221
  },
  "57": {
    "titleSlug": "insert-interval",
    "title": "Insert Interval",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 43.58408280279627
  },
  "58": {
    "titleSlug": "length-of-last-word",
    "title": "Length of Last Word",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 56.47297217237802
  },
  "59": {
    "titleSlug": "spiral-matrix-ii",
    "title": "Spiral Matrix II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 73.52205389970561
  },
  "60": {
    "titleSlug": "permutation-sequence",
    "title": "Permutation Sequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Recursion"
    ],
    "acRate": 50.0913847513903
  },
  "61": {
    "titleSlug": "rotate-list",
    "title": "Rotate List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 40.05278802850057
  },
  "62": {
    "titleSlug": "unique-paths",
    "title": "Unique Paths",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 65.84993169848607
  },
  "63": {
    "titleSlug": "unique-paths-ii",
    "title": "Unique Paths II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 43.24555841984254
  },
  "64": {
    "titleSlug": "minimum-path-sum",
    "title": "Minimum Path Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 66.61705173012223
  },
  "65": {
    "titleSlug": "valid-number",
    "title": "Valid Number",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 21.63949323706796
  },
  "66": {
    "titleSlug": "plus-one",
    "title": "Plus One",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 47.63066659349417
  },
  "67": {
    "titleSlug": "add-binary",
    "title": "Add Binary",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Bit Manipulation",
      "Simulation"
    ],
    "acRate": 55.75892108984743
  },
  "68": {
    "titleSlug": "text-justification",
    "title": "Text Justification",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Simulation"
    ],
    "acRate": 48.31297683208511
  },
  "69": {
    "titleSlug": "sqrtx",
    "title": "Sqrt(x)",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 40.442274383782845
  },
  "70": {
    "titleSlug": "climbing-stairs",
    "title": "Climbing Stairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 53.57520420189502
  },
  "71": {
    "titleSlug": "simplify-path",
    "title": "Simplify Path",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 48.05273805528746
  },
  "72": {
    "titleSlug": "edit-distance",
    "title": "Edit Distance",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 58.92365169115465
  },
  "73": {
    "titleSlug": "set-matrix-zeroes",
    "title": "Set Matrix Zeroes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "acRate": 60.86663614064152
  },
  "74": {
    "titleSlug": "search-a-2d-matrix",
    "title": "Search a 2D Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Matrix"
    ],
    "acRate": 52.40271096795625
  },
  "75": {
    "titleSlug": "sort-colors",
    "title": "Sort Colors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 67.72361493085197
  },
  "76": {
    "titleSlug": "minimum-window-substring",
    "title": "Minimum Window Substring",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 45.499114072426075
  },
  "77": {
    "titleSlug": "combinations",
    "title": "Combinations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Backtracking"
    ],
    "acRate": 73.01752953484218
  },
  "78": {
    "titleSlug": "subsets",
    "title": "Subsets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 81.00133575115997
  },
  "79": {
    "titleSlug": "word-search",
    "title": "Word Search",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Backtracking",
      "Depth-First Search",
      "Matrix"
    ],
    "acRate": 45.41284130543788
  },
  "80": {
    "titleSlug": "remove-duplicates-from-sorted-array-ii",
    "title": "Remove Duplicates from Sorted Array II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 63.01925597928134
  },
  "81": {
    "titleSlug": "search-in-rotated-sorted-array-ii",
    "title": "Search in Rotated Sorted Array II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 38.94522734009499
  },
  "82": {
    "titleSlug": "remove-duplicates-from-sorted-list-ii",
    "title": "Remove Duplicates from Sorted List II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 50.017478117769
  },
  "83": {
    "titleSlug": "remove-duplicates-from-sorted-list",
    "title": "Remove Duplicates from Sorted List",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 54.982961449986014
  },
  "84": {
    "titleSlug": "largest-rectangle-in-histogram",
    "title": "Largest Rectangle in Histogram",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 47.58284840198971
  },
  "85": {
    "titleSlug": "maximal-rectangle",
    "title": "Maximal Rectangle",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Matrix",
      "Monotonic Stack"
    ],
    "acRate": 53.95938685699034
  },
  "86": {
    "titleSlug": "partition-list",
    "title": "Partition List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 59.13071796162096
  },
  "87": {
    "titleSlug": "scramble-string",
    "title": "Scramble String",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 42.29249381392537
  },
  "88": {
    "titleSlug": "merge-sorted-array",
    "title": "Merge Sorted Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 53.04417396321309
  },
  "89": {
    "titleSlug": "gray-code",
    "title": "Gray Code",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 62.0191938713571
  },
  "90": {
    "titleSlug": "subsets-ii",
    "title": "Subsets II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 59.64648092294752
  },
  "91": {
    "titleSlug": "decode-ways",
    "title": "Decode Ways",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 36.62287970563977
  },
  "92": {
    "titleSlug": "reverse-linked-list-ii",
    "title": "Reverse Linked List II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 49.7053438710633
  },
  "93": {
    "titleSlug": "restore-ip-addresses",
    "title": "Restore IP Addresses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking"
    ],
    "acRate": 53.31833927268714
  },
  "94": {
    "titleSlug": "binary-tree-inorder-traversal",
    "title": "Binary Tree Inorder Traversal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 78.70551693039718
  },
  "95": {
    "titleSlug": "unique-binary-search-trees-ii",
    "title": "Unique Binary Search Trees II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Backtracking",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 60.520824950519525
  },
  "96": {
    "titleSlug": "unique-binary-search-trees",
    "title": "Unique Binary Search Trees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 62.511905697955584
  },
  "97": {
    "titleSlug": "interleaving-string",
    "title": "Interleaving String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 42.26740588225617
  },
  "98": {
    "titleSlug": "validate-binary-search-tree",
    "title": "Validate Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 34.46121512617479
  },
  "99": {
    "titleSlug": "recover-binary-search-tree",
    "title": "Recover Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 56.57647146992042
  },
  "100": {
    "titleSlug": "same-tree",
    "title": "Same Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 65.27199001091846
  },
  "101": {
    "titleSlug": "symmetric-tree",
    "title": "Symmetric Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 59.407071803309606
  },
  "102": {
    "titleSlug": "binary-tree-level-order-traversal",
    "title": "Binary Tree Level Order Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 70.74676796114534
  },
  "103": {
    "titleSlug": "binary-tree-zigzag-level-order-traversal",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 61.83168016371613
  },
  "104": {
    "titleSlug": "maximum-depth-of-binary-tree",
    "title": "Maximum Depth of Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 77.2166761974165
  },
  "105": {
    "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 66.98286019367428
  },
  "106": {
    "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
    "title": "Construct Binary Tree from Inorder and Postorder Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 66.28553156234707
  },
  "107": {
    "titleSlug": "binary-tree-level-order-traversal-ii",
    "title": "Binary Tree Level Order Traversal II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 66.14325262158496
  },
  "108": {
    "titleSlug": "convert-sorted-array-to-binary-search-tree",
    "title": "Convert Sorted Array to Binary Search Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 74.16775402156813
  },
  "109": {
    "titleSlug": "convert-sorted-list-to-binary-search-tree",
    "title": "Convert Sorted List to Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 64.57822043922829
  },
  "110": {
    "titleSlug": "balanced-binary-tree",
    "title": "Balanced Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 55.51148692070043
  },
  "111": {
    "titleSlug": "minimum-depth-of-binary-tree",
    "title": "Minimum Depth of Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 50.80541551358478
  },
  "112": {
    "titleSlug": "path-sum",
    "title": "Path Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 53.135172772458816
  },
  "113": {
    "titleSlug": "path-sum-ii",
    "title": "Path Sum II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Backtracking",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 60.604293861395895
  },
  "114": {
    "titleSlug": "flatten-binary-tree-to-linked-list",
    "title": "Flatten Binary Tree to Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 68.69203196578707
  },
  "115": {
    "titleSlug": "distinct-subsequences",
    "title": "Distinct Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 50.24677998546462
  },
  "116": {
    "titleSlug": "populating-next-right-pointers-in-each-node",
    "title": "Populating Next Right Pointers in Each Node",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 65.55645619524911
  },
  "117": {
    "titleSlug": "populating-next-right-pointers-in-each-node-ii",
    "title": "Populating Next Right Pointers in Each Node II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 55.692982783978614
  },
  "118": {
    "titleSlug": "pascals-triangle",
    "title": "Pascal's Triangle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 77.11752934737626
  },
  "119": {
    "titleSlug": "pascals-triangle-ii",
    "title": "Pascal's Triangle II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 66.03324975148
  },
  "120": {
    "titleSlug": "triangle",
    "title": "Triangle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 59.45075009117422
  },
  "121": {
    "titleSlug": "best-time-to-buy-and-sell-stock",
    "title": "Best Time to Buy and Sell Stock",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 55.352826653498376
  },
  "122": {
    "titleSlug": "best-time-to-buy-and-sell-stock-ii",
    "title": "Best Time to Buy and Sell Stock II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 69.61702359315339
  },
  "123": {
    "titleSlug": "best-time-to-buy-and-sell-stock-iii",
    "title": "Best Time to Buy and Sell Stock III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 51.36479815691142
  },
  "124": {
    "titleSlug": "binary-tree-maximum-path-sum",
    "title": "Binary Tree Maximum Path Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 41.28297013012905
  },
  "125": {
    "titleSlug": "valid-palindrome",
    "title": "Valid Palindrome",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 51.11774607184787
  },
  "126": {
    "titleSlug": "word-ladder-ii",
    "title": "Word Ladder II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Backtracking",
      "Breadth-First Search"
    ],
    "acRate": 27.163613145089176
  },
  "127": {
    "titleSlug": "word-ladder",
    "title": "Word Ladder",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Breadth-First Search"
    ],
    "acRate": 43.01728225360935
  },
  "128": {
    "titleSlug": "longest-consecutive-sequence",
    "title": "Longest Consecutive Sequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Union Find"
    ],
    "acRate": 47.02527688260998
  },
  "129": {
    "titleSlug": "sum-root-to-leaf-numbers",
    "title": "Sum Root to Leaf Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 68.62461559987712
  },
  "130": {
    "titleSlug": "surrounded-regions",
    "title": "Surrounded Regions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 43.06680649666283
  },
  "131": {
    "titleSlug": "palindrome-partitioning",
    "title": "Palindrome Partitioning",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ],
    "acRate": 72.3062523517861
  },
  "132": {
    "titleSlug": "palindrome-partitioning-ii",
    "title": "Palindrome Partitioning II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 35.386406740190466
  },
  "133": {
    "titleSlug": "clone-graph",
    "title": "Clone Graph",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 62.60657017462523
  },
  "134": {
    "titleSlug": "gas-station",
    "title": "Gas Station",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 46.482888517216765
  },
  "135": {
    "titleSlug": "candy",
    "title": "Candy",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 46.83817825479108
  },
  "136": {
    "titleSlug": "single-number",
    "title": "Single Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 76.0993258051765
  },
  "137": {
    "titleSlug": "single-number-ii",
    "title": "Single Number II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 65.37291250513275
  },
  "138": {
    "titleSlug": "copy-list-with-random-pointer",
    "title": "Copy List with Random Pointer",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List"
    ],
    "acRate": 60.71525820047996
  },
  "139": {
    "titleSlug": "word-break",
    "title": "Word Break",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ],
    "acRate": 48.340908697533536
  },
  "140": {
    "titleSlug": "word-break-ii",
    "title": "Word Break II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Trie",
      "Memoization"
    ],
    "acRate": 53.75012208937156
  },
  "141": {
    "titleSlug": "linked-list-cycle",
    "title": "Linked List Cycle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 52.69051614153318
  },
  "142": {
    "titleSlug": "linked-list-cycle-ii",
    "title": "Linked List Cycle II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 55.16187290684417
  },
  "143": {
    "titleSlug": "reorder-list",
    "title": "Reorder List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion"
    ],
    "acRate": 62.68570975695841
  },
  "144": {
    "titleSlug": "binary-tree-preorder-traversal",
    "title": "Binary Tree Preorder Traversal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 73.4327530807528
  },
  "145": {
    "titleSlug": "binary-tree-postorder-traversal",
    "title": "Binary Tree Postorder Traversal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 75.9353190468357
  },
  "146": {
    "titleSlug": "lru-cache",
    "title": "LRU Cache",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "acRate": 45.3544815446542
  },
  "147": {
    "titleSlug": "insertion-sort-list",
    "title": "Insertion Sort List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Sorting"
    ],
    "acRate": 56.58627669833677
  },
  "148": {
    "titleSlug": "sort-list",
    "title": "Sort List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers",
      "Divide and Conquer",
      "Sorting",
      "Merge Sort"
    ],
    "acRate": 62.00777140138285
  },
  "149": {
    "titleSlug": "max-points-on-a-line",
    "title": "Max Points on a Line",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Geometry"
    ],
    "acRate": 29.0577001108428
  },
  "150": {
    "titleSlug": "evaluate-reverse-polish-notation",
    "title": "Evaluate Reverse Polish Notation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Stack"
    ],
    "acRate": 55.10049919011997
  },
  "151": {
    "titleSlug": "reverse-words-in-a-string",
    "title": "Reverse Words in a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 52.25239888322665
  },
  "152": {
    "titleSlug": "maximum-product-subarray",
    "title": "Maximum Product Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 35.033331386568996
  },
  "153": {
    "titleSlug": "find-minimum-in-rotated-sorted-array",
    "title": "Find Minimum in Rotated Sorted Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 52.744528295414774
  },
  "154": {
    "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
    "title": "Find Minimum in Rotated Sorted Array II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 44.13835124625026
  },
  "155": {
    "titleSlug": "min-stack",
    "title": "Min Stack",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Design"
    ],
    "acRate": 56.55951981733164
  },
  "160": {
    "titleSlug": "intersection-of-two-linked-lists",
    "title": "Intersection of Two Linked Lists",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 61.33140081322339
  },
  "162": {
    "titleSlug": "find-peak-element",
    "title": "Find Peak Element",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 46.52486632480649
  },
  "164": {
    "titleSlug": "maximum-gap",
    "title": "Maximum Gap",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Bucket Sort",
      "Radix Sort"
    ],
    "acRate": 49.49919099406494
  },
  "165": {
    "titleSlug": "compare-version-numbers",
    "title": "Compare Version Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 42.430823068889914
  },
  "166": {
    "titleSlug": "fraction-to-recurring-decimal",
    "title": "Fraction to Recurring Decimal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String"
    ],
    "acRate": 26.27669310710154
  },
  "167": {
    "titleSlug": "two-sum-ii-input-array-is-sorted",
    "title": "Two Sum II - Input Array Is Sorted",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search"
    ],
    "acRate": 63.49315603829291
  },
  "168": {
    "titleSlug": "excel-sheet-column-title",
    "title": "Excel Sheet Column Title",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 43.72530415424173
  },
  "169": {
    "titleSlug": "majority-element",
    "title": "Majority Element",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting"
    ],
    "acRate": 65.77065243346746
  },
  "171": {
    "titleSlug": "excel-sheet-column-number",
    "title": "Excel Sheet Column Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 65.85839294424005
  },
  "172": {
    "titleSlug": "factorial-trailing-zeroes",
    "title": "Factorial Trailing Zeroes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 44.92718093418447
  },
  "173": {
    "titleSlug": "binary-search-tree-iterator",
    "title": "Binary Search Tree Iterator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Design",
      "Binary Search Tree",
      "Binary Tree",
      "Iterator"
    ],
    "acRate": 75.00934030537802
  },
  "174": {
    "titleSlug": "dungeon-game",
    "title": "Dungeon Game",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 39.57605646547824
  },
  "175": {
    "titleSlug": "combine-two-tables",
    "title": "Combine Two Tables",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 78.13949095056263
  },
  "176": {
    "titleSlug": "second-highest-salary",
    "title": "Second Highest Salary",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 44.04347942185676
  },
  "177": {
    "titleSlug": "nth-highest-salary",
    "title": "Nth Highest Salary",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 38.08447259617715
  },
  "178": {
    "titleSlug": "rank-scores",
    "title": "Rank Scores",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 65.42387865193086
  },
  "179": {
    "titleSlug": "largest-number",
    "title": "Largest Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Greedy",
      "Sorting"
    ],
    "acRate": 41.36468682112764
  },
  "180": {
    "titleSlug": "consecutive-numbers",
    "title": "Consecutive Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 46.20896473235938
  },
  "181": {
    "titleSlug": "employees-earning-more-than-their-managers",
    "title": "Employees Earning More Than Their Managers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 71.61744302626649
  },
  "182": {
    "titleSlug": "duplicate-emails",
    "title": "Duplicate Emails",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 72.49711774385858
  },
  "183": {
    "titleSlug": "customers-who-never-order",
    "title": "Customers Who Never Order",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 70.71034923022734
  },
  "184": {
    "titleSlug": "department-highest-salary",
    "title": "Department Highest Salary",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 54.97674398489819
  },
  "185": {
    "titleSlug": "department-top-three-salaries",
    "title": "Department Top Three Salaries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 57.90898820386862
  },
  "187": {
    "titleSlug": "repeated-dna-sequences",
    "title": "Repeated DNA Sequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ],
    "acRate": 51.45025679535489
  },
  "188": {
    "titleSlug": "best-time-to-buy-and-sell-stock-iv",
    "title": "Best Time to Buy and Sell Stock IV",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 47.3692690328333
  },
  "189": {
    "titleSlug": "rotate-array",
    "title": "Rotate Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Two Pointers"
    ],
    "acRate": 43.1467902693692
  },
  "190": {
    "titleSlug": "reverse-bits",
    "title": "Reverse Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Divide and Conquer",
      "Bit Manipulation"
    ],
    "acRate": 63.38938274027696
  },
  "191": {
    "titleSlug": "number-of-1-bits",
    "title": "Number of 1 Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Divide and Conquer",
      "Bit Manipulation"
    ],
    "acRate": 74.65752502658583
  },
  "192": {
    "titleSlug": "word-frequency",
    "title": "Word Frequency",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Shell"
    ],
    "acRate": 27.27494198048493
  },
  "193": {
    "titleSlug": "valid-phone-numbers",
    "title": "Valid Phone Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Shell"
    ],
    "acRate": 27.54569902950462
  },
  "194": {
    "titleSlug": "transpose-file",
    "title": "Transpose File",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Shell"
    ],
    "acRate": 28.55143695815414
  },
  "195": {
    "titleSlug": "tenth-line",
    "title": "Tenth Line",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Shell"
    ],
    "acRate": 34.64298299421829
  },
  "196": {
    "titleSlug": "delete-duplicate-emails",
    "title": "Delete Duplicate Emails",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 64.39254323482854
  },
  "197": {
    "titleSlug": "rising-temperature",
    "title": "Rising Temperature",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 50.22584776298361
  },
  "198": {
    "titleSlug": "house-robber",
    "title": "House Robber",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 52.36494328680137
  },
  "199": {
    "titleSlug": "binary-tree-right-side-view",
    "title": "Binary Tree Right Side View",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 67.28643760429934
  },
  "200": {
    "titleSlug": "number-of-islands",
    "title": "Number of Islands",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 62.454881521816056
  },
  "201": {
    "titleSlug": "bitwise-and-of-numbers-range",
    "title": "Bitwise AND of Numbers Range",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 47.81926063615636
  },
  "202": {
    "titleSlug": "happy-number",
    "title": "Happy Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Two Pointers"
    ],
    "acRate": 58.16880133765602
  },
  "203": {
    "titleSlug": "remove-linked-list-elements",
    "title": "Remove Linked List Elements",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Recursion"
    ],
    "acRate": 52.0780839890091
  },
  "204": {
    "titleSlug": "count-primes",
    "title": "Count Primes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Enumeration",
      "Number Theory"
    ],
    "acRate": 34.88776603334292
  },
  "205": {
    "titleSlug": "isomorphic-strings",
    "title": "Isomorphic Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 46.961005107907674
  },
  "206": {
    "titleSlug": "reverse-linked-list",
    "title": "Reverse Linked List",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Recursion"
    ],
    "acRate": 79.31054921888028
  },
  "207": {
    "titleSlug": "course-schedule",
    "title": "Course Schedule",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 49.39519254490419
  },
  "208": {
    "titleSlug": "implement-trie-prefix-tree",
    "title": "Implement Trie (Prefix Tree)",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "acRate": 68.06065685428024
  },
  "209": {
    "titleSlug": "minimum-size-subarray-sum",
    "title": "Minimum Size Subarray Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 49.52435221521914
  },
  "210": {
    "titleSlug": "course-schedule-ii",
    "title": "Course Schedule II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 53.58292371241164
  },
  "211": {
    "titleSlug": "design-add-and-search-words-data-structure",
    "title": "Design Add and Search Words Data Structure",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ],
    "acRate": 47.15646461289371
  },
  "212": {
    "titleSlug": "word-search-ii",
    "title": "Word Search II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Backtracking",
      "Trie",
      "Matrix"
    ],
    "acRate": 37.38206904645149
  },
  "213": {
    "titleSlug": "house-robber-ii",
    "title": "House Robber II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 43.66997828357413
  },
  "214": {
    "titleSlug": "shortest-palindrome",
    "title": "Shortest Palindrome",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 40.73241359366716
  },
  "215": {
    "titleSlug": "kth-largest-element-in-an-array",
    "title": "Kth Largest Element in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ],
    "acRate": 68.06766110646446
  },
  "216": {
    "titleSlug": "combination-sum-iii",
    "title": "Combination Sum III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking"
    ],
    "acRate": 72.00701282157088
  },
  "217": {
    "titleSlug": "contains-duplicate",
    "title": "Contains Duplicate",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 63.29988505278214
  },
  "218": {
    "titleSlug": "the-skyline-problem",
    "title": "The Skyline Problem",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Line Sweep",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 44.02603946777071
  },
  "219": {
    "titleSlug": "contains-duplicate-ii",
    "title": "Contains Duplicate II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 49.17732059872065
  },
  "220": {
    "titleSlug": "contains-duplicate-iii",
    "title": "Contains Duplicate III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window",
      "Sorting",
      "Bucket Sort",
      "Ordered Set"
    ],
    "acRate": 23.675941822422338
  },
  "221": {
    "titleSlug": "maximal-square",
    "title": "Maximal Square",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 48.86731315126393
  },
  "222": {
    "titleSlug": "count-complete-tree-nodes",
    "title": "Count Complete Tree Nodes",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Bit Manipulation",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 70.17659827623707
  },
  "223": {
    "titleSlug": "rectangle-area",
    "title": "Rectangle Area",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Geometry"
    ],
    "acRate": 47.43545487641781
  },
  "224": {
    "titleSlug": "basic-calculator",
    "title": "Basic Calculator",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Stack",
      "Recursion"
    ],
    "acRate": 45.702842216369135
  },
  "225": {
    "titleSlug": "implement-stack-using-queues",
    "title": "Implement Stack using Queues",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Design",
      "Queue"
    ],
    "acRate": 67.54815424426742
  },
  "226": {
    "titleSlug": "invert-binary-tree",
    "title": "Invert Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 79.09265936094707
  },
  "227": {
    "titleSlug": "basic-calculator-ii",
    "title": "Basic Calculator II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Stack"
    ],
    "acRate": 45.90108838124025
  },
  "228": {
    "titleSlug": "summary-ranges",
    "title": "Summary Ranges",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 53.08599286802145
  },
  "229": {
    "titleSlug": "majority-element-ii",
    "title": "Majority Element II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ],
    "acRate": 54.54097462941646
  },
  "230": {
    "titleSlug": "kth-smallest-element-in-a-bst",
    "title": "Kth Smallest Element in a BST",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 75.450644962115
  },
  "231": {
    "titleSlug": "power-of-two",
    "title": "Power of Two",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation",
      "Recursion"
    ],
    "acRate": 48.42812685514729
  },
  "232": {
    "titleSlug": "implement-queue-using-stacks",
    "title": "Implement Queue using Stacks",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Design",
      "Queue"
    ],
    "acRate": 68.16603826600442
  },
  "233": {
    "titleSlug": "number-of-digit-one",
    "title": "Number of Digit One",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Recursion"
    ],
    "acRate": 36.05043804871731
  },
  "234": {
    "titleSlug": "palindrome-linked-list",
    "title": "Palindrome Linked List",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion"
    ],
    "acRate": 56.01553739734989
  },
  "235": {
    "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
    "title": "Lowest Common Ancestor of a Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 68.49532755115143
  },
  "236": {
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
    "title": "Lowest Common Ancestor of a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 66.96055320915299
  },
  "237": {
    "titleSlug": "delete-node-in-a-linked-list",
    "title": "Delete Node in a Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 82.44190351266228
  },
  "238": {
    "titleSlug": "product-of-array-except-self",
    "title": "Product of Array Except Self",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 67.84112243094047
  },
  "239": {
    "titleSlug": "sliding-window-maximum",
    "title": "Sliding Window Maximum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "acRate": 47.68369296950705
  },
  "240": {
    "titleSlug": "search-a-2d-matrix-ii",
    "title": "Search a 2D Matrix II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Matrix"
    ],
    "acRate": 55.3826709373218
  },
  "241": {
    "titleSlug": "different-ways-to-add-parentheses",
    "title": "Different Ways to Add Parentheses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming",
      "Recursion",
      "Memoization"
    ],
    "acRate": 72.40983006773726
  },
  "242": {
    "titleSlug": "valid-anagram",
    "title": "Valid Anagram",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 66.76153121087822
  },
  "257": {
    "titleSlug": "binary-tree-paths",
    "title": "Binary Tree Paths",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 66.71078850414179
  },
  "258": {
    "titleSlug": "add-digits",
    "title": "Add Digits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation",
      "Number Theory"
    ],
    "acRate": 67.95701701919417
  },
  "260": {
    "titleSlug": "single-number-iii",
    "title": "Single Number III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 70.55651793003206
  },
  "262": {
    "titleSlug": "trips-and-users",
    "title": "Trips and Users",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 37.052636525253156
  },
  "263": {
    "titleSlug": "ugly-number",
    "title": "Ugly Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 42.35283690271413
  },
  "264": {
    "titleSlug": "ugly-number-ii",
    "title": "Ugly Number II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Dynamic Programming",
      "Heap (Priority Queue)"
    ],
    "acRate": 49.27189756502959
  },
  "268": {
    "titleSlug": "missing-number",
    "title": "Missing Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Binary Search",
      "Bit Manipulation",
      "Sorting"
    ],
    "acRate": 70.21173871137944
  },
  "273": {
    "titleSlug": "integer-to-english-words",
    "title": "Integer to English Words",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Recursion"
    ],
    "acRate": 34.395022085538116
  },
  "274": {
    "titleSlug": "h-index",
    "title": "H-Index",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 40.355404185581826
  },
  "275": {
    "titleSlug": "h-index-ii",
    "title": "H-Index II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 38.86256686125496
  },
  "278": {
    "titleSlug": "first-bad-version",
    "title": "First Bad Version",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Interactive"
    ],
    "acRate": 45.98663169075662
  },
  "279": {
    "titleSlug": "perfect-squares",
    "title": "Perfect Squares",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Breadth-First Search"
    ],
    "acRate": 55.72778058527381
  },
  "282": {
    "titleSlug": "expression-add-operators",
    "title": "Expression Add Operators",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Backtracking"
    ],
    "acRate": 41.771681465720825
  },
  "283": {
    "titleSlug": "move-zeroes",
    "title": "Move Zeroes",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 62.85441599042936
  },
  "284": {
    "titleSlug": "peeking-iterator",
    "title": "Peeking Iterator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Design",
      "Iterator"
    ],
    "acRate": 60.395709442561
  },
  "287": {
    "titleSlug": "find-the-duplicate-number",
    "title": "Find the Duplicate Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Bit Manipulation"
    ],
    "acRate": 62.943715178723906
  },
  "289": {
    "titleSlug": "game-of-life",
    "title": "Game of Life",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 71.49502840468327
  },
  "290": {
    "titleSlug": "word-pattern",
    "title": "Word Pattern",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 43.117488149289
  },
  "292": {
    "titleSlug": "nim-game",
    "title": "Nim Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Brainteaser",
      "Game Theory"
    ],
    "acRate": 58.184269969356095
  },
  "295": {
    "titleSlug": "find-median-from-data-stream",
    "title": "Find Median from Data Stream",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "Design",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ],
    "acRate": 53.37210006537616
  },
  "297": {
    "titleSlug": "serialize-and-deserialize-binary-tree",
    "title": "Serialize and Deserialize Binary Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ],
    "acRate": 59.10110316401989
  },
  "299": {
    "titleSlug": "bulls-and-cows",
    "title": "Bulls and Cows",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 51.447050036227516
  },
  "300": {
    "titleSlug": "longest-increasing-subsequence",
    "title": "Longest Increasing Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming"
    ],
    "acRate": 57.940994925410635
  },
  "301": {
    "titleSlug": "remove-invalid-parentheses",
    "title": "Remove Invalid Parentheses",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Breadth-First Search"
    ],
    "acRate": 49.2783015082202
  },
  "303": {
    "titleSlug": "range-sum-query-immutable",
    "title": "Range Sum Query - Immutable",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Design",
      "Prefix Sum"
    ],
    "acRate": 68.80726308189018
  },
  "304": {
    "titleSlug": "range-sum-query-2d-immutable",
    "title": "Range Sum Query 2D - Immutable",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Design",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 56.62902650974656
  },
  "306": {
    "titleSlug": "additive-number",
    "title": "Additive Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking"
    ],
    "acRate": 32.612757940233905
  },
  "307": {
    "titleSlug": "range-sum-query-mutable",
    "title": "Range Sum Query - Mutable",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Design",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 41.78413266939212
  },
  "309": {
    "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
    "title": "Best Time to Buy and Sell Stock with Cooldown",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 60.553186394156825
  },
  "310": {
    "titleSlug": "minimum-height-trees",
    "title": "Minimum Height Trees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 42.03762911360842
  },
  "312": {
    "titleSlug": "burst-balloons",
    "title": "Burst Balloons",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 61.512522883380804
  },
  "313": {
    "titleSlug": "super-ugly-number",
    "title": "Super Ugly Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 45.47191201247659
  },
  "315": {
    "titleSlug": "count-of-smaller-numbers-after-self",
    "title": "Count of Smaller Numbers After Self",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Merge Sort",
      "Ordered Set"
    ],
    "acRate": 42.91914887501168
  },
  "316": {
    "titleSlug": "remove-duplicate-letters",
    "title": "Remove Duplicate Letters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 51.45694706524978
  },
  "318": {
    "titleSlug": "maximum-product-of-word-lengths",
    "title": "Maximum Product of Word Lengths",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Bit Manipulation"
    ],
    "acRate": 60.583093817544096
  },
  "319": {
    "titleSlug": "bulb-switcher",
    "title": "Bulb Switcher",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Brainteaser"
    ],
    "acRate": 54.18153597840243
  },
  "321": {
    "titleSlug": "create-maximum-number",
    "title": "Create Maximum Number",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 32.613516202577955
  },
  "322": {
    "titleSlug": "coin-change",
    "title": "Coin Change",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search"
    ],
    "acRate": 46.637152216927305
  },
  "324": {
    "titleSlug": "wiggle-sort-ii",
    "title": "Wiggle Sort II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Greedy",
      "Sorting",
      "Quickselect"
    ],
    "acRate": 35.72117457952719
  },
  "326": {
    "titleSlug": "power-of-three",
    "title": "Power of Three",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Recursion"
    ],
    "acRate": 48.10690979428292
  },
  "327": {
    "titleSlug": "count-of-range-sum",
    "title": "Count of Range Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Merge Sort",
      "Ordered Set"
    ],
    "acRate": 37.119526685084224
  },
  "328": {
    "titleSlug": "odd-even-linked-list",
    "title": "Odd Even Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 62.010240658438164
  },
  "329": {
    "titleSlug": "longest-increasing-path-in-a-matrix",
    "title": "Longest Increasing Path in a Matrix",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Matrix"
    ],
    "acRate": 55.41859453508453
  },
  "330": {
    "titleSlug": "patching-array",
    "title": "Patching Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 53.57648380688149
  },
  "331": {
    "titleSlug": "verify-preorder-serialization-of-a-binary-tree",
    "title": "Verify Preorder Serialization of a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 46.23216773246921
  },
  "332": {
    "titleSlug": "reconstruct-itinerary",
    "title": "Reconstruct Itinerary",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Graph",
      "Eulerian Circuit"
    ],
    "acRate": 43.64507973414947
  },
  "334": {
    "titleSlug": "increasing-triplet-subsequence",
    "title": "Increasing Triplet Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 39.13415339115367
  },
  "335": {
    "titleSlug": "self-crossing",
    "title": "Self Crossing",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 32.245561686440745
  },
  "336": {
    "titleSlug": "palindrome-pairs",
    "title": "Palindrome Pairs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie"
    ],
    "acRate": 36.288459902506986
  },
  "337": {
    "titleSlug": "house-robber-iii",
    "title": "House Robber III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 55.001138678763326
  },
  "338": {
    "titleSlug": "counting-bits",
    "title": "Counting Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 79.78361448807398
  },
  "341": {
    "titleSlug": "flatten-nested-list-iterator",
    "title": "Flatten Nested List Iterator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Design",
      "Queue",
      "Iterator"
    ],
    "acRate": 65.27344481187995
  },
  "342": {
    "titleSlug": "power-of-four",
    "title": "Power of Four",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation",
      "Recursion"
    ],
    "acRate": 49.54362553803141
  },
  "343": {
    "titleSlug": "integer-break",
    "title": "Integer Break",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 61.19170169110356
  },
  "344": {
    "titleSlug": "reverse-string",
    "title": "Reverse String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 79.82621371100274
  },
  "345": {
    "titleSlug": "reverse-vowels-of-a-string",
    "title": "Reverse Vowels of a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 58.39045504280106
  },
  "347": {
    "titleSlug": "top-k-frequent-elements",
    "title": "Top K Frequent Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ],
    "acRate": 64.66061424370014
  },
  "349": {
    "titleSlug": "intersection-of-two-arrays",
    "title": "Intersection of Two Arrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 76.5582908165779
  },
  "350": {
    "titleSlug": "intersection-of-two-arrays-ii",
    "title": "Intersection of Two Arrays II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 59.11118098248343
  },
  "352": {
    "titleSlug": "data-stream-as-disjoint-intervals",
    "title": "Data Stream as Disjoint Intervals",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Design",
      "Ordered Set"
    ],
    "acRate": 59.53350427265649
  },
  "354": {
    "titleSlug": "russian-doll-envelopes",
    "title": "Russian Doll Envelopes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 37.3504562352146
  },
  "355": {
    "titleSlug": "design-twitter",
    "title": "Design Twitter",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Design",
      "Heap (Priority Queue)"
    ],
    "acRate": 42.80379192173914
  },
  "357": {
    "titleSlug": "count-numbers-with-unique-digits",
    "title": "Count Numbers with Unique Digits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Backtracking"
    ],
    "acRate": 54.45128181540413
  },
  "363": {
    "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
    "title": "Max Sum of Rectangle No Larger Than K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Matrix",
      "Prefix Sum",
      "Ordered Set"
    ],
    "acRate": 44.714663938265495
  },
  "365": {
    "titleSlug": "water-and-jug-problem",
    "title": "Water and Jug Problem",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 43.19815212690742
  },
  "367": {
    "titleSlug": "valid-perfect-square",
    "title": "Valid Perfect Square",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 44.220570422817815
  },
  "368": {
    "titleSlug": "largest-divisible-subset",
    "title": "Largest Divisible Subset",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 48.89748317205416
  },
  "371": {
    "titleSlug": "sum-of-two-integers",
    "title": "Sum of Two Integers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 53.799115752816064
  },
  "372": {
    "titleSlug": "super-pow",
    "title": "Super Pow",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Divide and Conquer"
    ],
    "acRate": 35.5465876625092
  },
  "373": {
    "titleSlug": "find-k-pairs-with-smallest-sums",
    "title": "Find K Pairs with Smallest Sums",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)"
    ],
    "acRate": 40.76636553988337
  },
  "374": {
    "titleSlug": "guess-number-higher-or-lower",
    "title": "Guess Number Higher or Lower",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Interactive"
    ],
    "acRate": 55.88478072725841
  },
  "375": {
    "titleSlug": "guess-number-higher-or-lower-ii",
    "title": "Guess Number Higher or Lower II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Game Theory"
    ],
    "acRate": 51.23734990438419
  },
  "376": {
    "titleSlug": "wiggle-subsequence",
    "title": "Wiggle Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 48.86936725859936
  },
  "377": {
    "titleSlug": "combination-sum-iv",
    "title": "Combination Sum IV",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 54.65623488834983
  },
  "378": {
    "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
    "title": "Kth Smallest Element in a Sorted Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 63.6350052911541
  },
  "380": {
    "titleSlug": "insert-delete-getrandom-o1",
    "title": "Insert Delete GetRandom O(1)",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "acRate": 55.01033820367407
  },
  "381": {
    "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
    "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "acRate": 35.80953405789304
  },
  "382": {
    "titleSlug": "linked-list-random-node",
    "title": "Linked List Random Node",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Math",
      "Reservoir Sampling",
      "Randomized"
    ],
    "acRate": 64.01625086434404
  },
  "383": {
    "titleSlug": "ransom-note",
    "title": "Ransom Note",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 64.60893500824366
  },
  "384": {
    "titleSlug": "shuffle-an-array",
    "title": "Shuffle an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Design",
      "Randomized"
    ],
    "acRate": 59.07658024892657
  },
  "385": {
    "titleSlug": "mini-parser",
    "title": "Mini Parser",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Depth-First Search"
    ],
    "acRate": 40.345913497023076
  },
  "386": {
    "titleSlug": "lexicographical-numbers",
    "title": "Lexicographical Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Trie"
    ],
    "acRate": 76.0368914512606
  },
  "387": {
    "titleSlug": "first-unique-character-in-a-string",
    "title": "First Unique Character in a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Queue",
      "Counting"
    ],
    "acRate": 63.7834760008405
  },
  "388": {
    "titleSlug": "longest-absolute-file-path",
    "title": "Longest Absolute File Path",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Depth-First Search"
    ],
    "acRate": 48.436782521442865
  },
  "389": {
    "titleSlug": "find-the-difference",
    "title": "Find the Difference",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sorting"
    ],
    "acRate": 59.74305730251556
  },
  "390": {
    "titleSlug": "elimination-game",
    "title": "Elimination Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Recursion"
    ],
    "acRate": 44.866922041207715
  },
  "391": {
    "titleSlug": "perfect-rectangle",
    "title": "Perfect Rectangle",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Line Sweep"
    ],
    "acRate": 35.35276704218403
  },
  "392": {
    "titleSlug": "is-subsequence",
    "title": "Is Subsequence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 48.427256346970715
  },
  "393": {
    "titleSlug": "utf-8-validation",
    "title": "UTF-8 Validation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 45.53739505613037
  },
  "394": {
    "titleSlug": "decode-string",
    "title": "Decode String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Recursion"
    ],
    "acRate": 61.240031436748374
  },
  "395": {
    "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
    "title": "Longest Substring with At Least K Repeating Characters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Divide and Conquer",
      "Sliding Window"
    ],
    "acRate": 45.47889833650247
  },
  "396": {
    "titleSlug": "rotate-function",
    "title": "Rotate Function",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 44.13178277467617
  },
  "397": {
    "titleSlug": "integer-replacement",
    "title": "Integer Replacement",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Greedy",
      "Bit Manipulation",
      "Memoization"
    ],
    "acRate": 36.557300216923075
  },
  "398": {
    "titleSlug": "random-pick-index",
    "title": "Random Pick Index",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Reservoir Sampling",
      "Randomized"
    ],
    "acRate": 64.56888694944645
  },
  "399": {
    "titleSlug": "evaluate-division",
    "title": "Evaluate Division",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Shortest Path"
    ],
    "acRate": 63.21199152306293
  },
  "400": {
    "titleSlug": "nth-digit",
    "title": "Nth Digit",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 35.741756228432685
  },
  "401": {
    "titleSlug": "binary-watch",
    "title": "Binary Watch",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 56.67318113472839
  },
  "402": {
    "titleSlug": "remove-k-digits",
    "title": "Remove K Digits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 35.090756499895456
  },
  "403": {
    "titleSlug": "frog-jump",
    "title": "Frog Jump",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 46.59381813282379
  },
  "404": {
    "titleSlug": "sum-of-left-leaves",
    "title": "Sum of Left Leaves",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 61.738311039578505
  },
  "405": {
    "titleSlug": "convert-a-number-to-hexadecimal",
    "title": "Convert a Number to Hexadecimal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 50.98197677056395
  },
  "406": {
    "titleSlug": "queue-reconstruction-by-height",
    "title": "Queue Reconstruction by Height",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Indexed Tree",
      "Segment Tree",
      "Sorting"
    ],
    "acRate": 74.18734398232141
  },
  "407": {
    "titleSlug": "trapping-rain-water-ii",
    "title": "Trapping Rain Water II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 58.90859870342666
  },
  "409": {
    "titleSlug": "longest-palindrome",
    "title": "Longest Palindrome",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy"
    ],
    "acRate": 55.5861151910106
  },
  "410": {
    "titleSlug": "split-array-largest-sum",
    "title": "Split Array Largest Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy",
      "Prefix Sum"
    ],
    "acRate": 58.29144249326744
  },
  "412": {
    "titleSlug": "fizz-buzz",
    "title": "Fizz Buzz",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation"
    ],
    "acRate": 74.43355133560743
  },
  "413": {
    "titleSlug": "arithmetic-slices",
    "title": "Arithmetic Slices",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sliding Window"
    ],
    "acRate": 64.81815308282488
  },
  "414": {
    "titleSlug": "third-maximum-number",
    "title": "Third Maximum Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 37.32551444899991
  },
  "415": {
    "titleSlug": "add-strings",
    "title": "Add Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation"
    ],
    "acRate": 51.907289164223435
  },
  "416": {
    "titleSlug": "partition-equal-subset-sum",
    "title": "Partition Equal Subset Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 48.528251457581895
  },
  "417": {
    "titleSlug": "pacific-atlantic-water-flow",
    "title": "Pacific Atlantic Water Flow",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 57.643931883210605
  },
  "419": {
    "titleSlug": "battleships-in-a-board",
    "title": "Battleships in a Board",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Matrix"
    ],
    "acRate": 76.62076559522926
  },
  "420": {
    "titleSlug": "strong-password-checker",
    "title": "Strong Password Checker",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 14.664680734675919
  },
  "421": {
    "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
    "title": "Maximum XOR of Two Numbers in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Trie"
    ],
    "acRate": 53.31264495297309
  },
  "423": {
    "titleSlug": "reconstruct-original-digits-from-english",
    "title": "Reconstruct Original Digits from English",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String"
    ],
    "acRate": 51.61420430646546
  },
  "424": {
    "titleSlug": "longest-repeating-character-replacement",
    "title": "Longest Repeating Character Replacement",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 57.38667743525485
  },
  "427": {
    "titleSlug": "construct-quad-tree",
    "title": "Construct Quad Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Tree",
      "Matrix"
    ],
    "acRate": 77.21420815883356
  },
  "429": {
    "titleSlug": "n-ary-tree-level-order-traversal",
    "title": "N-ary Tree Level Order Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search"
    ],
    "acRate": 71.25625796563013
  },
  "430": {
    "titleSlug": "flatten-a-multilevel-doubly-linked-list",
    "title": "Flatten a Multilevel Doubly Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Depth-First Search",
      "Doubly-Linked List"
    ],
    "acRate": 61.411673765832205
  },
  "432": {
    "titleSlug": "all-oone-data-structure",
    "title": "All O`one Data Structure",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "acRate": 44.1292335094178
  },
  "433": {
    "titleSlug": "minimum-genetic-mutation",
    "title": "Minimum Genetic Mutation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Breadth-First Search"
    ],
    "acRate": 55.54961414881889
  },
  "434": {
    "titleSlug": "number-of-segments-in-a-string",
    "title": "Number of Segments in a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 36.41682526582684
  },
  "435": {
    "titleSlug": "non-overlapping-intervals",
    "title": "Non-overlapping Intervals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 55.63715699018156
  },
  "436": {
    "titleSlug": "find-right-interval",
    "title": "Find Right Interval",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 54.01974229639789
  },
  "437": {
    "titleSlug": "path-sum-iii",
    "title": "Path Sum III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 46.09484980894747
  },
  "438": {
    "titleSlug": "find-all-anagrams-in-a-string",
    "title": "Find All Anagrams in a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 52.28525949335785
  },
  "440": {
    "titleSlug": "k-th-smallest-in-lexicographical-order",
    "title": "K-th Smallest in Lexicographical Order",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Trie"
    ],
    "acRate": 45.91170989173578
  },
  "441": {
    "titleSlug": "arranging-coins",
    "title": "Arranging Coins",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 47.37545150718599
  },
  "442": {
    "titleSlug": "find-all-duplicates-in-an-array",
    "title": "Find All Duplicates in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 76.43704462772642
  },
  "443": {
    "titleSlug": "string-compression",
    "title": "String Compression",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 58.218121298994106
  },
  "445": {
    "titleSlug": "add-two-numbers-ii",
    "title": "Add Two Numbers II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Math",
      "Stack"
    ],
    "acRate": 61.804195413795824
  },
  "446": {
    "titleSlug": "arithmetic-slices-ii-subsequence",
    "title": "Arithmetic Slices II - Subsequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 54.554602176078205
  },
  "447": {
    "titleSlug": "number-of-boomerangs",
    "title": "Number of Boomerangs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math"
    ],
    "acRate": 56.45533333675823
  },
  "448": {
    "titleSlug": "find-all-numbers-disappeared-in-an-array",
    "title": "Find All Numbers Disappeared in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 62.50349003717276
  },
  "449": {
    "titleSlug": "serialize-and-deserialize-bst",
    "title": "Serialize and Deserialize BST",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 58.65698597150519
  },
  "450": {
    "titleSlug": "delete-node-in-a-bst",
    "title": "Delete Node in a BST",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 53.10491267039246
  },
  "451": {
    "titleSlug": "sort-characters-by-frequency",
    "title": "Sort Characters By Frequency",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting"
    ],
    "acRate": 74.18774010541416
  },
  "452": {
    "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
    "title": "Minimum Number of Arrows to Burst Balloons",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 60.46576792552695
  },
  "453": {
    "titleSlug": "minimum-moves-to-equal-array-elements",
    "title": "Minimum Moves to Equal Array Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 57.74950516439053
  },
  "454": {
    "titleSlug": "4sum-ii",
    "title": "4Sum II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 57.60803223631442
  },
  "455": {
    "titleSlug": "assign-cookies",
    "title": "Assign Cookies",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 53.987034414704084
  },
  "456": {
    "titleSlug": "132-pattern",
    "title": "132 Pattern",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Stack",
      "Monotonic Stack",
      "Ordered Set"
    ],
    "acRate": 34.08857183694006
  },
  "457": {
    "titleSlug": "circular-array-loop",
    "title": "Circular Array Loop",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers"
    ],
    "acRate": 35.69976508854355
  },
  "458": {
    "titleSlug": "poor-pigs",
    "title": "Poor Pigs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 59.201728024042076
  },
  "459": {
    "titleSlug": "repeated-substring-pattern",
    "title": "Repeated Substring Pattern",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "String Matching"
    ],
    "acRate": 46.944521284770246
  },
  "460": {
    "titleSlug": "lfu-cache",
    "title": "LFU Cache",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "acRate": 46.7953290021457
  },
  "461": {
    "titleSlug": "hamming-distance",
    "title": "Hamming Distance",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 76.13400844767426
  },
  "462": {
    "titleSlug": "minimum-moves-to-equal-array-elements-ii",
    "title": "Minimum Moves to Equal Array Elements II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting"
    ],
    "acRate": 61.00406654343807
  },
  "463": {
    "titleSlug": "island-perimeter",
    "title": "Island Perimeter",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 73.59114257047158
  },
  "464": {
    "titleSlug": "can-i-win",
    "title": "Can I Win",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Memoization",
      "Game Theory",
      "Bitmask"
    ],
    "acRate": 30.41506141130758
  },
  "466": {
    "titleSlug": "count-the-repetitions",
    "title": "Count The Repetitions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 31.9598142303929
  },
  "467": {
    "titleSlug": "unique-substrings-in-wraparound-string",
    "title": "Unique Substrings in Wraparound String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 41.29302453684577
  },
  "468": {
    "titleSlug": "validate-ip-address",
    "title": "Validate IP Address",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 27.835498028780254
  },
  "470": {
    "titleSlug": "implement-rand10-using-rand7",
    "title": "Implement Rand10() Using Rand7()",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Rejection Sampling",
      "Randomized",
      "Probability and Statistics"
    ],
    "acRate": 45.871177947205304
  },
  "472": {
    "titleSlug": "concatenated-words",
    "title": "Concatenated Words",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Depth-First Search",
      "Trie"
    ],
    "acRate": 49.47200113142615
  },
  "473": {
    "titleSlug": "matchsticks-to-square",
    "title": "Matchsticks to Square",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 40.966349860909354
  },
  "474": {
    "titleSlug": "ones-and-zeroes",
    "title": "Ones and Zeroes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 48.92482374076677
  },
  "475": {
    "titleSlug": "heaters",
    "title": "Heaters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 40.045225812315635
  },
  "476": {
    "titleSlug": "number-complement",
    "title": "Number Complement",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 70.32946778494099
  },
  "477": {
    "titleSlug": "total-hamming-distance",
    "title": "Total Hamming Distance",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 53.83479926848385
  },
  "478": {
    "titleSlug": "generate-random-point-in-a-circle",
    "title": "Generate Random Point in a Circle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Geometry",
      "Rejection Sampling",
      "Randomized"
    ],
    "acRate": 41.03435127734063
  },
  "479": {
    "titleSlug": "largest-palindrome-product",
    "title": "Largest Palindrome Product",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 35.20778446090371
  },
  "480": {
    "titleSlug": "sliding-window-median",
    "title": "Sliding Window Median",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Heap (Priority Queue)"
    ],
    "acRate": 38.69660724366159
  },
  "481": {
    "titleSlug": "magical-string",
    "title": "Magical String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 52.500415943716874
  },
  "482": {
    "titleSlug": "license-key-formatting",
    "title": "License Key Formatting",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 44.75651674939694
  },
  "483": {
    "titleSlug": "smallest-good-base",
    "title": "Smallest Good Base",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 43.58089030155375
  },
  "485": {
    "titleSlug": "max-consecutive-ones",
    "title": "Max Consecutive Ones",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 62.657392257356015
  },
  "486": {
    "titleSlug": "predict-the-winner",
    "title": "Predict the Winner",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Recursion",
      "Game Theory"
    ],
    "acRate": 55.78582029720898
  },
  "488": {
    "titleSlug": "zuma-game",
    "title": "Zuma Game",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Stack",
      "Breadth-First Search",
      "Memoization"
    ],
    "acRate": 31.33990473046267
  },
  "491": {
    "titleSlug": "non-decreasing-subsequences",
    "title": "Non-decreasing Subsequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 61.731197753648395
  },
  "492": {
    "titleSlug": "construct-the-rectangle",
    "title": "Construct the Rectangle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 60.83699129217134
  },
  "493": {
    "titleSlug": "reverse-pairs",
    "title": "Reverse Pairs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Merge Sort",
      "Ordered Set"
    ],
    "acRate": 32.30180222242973
  },
  "494": {
    "titleSlug": "target-sum",
    "title": "Target Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking"
    ],
    "acRate": 50.881612371752915
  },
  "495": {
    "titleSlug": "teemo-attacking",
    "title": "Teemo Attacking",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 56.95366635795672
  },
  "496": {
    "titleSlug": "next-greater-element-i",
    "title": "Next Greater Element I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 74.64837052105989
  },
  "497": {
    "titleSlug": "random-point-in-non-overlapping-rectangles",
    "title": "Random Point in Non-overlapping Rectangles",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Reservoir Sampling",
      "Prefix Sum",
      "Ordered Set",
      "Randomized"
    ],
    "acRate": 38.12935130730818
  },
  "498": {
    "titleSlug": "diagonal-traverse",
    "title": "Diagonal Traverse",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 63.25900421704399
  },
  "500": {
    "titleSlug": "keyboard-row",
    "title": "Keyboard Row",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 72.61992956960329
  },
  "501": {
    "titleSlug": "find-mode-in-binary-search-tree",
    "title": "Find Mode in Binary Search Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 57.58683521793381
  },
  "502": {
    "titleSlug": "ipo",
    "title": "IPO",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 53.03933116238251
  },
  "503": {
    "titleSlug": "next-greater-element-ii",
    "title": "Next Greater Element II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 66.51326693874663
  },
  "504": {
    "titleSlug": "base-7",
    "title": "Base 7",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 52.03948691763759
  },
  "506": {
    "titleSlug": "relative-ranks",
    "title": "Relative Ranks",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 73.40090525268555
  },
  "507": {
    "titleSlug": "perfect-number",
    "title": "Perfect Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 45.091926136684215
  },
  "508": {
    "titleSlug": "most-frequent-subtree-sum",
    "title": "Most Frequent Subtree Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 67.9810659068301
  },
  "509": {
    "titleSlug": "fibonacci-number",
    "title": "Fibonacci Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Recursion",
      "Memoization"
    ],
    "acRate": 73.04224675043123
  },
  "511": {
    "titleSlug": "game-play-analysis-i",
    "title": "Game Play Analysis I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 75.76636878957083
  },
  "513": {
    "titleSlug": "find-bottom-left-tree-value",
    "title": "Find Bottom Left Tree Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 71.79337739948656
  },
  "514": {
    "titleSlug": "freedom-trail",
    "title": "Freedom Trail",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 58.90798390459302
  },
  "515": {
    "titleSlug": "find-largest-value-in-each-tree-row",
    "title": "Find Largest Value in Each Tree Row",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 66.26534106088445
  },
  "516": {
    "titleSlug": "longest-palindromic-subsequence",
    "title": "Longest Palindromic Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 64.23026985155856
  },
  "517": {
    "titleSlug": "super-washing-machines",
    "title": "Super Washing Machines",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 42.57150181272201
  },
  "518": {
    "titleSlug": "coin-change-ii",
    "title": "Coin Change II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 62.02412761551101
  },
  "519": {
    "titleSlug": "random-flip-matrix",
    "title": "Random Flip Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Reservoir Sampling",
      "Randomized"
    ],
    "acRate": 43.6110461034402
  },
  "520": {
    "titleSlug": "detect-capital",
    "title": "Detect Capital",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 56.145943666896336
  },
  "521": {
    "titleSlug": "longest-uncommon-subsequence-i",
    "title": "Longest Uncommon Subsequence I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 61.42605834913527
  },
  "522": {
    "titleSlug": "longest-uncommon-subsequence-ii",
    "title": "Longest Uncommon Subsequence II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "String",
      "Sorting"
    ],
    "acRate": 43.155566653586845
  },
  "523": {
    "titleSlug": "continuous-subarray-sum",
    "title": "Continuous Subarray Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Prefix Sum"
    ],
    "acRate": 30.93026874887645
  },
  "524": {
    "titleSlug": "longest-word-in-dictionary-through-deleting",
    "title": "Longest Word in Dictionary through Deleting",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String",
      "Sorting"
    ],
    "acRate": 51.80817298457542
  },
  "525": {
    "titleSlug": "contiguous-array",
    "title": "Contiguous Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 49.48564430887805
  },
  "526": {
    "titleSlug": "beautiful-arrangement",
    "title": "Beautiful Arrangement",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 64.55199095330518
  },
  "528": {
    "titleSlug": "random-pick-with-weight",
    "title": "Random Pick with Weight",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Prefix Sum",
      "Randomized"
    ],
    "acRate": 48.32849865162234
  },
  "529": {
    "titleSlug": "minesweeper",
    "title": "Minesweeper",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 68.15757182041288
  },
  "530": {
    "titleSlug": "minimum-absolute-difference-in-bst",
    "title": "Minimum Absolute Difference in BST",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 58.84180502076423
  },
  "532": {
    "titleSlug": "k-diff-pairs-in-an-array",
    "title": "K-diff Pairs in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 44.74513086769204
  },
  "535": {
    "titleSlug": "encode-and-decode-tinyurl",
    "title": "Encode and Decode TinyURL",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Design",
      "Hash Function"
    ],
    "acRate": 86.37877332663119
  },
  "537": {
    "titleSlug": "complex-number-multiplication",
    "title": "Complex Number Multiplication",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation"
    ],
    "acRate": 72.44588503700406
  },
  "538": {
    "titleSlug": "convert-bst-to-greater-tree",
    "title": "Convert BST to Greater Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 70.57942111099523
  },
  "539": {
    "titleSlug": "minimum-time-difference",
    "title": "Minimum Time Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "String",
      "Sorting"
    ],
    "acRate": 62.36932190586757
  },
  "540": {
    "titleSlug": "single-element-in-a-sorted-array",
    "title": "Single Element in a Sorted Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 59.20026691257683
  },
  "541": {
    "titleSlug": "reverse-string-ii",
    "title": "Reverse String II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 52.22414951687063
  },
  "542": {
    "titleSlug": "01-matrix",
    "title": "01 Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 51.67800065337234
  },
  "543": {
    "titleSlug": "diameter-of-binary-tree",
    "title": "Diameter of Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 63.73436510074823
  },
  "546": {
    "titleSlug": "remove-boxes",
    "title": "Remove Boxes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 48.3358024691358
  },
  "547": {
    "titleSlug": "number-of-provinces",
    "title": "Number of Provinces",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 68.82511976369848
  },
  "550": {
    "titleSlug": "game-play-analysis-iv",
    "title": "Game Play Analysis IV",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 39.496678246227205
  },
  "551": {
    "titleSlug": "student-attendance-record-i",
    "title": "Student Attendance Record I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 49.67782217782218
  },
  "552": {
    "titleSlug": "student-attendance-record-ii",
    "title": "Student Attendance Record II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 55.85607422268296
  },
  "553": {
    "titleSlug": "optimal-division",
    "title": "Optimal Division",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 61.82955225866542
  },
  "554": {
    "titleSlug": "brick-wall",
    "title": "Brick Wall",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 55.85312736337917
  },
  "556": {
    "titleSlug": "next-greater-element-iii",
    "title": "Next Greater Element III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Two Pointers",
      "String"
    ],
    "acRate": 34.6302060450812
  },
  "557": {
    "titleSlug": "reverse-words-in-a-string-iii",
    "title": "Reverse Words in a String III",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 83.68180026574888
  },
  "558": {
    "titleSlug": "logical-or-of-two-binary-grids-represented-as-quad-trees",
    "title": "Logical OR of Two Binary Grids Represented as Quad-Trees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Divide and Conquer",
      "Tree"
    ],
    "acRate": 50.67101283293689
  },
  "559": {
    "titleSlug": "maximum-depth-of-n-ary-tree",
    "title": "Maximum Depth of N-ary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 72.98360303642501
  },
  "560": {
    "titleSlug": "subarray-sum-equals-k",
    "title": "Subarray Sum Equals K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 45.595543041021806
  },
  "561": {
    "titleSlug": "array-partition",
    "title": "Array Partition",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 80.54307085047101
  },
  "563": {
    "titleSlug": "binary-tree-tilt",
    "title": "Binary Tree Tilt",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 64.19420854175893
  },
  "564": {
    "titleSlug": "find-the-closest-palindrome",
    "title": "Find the Closest Palindrome",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 31.65564937160765
  },
  "565": {
    "titleSlug": "array-nesting",
    "title": "Array Nesting",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search"
    ],
    "acRate": 56.02500985031501
  },
  "566": {
    "titleSlug": "reshape-the-matrix",
    "title": "Reshape the Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 63.93781684014759
  },
  "567": {
    "titleSlug": "permutation-in-string",
    "title": "Permutation in String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Two Pointers",
      "String",
      "Sliding Window"
    ],
    "acRate": 47.35232042586047
  },
  "570": {
    "titleSlug": "managers-with-at-least-5-direct-reports",
    "title": "Managers with at Least 5 Direct Reports",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 48.91457194218935
  },
  "572": {
    "titleSlug": "subtree-of-another-tree",
    "title": "Subtree of Another Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "String Matching",
      "Binary Tree",
      "Hash Function"
    ],
    "acRate": 50.0984709641104
  },
  "575": {
    "titleSlug": "distribute-candies",
    "title": "Distribute Candies",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 69.69557904230209
  },
  "576": {
    "titleSlug": "out-of-boundary-paths",
    "title": "Out of Boundary Paths",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 48.16814087762338
  },
  "577": {
    "titleSlug": "employee-bonus",
    "title": "Employee Bonus",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 77.00656271808306
  },
  "581": {
    "titleSlug": "shortest-unsorted-continuous-subarray",
    "title": "Shortest Unsorted Continuous Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Stack",
      "Greedy",
      "Sorting",
      "Monotonic Stack"
    ],
    "acRate": 37.47034164354437
  },
  "583": {
    "titleSlug": "delete-operation-for-two-strings",
    "title": "Delete Operation for Two Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 63.96531024338844
  },
  "584": {
    "titleSlug": "find-customer-referee",
    "title": "Find Customer Referee",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 71.69009056931283
  },
  "585": {
    "titleSlug": "investments-in-2016",
    "title": "Investments in 2016",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 50.16451020824364
  },
  "586": {
    "titleSlug": "customer-placing-the-largest-number-of-orders",
    "title": "Customer Placing the Largest Number of Orders",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 64.26553446304781
  },
  "587": {
    "titleSlug": "erect-the-fence",
    "title": "Erect the Fence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 52.262787126068375
  },
  "589": {
    "titleSlug": "n-ary-tree-preorder-traversal",
    "title": "N-ary Tree Preorder Traversal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 76.26693084743562
  },
  "590": {
    "titleSlug": "n-ary-tree-postorder-traversal",
    "title": "N-ary Tree Postorder Traversal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 80.70775662572592
  },
  "591": {
    "titleSlug": "tag-validator",
    "title": "Tag Validator",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 39.07425015126631
  },
  "592": {
    "titleSlug": "fraction-addition-and-subtraction",
    "title": "Fraction Addition and Subtraction",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation"
    ],
    "acRate": 66.1549030735685
  },
  "593": {
    "titleSlug": "valid-square",
    "title": "Valid Square",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Geometry"
    ],
    "acRate": 44.30953704146716
  },
  "594": {
    "titleSlug": "longest-harmonious-subsequence",
    "title": "Longest Harmonious Subsequence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Sorting",
      "Counting"
    ],
    "acRate": 63.61607661730863
  },
  "595": {
    "titleSlug": "big-countries",
    "title": "Big Countries",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 68.1935099102907
  },
  "596": {
    "titleSlug": "classes-with-at-least-5-students",
    "title": "Classes With at Least 5 Students",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 60.89306854874971
  },
  "598": {
    "titleSlug": "range-addition-ii",
    "title": "Range Addition II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 57.35572819466748
  },
  "599": {
    "titleSlug": "minimum-index-sum-of-two-lists",
    "title": "Minimum Index Sum of Two Lists",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 58.10039074241058
  },
  "600": {
    "titleSlug": "non-negative-integers-without-consecutive-ones",
    "title": "Non-negative Integers without Consecutive Ones",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 40.371111091181405
  },
  "601": {
    "titleSlug": "human-traffic-of-stadium",
    "title": "Human Traffic of Stadium",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 49.792367089075256
  },
  "602": {
    "titleSlug": "friend-requests-ii-who-has-the-most-friends",
    "title": "Friend Requests II: Who Has the Most Friends",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 61.03661537491788
  },
  "605": {
    "titleSlug": "can-place-flowers",
    "title": "Can Place Flowers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 28.924199864382157
  },
  "606": {
    "titleSlug": "construct-string-from-binary-tree",
    "title": "Construct String from Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 70.13816947034351
  },
  "607": {
    "titleSlug": "sales-person",
    "title": "Sales Person",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 65.91303567824546
  },
  "608": {
    "titleSlug": "tree-node",
    "title": "Tree Node",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 73.95983290368899
  },
  "609": {
    "titleSlug": "find-duplicate-file-in-system",
    "title": "Find Duplicate File in System",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 67.57430639125633
  },
  "610": {
    "titleSlug": "triangle-judgement",
    "title": "Triangle Judgement",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 73.73354223358346
  },
  "611": {
    "titleSlug": "valid-triangle-number",
    "title": "Valid Triangle Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 52.41917142753175
  },
  "617": {
    "titleSlug": "merge-two-binary-trees",
    "title": "Merge Two Binary Trees",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 78.7186216244105
  },
  "619": {
    "titleSlug": "biggest-single-number",
    "title": "Biggest Single Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 69.6247624669266
  },
  "620": {
    "titleSlug": "not-boring-movies",
    "title": "Not Boring Movies",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 74.93122507020587
  },
  "621": {
    "titleSlug": "task-scheduler",
    "title": "Task Scheduler",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ],
    "acRate": 61.6458164400611
  },
  "622": {
    "titleSlug": "design-circular-queue",
    "title": "Design Circular Queue",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Linked List",
      "Design",
      "Queue"
    ],
    "acRate": 52.7402270384045
  },
  "623": {
    "titleSlug": "add-one-row-to-tree",
    "title": "Add One Row to Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 64.05007813719178
  },
  "624": {
    "titleSlug": "maximum-distance-in-arrays",
    "title": "Maximum Distance in Arrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 45.61134278565471
  },
  "626": {
    "titleSlug": "exchange-seats",
    "title": "Exchange Seats",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 72.78900291335232
  },
  "627": {
    "titleSlug": "swap-salary",
    "title": "Swap Salary",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 84.0480485117314
  },
  "628": {
    "titleSlug": "maximum-product-of-three-numbers",
    "title": "Maximum Product of Three Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting"
    ],
    "acRate": 45.3397511081324
  },
  "629": {
    "titleSlug": "k-inverse-pairs-array",
    "title": "K Inverse Pairs Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 49.035638580234654
  },
  "630": {
    "titleSlug": "course-schedule-iii",
    "title": "Course Schedule III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 40.70967491307923
  },
  "632": {
    "titleSlug": "smallest-range-covering-elements-from-k-lists",
    "title": "Smallest Range Covering Elements from K Lists",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sliding Window",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 69.7709399317558
  },
  "633": {
    "titleSlug": "sum-of-square-numbers",
    "title": "Sum of Square Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Two Pointers",
      "Binary Search"
    ],
    "acRate": 36.509105161270234
  },
  "636": {
    "titleSlug": "exclusive-time-of-functions",
    "title": "Exclusive Time of Functions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack"
    ],
    "acRate": 64.868834728091
  },
  "637": {
    "titleSlug": "average-of-levels-in-binary-tree",
    "title": "Average of Levels in Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 74.17385768531682
  },
  "638": {
    "titleSlug": "shopping-offers",
    "title": "Shopping Offers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Memoization",
      "Bitmask"
    ],
    "acRate": 51.91777242240353
  },
  "639": {
    "titleSlug": "decode-ways-ii",
    "title": "Decode Ways II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 31.247662262589778
  },
  "640": {
    "titleSlug": "solve-the-equation",
    "title": "Solve the Equation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation"
    ],
    "acRate": 44.62003069458884
  },
  "641": {
    "titleSlug": "design-circular-deque",
    "title": "Design Circular Deque",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Linked List",
      "Design",
      "Queue"
    ],
    "acRate": 64.36460057302511
  },
  "643": {
    "titleSlug": "maximum-average-subarray-i",
    "title": "Maximum Average Subarray I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 45.49147743544821
  },
  "645": {
    "titleSlug": "set-mismatch",
    "title": "Set Mismatch",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Sorting"
    ],
    "acRate": 45.04288035691161
  },
  "646": {
    "titleSlug": "maximum-length-of-pair-chain",
    "title": "Maximum Length of Pair Chain",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 60.9531685689049
  },
  "647": {
    "titleSlug": "palindromic-substrings",
    "title": "Palindromic Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 71.75469126624766
  },
  "648": {
    "titleSlug": "replace-words",
    "title": "Replace Words",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie"
    ],
    "acRate": 68.38136725408931
  },
  "649": {
    "titleSlug": "dota2-senate",
    "title": "Dota2 Senate",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Queue"
    ],
    "acRate": 48.97580141452163
  },
  "650": {
    "titleSlug": "2-keys-keyboard",
    "title": "2 Keys Keyboard",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 59.10732943321362
  },
  "652": {
    "titleSlug": "find-duplicate-subtrees",
    "title": "Find Duplicate Subtrees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 60.13534598275746
  },
  "653": {
    "titleSlug": "two-sum-iv-input-is-a-bst",
    "title": "Two Sum IV - Input is a BST",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Two Pointers",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 62.32272526538804
  },
  "654": {
    "titleSlug": "maximum-binary-tree",
    "title": "Maximum Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Stack",
      "Tree",
      "Monotonic Stack",
      "Binary Tree"
    ],
    "acRate": 85.99107843011222
  },
  "655": {
    "titleSlug": "print-binary-tree",
    "title": "Print Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 65.64878586651525
  },
  "657": {
    "titleSlug": "robot-return-to-origin",
    "title": "Robot Return to Origin",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 76.18299125646921
  },
  "658": {
    "titleSlug": "find-k-closest-elements",
    "title": "Find K Closest Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 48.736947590213624
  },
  "659": {
    "titleSlug": "split-array-into-consecutive-subsequences",
    "title": "Split Array into Consecutive Subsequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 51.54007430021702
  },
  "661": {
    "titleSlug": "image-smoother",
    "title": "Image Smoother",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 68.41856147470308
  },
  "662": {
    "titleSlug": "maximum-width-of-binary-tree",
    "title": "Maximum Width of Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 44.22115786016347
  },
  "664": {
    "titleSlug": "strange-printer",
    "title": "Strange Printer",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 60.768929457428754
  },
  "665": {
    "titleSlug": "non-decreasing-array",
    "title": "Non-decreasing Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 25.096379509827376
  },
  "667": {
    "titleSlug": "beautiful-arrangement-ii",
    "title": "Beautiful Arrangement II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 60.44225272481704
  },
  "668": {
    "titleSlug": "kth-smallest-number-in-multiplication-table",
    "title": "Kth Smallest Number in Multiplication Table",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 52.94002571125147
  },
  "669": {
    "titleSlug": "trim-a-binary-search-tree",
    "title": "Trim a Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 66.36954077254099
  },
  "670": {
    "titleSlug": "maximum-swap",
    "title": "Maximum Swap",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 51.83522308763102
  },
  "671": {
    "titleSlug": "second-minimum-node-in-a-binary-tree",
    "title": "Second Minimum Node In a Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 45.36285142118336
  },
  "672": {
    "titleSlug": "bulb-switcher-ii",
    "title": "Bulb Switcher II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 49.504841549295776
  },
  "673": {
    "titleSlug": "number-of-longest-increasing-subsequence",
    "title": "Number of Longest Increasing Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 50.08236464225773
  },
  "674": {
    "titleSlug": "longest-continuous-increasing-subsequence",
    "title": "Longest Continuous Increasing Subsequence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 51.18932090471849
  },
  "675": {
    "titleSlug": "cut-off-trees-for-golf-event",
    "title": "Cut Off Trees for Golf Event",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 35.373943693795475
  },
  "676": {
    "titleSlug": "implement-magic-dictionary",
    "title": "Implement Magic Dictionary",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ],
    "acRate": 56.66374476158455
  },
  "677": {
    "titleSlug": "map-sum-pairs",
    "title": "Map Sum Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "acRate": 56.76219488448774
  },
  "678": {
    "titleSlug": "valid-parenthesis-string",
    "title": "Valid Parenthesis String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Stack",
      "Greedy"
    ],
    "acRate": 39.004226064581914
  },
  "679": {
    "titleSlug": "24-game",
    "title": "24 Game",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Backtracking"
    ],
    "acRate": 50.03424599378478
  },
  "680": {
    "titleSlug": "valid-palindrome-ii",
    "title": "Valid Palindrome II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 43.108551301912065
  },
  "682": {
    "titleSlug": "baseball-game",
    "title": "Baseball Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Simulation"
    ],
    "acRate": 78.93869414502734
  },
  "684": {
    "titleSlug": "redundant-connection",
    "title": "Redundant Connection",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 66.52502894430913
  },
  "685": {
    "titleSlug": "redundant-connection-ii",
    "title": "Redundant Connection II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 35.24986405305998
  },
  "686": {
    "titleSlug": "repeated-string-match",
    "title": "Repeated String Match",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "String Matching"
    ],
    "acRate": 36.9556426068408
  },
  "687": {
    "titleSlug": "longest-univalue-path",
    "title": "Longest Univalue Path",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 42.70390546116354
  },
  "688": {
    "titleSlug": "knight-probability-in-chessboard",
    "title": "Knight Probability in Chessboard",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 56.6164017451859
  },
  "689": {
    "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
    "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 59.46465067365121
  },
  "690": {
    "titleSlug": "employee-importance",
    "title": "Employee Importance",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 68.49809522152835
  },
  "691": {
    "titleSlug": "stickers-to-spell-word",
    "title": "Stickers to Spell Word",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Memoization",
      "Bitmask"
    ],
    "acRate": 50.0844147522441
  },
  "692": {
    "titleSlug": "top-k-frequent-words",
    "title": "Top K Frequent Words",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting"
    ],
    "acRate": 59.34154409834248
  },
  "693": {
    "titleSlug": "binary-number-with-alternating-bits",
    "title": "Binary Number with Alternating Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 63.47644627434582
  },
  "695": {
    "titleSlug": "max-area-of-island",
    "title": "Max Area of Island",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 73.21843596534622
  },
  "696": {
    "titleSlug": "count-binary-substrings",
    "title": "Count Binary Substrings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 65.95398913209081
  },
  "697": {
    "titleSlug": "degree-of-an-array",
    "title": "Degree of an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 57.46384154767389
  },
  "698": {
    "titleSlug": "partition-to-k-equal-sum-subsets",
    "title": "Partition to K Equal Sum Subsets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Memoization",
      "Bitmask"
    ],
    "acRate": 38.13482314962906
  },
  "699": {
    "titleSlug": "falling-squares",
    "title": "Falling Squares",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Segment Tree",
      "Ordered Set"
    ],
    "acRate": 46.335131685810424
  },
  "700": {
    "titleSlug": "search-in-a-binary-search-tree",
    "title": "Search in a Binary Search Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 81.8064318504391
  },
  "701": {
    "titleSlug": "insert-into-a-binary-search-tree",
    "title": "Insert into a Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 73.39892301094288
  },
  "703": {
    "titleSlug": "kth-largest-element-in-a-stream",
    "title": "Kth Largest Element in a Stream",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Design",
      "Binary Search Tree",
      "Heap (Priority Queue)",
      "Binary Tree",
      "Data Stream"
    ],
    "acRate": 59.94246025356135
  },
  "704": {
    "titleSlug": "binary-search",
    "title": "Binary Search",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 59.646202030001014
  },
  "705": {
    "titleSlug": "design-hashset",
    "title": "Design HashSet",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Linked List",
      "Design",
      "Hash Function"
    ],
    "acRate": 67.07648525932083
  },
  "706": {
    "titleSlug": "design-hashmap",
    "title": "Design HashMap",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Linked List",
      "Design",
      "Hash Function"
    ],
    "acRate": 65.91839888725755
  },
  "707": {
    "titleSlug": "design-linked-list",
    "title": "Design Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Design"
    ],
    "acRate": 29.131583837897317
  },
  "709": {
    "titleSlug": "to-lower-case",
    "title": "To Lower Case",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 84.20887470455486
  },
  "710": {
    "titleSlug": "random-pick-with-blacklist",
    "title": "Random Pick with Blacklist",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Binary Search",
      "Sorting",
      "Randomized"
    ],
    "acRate": 33.93712057647698
  },
  "712": {
    "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
    "title": "Minimum ASCII Delete Sum for Two Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 65.78063849653336
  },
  "713": {
    "titleSlug": "subarray-product-less-than-k",
    "title": "Subarray Product Less Than K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 52.9353337754777
  },
  "714": {
    "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
    "title": "Best Time to Buy and Sell Stock with Transaction Fee",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 70.66405151485586
  },
  "715": {
    "titleSlug": "range-module",
    "title": "Range Module",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Segment Tree",
      "Ordered Set"
    ],
    "acRate": 44.226889452175264
  },
  "717": {
    "titleSlug": "1-bit-and-2-bit-characters",
    "title": "1-bit and 2-bit Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 45.157299970323535
  },
  "718": {
    "titleSlug": "maximum-length-of-repeated-subarray",
    "title": "Maximum Length of Repeated Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ],
    "acRate": 51.02661401669531
  },
  "719": {
    "titleSlug": "find-k-th-smallest-pair-distance",
    "title": "Find K-th Smallest Pair Distance",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 45.83925014753615
  },
  "720": {
    "titleSlug": "longest-word-in-dictionary",
    "title": "Longest Word in Dictionary",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie",
      "Sorting"
    ],
    "acRate": 53.54491622450111
  },
  "721": {
    "titleSlug": "accounts-merge",
    "title": "Accounts Merge",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Sorting"
    ],
    "acRate": 59.73878853547006
  },
  "722": {
    "titleSlug": "remove-comments",
    "title": "Remove Comments",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 39.41676493710692
  },
  "724": {
    "titleSlug": "find-pivot-index",
    "title": "Find Pivot Index",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 60.68076273886776
  },
  "725": {
    "titleSlug": "split-linked-list-in-parts",
    "title": "Split Linked List in Parts",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 70.23069308381173
  },
  "726": {
    "titleSlug": "number-of-atoms",
    "title": "Number of Atoms",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Stack",
      "Sorting"
    ],
    "acRate": 64.99257617265104
  },
  "728": {
    "titleSlug": "self-dividing-numbers",
    "title": "Self Dividing Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 79.6778579939721
  },
  "729": {
    "titleSlug": "my-calendar-i",
    "title": "My Calendar I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Design",
      "Segment Tree",
      "Ordered Set"
    ],
    "acRate": 58.16369463546226
  },
  "730": {
    "titleSlug": "count-different-palindromic-subsequences",
    "title": "Count Different Palindromic Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 46.463490511532825
  },
  "731": {
    "titleSlug": "my-calendar-ii",
    "title": "My Calendar II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Design",
      "Segment Tree",
      "Prefix Sum",
      "Ordered Set"
    ],
    "acRate": 62.344371741422044
  },
  "732": {
    "titleSlug": "my-calendar-iii",
    "title": "My Calendar III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Design",
      "Segment Tree",
      "Prefix Sum",
      "Ordered Set"
    ],
    "acRate": 70.73089884536766
  },
  "733": {
    "titleSlug": "flood-fill",
    "title": "Flood Fill",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 66.63584671711227
  },
  "735": {
    "titleSlug": "asteroid-collision",
    "title": "Asteroid Collision",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Simulation"
    ],
    "acRate": 45.62708518119971
  },
  "736": {
    "titleSlug": "parse-lisp-expression",
    "title": "Parse Lisp Expression",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Stack",
      "Recursion"
    ],
    "acRate": 52.78794178794178
  },
  "738": {
    "titleSlug": "monotone-increasing-digits",
    "title": "Monotone Increasing Digits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 48.74996105797688
  },
  "739": {
    "titleSlug": "daily-temperatures",
    "title": "Daily Temperatures",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 67.4319133772177
  },
  "740": {
    "titleSlug": "delete-and-earn",
    "title": "Delete and Earn",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ],
    "acRate": 56.753904155566715
  },
  "741": {
    "titleSlug": "cherry-pickup",
    "title": "Cherry Pickup",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 37.94968925717668
  },
  "743": {
    "titleSlug": "network-delay-time",
    "title": "Network Delay Time",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 57.71570055345179
  },
  "744": {
    "titleSlug": "find-smallest-letter-greater-than-target",
    "title": "Find Smallest Letter Greater Than Target",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 54.172124687768545
  },
  "745": {
    "titleSlug": "prefix-and-suffix-search",
    "title": "Prefix and Suffix Search",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "acRate": 40.44717097099651
  },
  "746": {
    "titleSlug": "min-cost-climbing-stairs",
    "title": "Min Cost Climbing Stairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 67.27700597955145
  },
  "747": {
    "titleSlug": "largest-number-at-least-twice-of-others",
    "title": "Largest Number At Least Twice of Others",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 50.87150212708775
  },
  "748": {
    "titleSlug": "shortest-completing-word",
    "title": "Shortest Completing Word",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 61.486162731970104
  },
  "749": {
    "titleSlug": "contain-virus",
    "title": "Contain Virus",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix",
      "Simulation"
    ],
    "acRate": 52.663279383559335
  },
  "752": {
    "titleSlug": "open-the-lock",
    "title": "Open the Lock",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Breadth-First Search"
    ],
    "acRate": 60.75970948842885
  },
  "753": {
    "titleSlug": "cracking-the-safe",
    "title": "Cracking the Safe",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Graph",
      "Eulerian Circuit"
    ],
    "acRate": 57.85070447186488
  },
  "754": {
    "titleSlug": "reach-a-number",
    "title": "Reach a Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 43.923097699995154
  },
  "756": {
    "titleSlug": "pyramid-transition-matrix",
    "title": "Pyramid Transition Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 52.92714596211929
  },
  "757": {
    "titleSlug": "set-intersection-size-at-least-two",
    "title": "Set Intersection Size At Least Two",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 45.30248397435898
  },
  "761": {
    "titleSlug": "special-binary-string",
    "title": "Special Binary String",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Recursion"
    ],
    "acRate": 63.62122676979267
  },
  "762": {
    "titleSlug": "prime-number-of-set-bits-in-binary-representation",
    "title": "Prime Number of Set Bits in Binary Representation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 71.11702696599836
  },
  "763": {
    "titleSlug": "partition-labels",
    "title": "Partition Labels",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 81.55868356527091
  },
  "764": {
    "titleSlug": "largest-plus-sign",
    "title": "Largest Plus Sign",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 48.58825736259614
  },
  "765": {
    "titleSlug": "couples-holding-hands",
    "title": "Couples Holding Hands",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Greedy",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 58.4877153569903
  },
  "766": {
    "titleSlug": "toeplitz-matrix",
    "title": "Toeplitz Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 69.39594951371471
  },
  "767": {
    "titleSlug": "reorganize-string",
    "title": "Reorganize String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ],
    "acRate": 56.26420910667266
  },
  "768": {
    "titleSlug": "max-chunks-to-make-sorted-ii",
    "title": "Max Chunks To Make Sorted II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Greedy",
      "Sorting",
      "Monotonic Stack"
    ],
    "acRate": 54.24712548825439
  },
  "769": {
    "titleSlug": "max-chunks-to-make-sorted",
    "title": "Max Chunks To Make Sorted",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Greedy",
      "Sorting",
      "Monotonic Stack"
    ],
    "acRate": 64.07056368029049
  },
  "770": {
    "titleSlug": "basic-calculator-iv",
    "title": "Basic Calculator IV",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Stack",
      "Recursion"
    ],
    "acRate": 48.72925855912623
  },
  "771": {
    "titleSlug": "jewels-and-stones",
    "title": "Jewels and Stones",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 89.24986783950861
  },
  "773": {
    "titleSlug": "sliding-puzzle",
    "title": "Sliding Puzzle",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Breadth-First Search",
      "Memoization",
      "Matrix"
    ],
    "acRate": 73.1629392971246
  },
  "775": {
    "titleSlug": "global-and-local-inversions",
    "title": "Global and Local Inversions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 42.36142079336272
  },
  "777": {
    "titleSlug": "swap-adjacent-in-lr-string",
    "title": "Swap Adjacent in LR String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 37.546425601773876
  },
  "778": {
    "titleSlug": "swim-in-rising-water",
    "title": "Swim in Rising Water",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 63.03909295167912
  },
  "779": {
    "titleSlug": "k-th-symbol-in-grammar",
    "title": "K-th Symbol in Grammar",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation",
      "Recursion"
    ],
    "acRate": 47.49391248047068
  },
  "780": {
    "titleSlug": "reaching-points",
    "title": "Reaching Points",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 33.69335744381397
  },
  "781": {
    "titleSlug": "rabbits-in-forest",
    "title": "Rabbits in Forest",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Greedy"
    ],
    "acRate": 58.26025020422768
  },
  "782": {
    "titleSlug": "transform-to-chessboard",
    "title": "Transform to Chessboard",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation",
      "Matrix"
    ],
    "acRate": 50.5658160267709
  },
  "783": {
    "titleSlug": "minimum-distance-between-bst-nodes",
    "title": "Minimum Distance Between BST Nodes",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 60.36515919130034
  },
  "784": {
    "titleSlug": "letter-case-permutation",
    "title": "Letter Case Permutation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 75.20754071918229
  },
  "785": {
    "titleSlug": "is-graph-bipartite",
    "title": "Is Graph Bipartite?",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 57.85078801098964
  },
  "786": {
    "titleSlug": "k-th-smallest-prime-fraction",
    "title": "K-th Smallest Prime Fraction",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 68.55595453852537
  },
  "787": {
    "titleSlug": "cheapest-flights-within-k-stops",
    "title": "Cheapest Flights Within K Stops",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 40.48702855967357
  },
  "788": {
    "titleSlug": "rotated-digits",
    "title": "Rotated Digits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 56.45692478032463
  },
  "789": {
    "titleSlug": "escape-the-ghosts",
    "title": "Escape The Ghosts",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 62.64215863817457
  },
  "790": {
    "titleSlug": "domino-and-tromino-tiling",
    "title": "Domino and Tromino Tiling",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 51.94449671314197
  },
  "791": {
    "titleSlug": "custom-sort-string",
    "title": "Custom Sort String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 72.03906189267362
  },
  "792": {
    "titleSlug": "number-of-matching-subsequences",
    "title": "Number of Matching Subsequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Binary Search",
      "Dynamic Programming",
      "Trie",
      "Sorting"
    ],
    "acRate": 50.69019229773283
  },
  "793": {
    "titleSlug": "preimage-size-of-factorial-zeroes-function",
    "title": "Preimage Size of Factorial Zeroes Function",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 45.866543290361925
  },
  "794": {
    "titleSlug": "valid-tic-tac-toe-state",
    "title": "Valid Tic-Tac-Toe State",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 34.61055378843487
  },
  "795": {
    "titleSlug": "number-of-subarrays-with-bounded-maximum",
    "title": "Number of Subarrays with Bounded Maximum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 54.01901009079049
  },
  "796": {
    "titleSlug": "rotate-string",
    "title": "Rotate String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "String Matching"
    ],
    "acRate": 64.05059287263438
  },
  "797": {
    "titleSlug": "all-paths-from-source-to-target",
    "title": "All Paths From Source to Target",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Backtracking",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 83.16025027366109
  },
  "798": {
    "titleSlug": "smallest-rotation-with-highest-score",
    "title": "Smallest Rotation with Highest Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 52.24646568975534
  },
  "799": {
    "titleSlug": "champagne-tower",
    "title": "Champagne Tower",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 58.31121255267846
  },
  "801": {
    "titleSlug": "minimum-swaps-to-make-sequences-increasing",
    "title": "Minimum Swaps To Make Sequences Increasing",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 40.80767584855515
  },
  "802": {
    "titleSlug": "find-eventual-safe-states",
    "title": "Find Eventual Safe States",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 68.86604477557151
  },
  "803": {
    "titleSlug": "bricks-falling-when-hit",
    "title": "Bricks Falling When Hit",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Union Find",
      "Matrix"
    ],
    "acRate": 35.80315322850451
  },
  "804": {
    "titleSlug": "unique-morse-code-words",
    "title": "Unique Morse Code Words",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 83.27357239152687
  },
  "805": {
    "titleSlug": "split-array-with-same-average",
    "title": "Split Array With Same Average",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 26.06105455608276
  },
  "806": {
    "titleSlug": "number-of-lines-to-write-string",
    "title": "Number of Lines To Write String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 70.82440236703245
  },
  "807": {
    "titleSlug": "max-increase-to-keep-city-skyline",
    "title": "Max Increase to Keep City Skyline",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Matrix"
    ],
    "acRate": 86.23076328203541
  },
  "808": {
    "titleSlug": "soup-servings",
    "title": "Soup Servings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Probability and Statistics"
    ],
    "acRate": 53.21026287439631
  },
  "809": {
    "titleSlug": "expressive-words",
    "title": "Expressive Words",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String"
    ],
    "acRate": 46.415308158986
  },
  "810": {
    "titleSlug": "chalkboard-xor-game",
    "title": "Chalkboard XOR Game",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation",
      "Brainteaser",
      "Game Theory"
    ],
    "acRate": 63.16006770983857
  },
  "811": {
    "titleSlug": "subdomain-visit-count",
    "title": "Subdomain Visit Count",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 76.84682376258408
  },
  "812": {
    "titleSlug": "largest-triangle-area",
    "title": "Largest Triangle Area",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 62.16734939413905
  },
  "813": {
    "titleSlug": "largest-sum-of-averages",
    "title": "Largest Sum of Averages",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 54.10383024155879
  },
  "814": {
    "titleSlug": "binary-tree-pruning",
    "title": "Binary Tree Pruning",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 72.36840000639806
  },
  "815": {
    "titleSlug": "bus-routes",
    "title": "Bus Routes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Breadth-First Search"
    ],
    "acRate": 46.95282010888102
  },
  "816": {
    "titleSlug": "ambiguous-coordinates",
    "title": "Ambiguous Coordinates",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Enumeration"
    ],
    "acRate": 55.895196506550214
  },
  "817": {
    "titleSlug": "linked-list-components",
    "title": "Linked List Components",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Linked List"
    ],
    "acRate": 57.252967868153924
  },
  "818": {
    "titleSlug": "race-car",
    "title": "Race Car",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 44.15640449438202
  },
  "819": {
    "titleSlug": "most-common-word",
    "title": "Most Common Word",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 44.603900411458035
  },
  "820": {
    "titleSlug": "short-encoding-of-words",
    "title": "Short Encoding of Words",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie"
    ],
    "acRate": 60.57397837113599
  },
  "821": {
    "titleSlug": "shortest-distance-to-a-character",
    "title": "Shortest Distance to a Character",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String"
    ],
    "acRate": 72.2165089583236
  },
  "822": {
    "titleSlug": "card-flipping-game",
    "title": "Card Flipping Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 48.41340450771055
  },
  "823": {
    "titleSlug": "binary-trees-with-factors",
    "title": "Binary Trees With Factors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 52.92799333126074
  },
  "824": {
    "titleSlug": "goat-latin",
    "title": "Goat Latin",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 69.4133051981084
  },
  "825": {
    "titleSlug": "friends-of-appropriate-ages",
    "title": "Friends Of Appropriate Ages",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 49.137639788739925
  },
  "826": {
    "titleSlug": "most-profit-assigning-work",
    "title": "Most Profit Assigning Work",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 55.95760224987599
  },
  "827": {
    "titleSlug": "making-a-large-island",
    "title": "Making A Large Island",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 55.10545444426752
  },
  "828": {
    "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
    "title": "Count Unique Characters of All Substrings of a Given String",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 52.90305771376271
  },
  "829": {
    "titleSlug": "consecutive-numbers-sum",
    "title": "Consecutive Numbers Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 42.06101220155389
  },
  "830": {
    "titleSlug": "positions-of-large-groups",
    "title": "Positions of Large Groups",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 53.10785842138691
  },
  "831": {
    "titleSlug": "masking-personal-information",
    "title": "Masking Personal Information",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 50.5690742055552
  },
  "832": {
    "titleSlug": "flipping-an-image",
    "title": "Flipping an Image",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Bit Manipulation",
      "Matrix",
      "Simulation"
    ],
    "acRate": 83.00035646623142
  },
  "833": {
    "titleSlug": "find-and-replace-in-string",
    "title": "Find And Replace in String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 51.25455100949665
  },
  "834": {
    "titleSlug": "sum-of-distances-in-tree",
    "title": "Sum of Distances in Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Graph"
    ],
    "acRate": 65.36467004221348
  },
  "835": {
    "titleSlug": "image-overlap",
    "title": "Image Overlap",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 63.747215010695626
  },
  "836": {
    "titleSlug": "rectangle-overlap",
    "title": "Rectangle Overlap",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Geometry"
    ],
    "acRate": 45.79415988511249
  },
  "837": {
    "titleSlug": "new-21-game",
    "title": "New 21 Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Sliding Window",
      "Probability and Statistics"
    ],
    "acRate": 44.780046594490884
  },
  "838": {
    "titleSlug": "push-dominoes",
    "title": "Push Dominoes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 63.033544888002154
  },
  "839": {
    "titleSlug": "similar-string-groups",
    "title": "Similar String Groups",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find"
    ],
    "acRate": 55.4246947082768
  },
  "840": {
    "titleSlug": "magic-squares-in-grid",
    "title": "Magic Squares In Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Matrix"
    ],
    "acRate": 51.52488687782806
  },
  "841": {
    "titleSlug": "keys-and-rooms",
    "title": "Keys and Rooms",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 74.768207242278
  },
  "842": {
    "titleSlug": "split-array-into-fibonacci-sequence",
    "title": "Split Array into Fibonacci Sequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking"
    ],
    "acRate": 39.694946534223526
  },
  "843": {
    "titleSlug": "guess-the-word",
    "title": "Guess the Word",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "String",
      "Interactive",
      "Game Theory"
    ],
    "acRate": 37.585679142175735
  },
  "844": {
    "titleSlug": "backspace-string-compare",
    "title": "Backspace String Compare",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 49.49521522376708
  },
  "845": {
    "titleSlug": "longest-mountain-in-array",
    "title": "Longest Mountain in Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Enumeration"
    ],
    "acRate": 41.16382011319374
  },
  "846": {
    "titleSlug": "hand-of-straights",
    "title": "Hand of Straights",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting"
    ],
    "acRate": 57.187646590703025
  },
  "847": {
    "titleSlug": "shortest-path-visiting-all-nodes",
    "title": "Shortest Path Visiting All Nodes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Bit Manipulation",
      "Breadth-First Search",
      "Graph",
      "Bitmask"
    ],
    "acRate": 65.45864525159682
  },
  "848": {
    "titleSlug": "shifting-letters",
    "title": "Shifting Letters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Prefix Sum"
    ],
    "acRate": 45.67684749474681
  },
  "849": {
    "titleSlug": "maximize-distance-to-closest-person",
    "title": "Maximize Distance to Closest Person",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 49.0359276011266
  },
  "850": {
    "titleSlug": "rectangle-area-ii",
    "title": "Rectangle Area II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Segment Tree",
      "Line Sweep",
      "Ordered Set"
    ],
    "acRate": 54.554387344011005
  },
  "851": {
    "titleSlug": "loud-and-rich",
    "title": "Loud and Rich",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 61.82174075744346
  },
  "852": {
    "titleSlug": "peak-index-in-a-mountain-array",
    "title": "Peak Index in a Mountain Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 67.5096268457511
  },
  "853": {
    "titleSlug": "car-fleet",
    "title": "Car Fleet",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Sorting",
      "Monotonic Stack"
    ],
    "acRate": 53.574441266301456
  },
  "854": {
    "titleSlug": "k-similar-strings",
    "title": "K-Similar Strings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Breadth-First Search"
    ],
    "acRate": 40.07401889304508
  },
  "855": {
    "titleSlug": "exam-room",
    "title": "Exam Room",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 42.90403299782219
  },
  "856": {
    "titleSlug": "score-of-parentheses",
    "title": "Score of Parentheses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 63.68505066040828
  },
  "857": {
    "titleSlug": "minimum-cost-to-hire-k-workers",
    "title": "Minimum Cost to Hire K Workers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 63.46255573188242
  },
  "858": {
    "titleSlug": "mirror-reflection",
    "title": "Mirror Reflection",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Geometry",
      "Number Theory"
    ],
    "acRate": 61.94815489816935
  },
  "859": {
    "titleSlug": "buddy-strings",
    "title": "Buddy Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 33.67089132886456
  },
  "860": {
    "titleSlug": "lemonade-change",
    "title": "Lemonade Change",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 58.50343534042462
  },
  "861": {
    "titleSlug": "score-after-flipping-matrix",
    "title": "Score After Flipping Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Bit Manipulation",
      "Matrix"
    ],
    "acRate": 80.25546797779862
  },
  "862": {
    "titleSlug": "shortest-subarray-with-sum-at-least-k",
    "title": "Shortest Subarray with Sum at Least K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Prefix Sum",
      "Monotonic Queue"
    ],
    "acRate": 32.30108659328196
  },
  "863": {
    "titleSlug": "all-nodes-distance-k-in-binary-tree",
    "title": "All Nodes Distance K in Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 66.5635137561376
  },
  "864": {
    "titleSlug": "shortest-path-to-get-all-keys",
    "title": "Shortest Path to Get All Keys",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 53.82626292909609
  },
  "865": {
    "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
    "title": "Smallest Subtree with all the Deepest Nodes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 72.50822811715261
  },
  "866": {
    "titleSlug": "prime-palindrome",
    "title": "Prime Palindrome",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Number Theory"
    ],
    "acRate": 27.02793087702825
  },
  "867": {
    "titleSlug": "transpose-matrix",
    "title": "Transpose Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 74.43689805831022
  },
  "868": {
    "titleSlug": "binary-gap",
    "title": "Binary Gap",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 64.71980008507018
  },
  "869": {
    "titleSlug": "reordered-power-of-2",
    "title": "Reordered Power of 2",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Sorting",
      "Counting",
      "Enumeration"
    ],
    "acRate": 62.13865745692061
  },
  "870": {
    "titleSlug": "advantage-shuffle",
    "title": "Advantage Shuffle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 53.46150284570509
  },
  "871": {
    "titleSlug": "minimum-number-of-refueling-stops",
    "title": "Minimum Number of Refueling Stops",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 40.615368278535115
  },
  "872": {
    "titleSlug": "leaf-similar-trees",
    "title": "Leaf-Similar Trees",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 70.11697116357331
  },
  "873": {
    "titleSlug": "length-of-longest-fibonacci-subsequence",
    "title": "Length of Longest Fibonacci Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ],
    "acRate": 57.59253588636349
  },
  "874": {
    "titleSlug": "walking-robot-simulation",
    "title": "Walking Robot Simulation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Simulation"
    ],
    "acRate": 58.260089750185784
  },
  "875": {
    "titleSlug": "koko-eating-bananas",
    "title": "Koko Eating Bananas",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 49.054065058316375
  },
  "876": {
    "titleSlug": "middle-of-the-linked-list",
    "title": "Middle of the Linked List",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 80.68494804392702
  },
  "877": {
    "titleSlug": "stone-game",
    "title": "Stone Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Game Theory"
    ],
    "acRate": 71.65484933840395
  },
  "878": {
    "titleSlug": "nth-magical-number",
    "title": "Nth Magical Number",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 35.86222725222195
  },
  "879": {
    "titleSlug": "profitable-schemes",
    "title": "Profitable Schemes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 48.008794351113124
  },
  "880": {
    "titleSlug": "decoded-string-at-index",
    "title": "Decoded String at Index",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 36.66175110600115
  },
  "881": {
    "titleSlug": "boats-to-save-people",
    "title": "Boats to Save People",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 60.41228026616348
  },
  "882": {
    "titleSlug": "reachable-nodes-in-subdivided-graph",
    "title": "Reachable Nodes In Subdivided Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 50.819798440533795
  },
  "883": {
    "titleSlug": "projection-area-of-3d-shapes",
    "title": "Projection Area of 3D Shapes",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Matrix"
    ],
    "acRate": 74.23790069138906
  },
  "884": {
    "titleSlug": "uncommon-words-from-two-sentences",
    "title": "Uncommon Words from Two Sentences",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 75.3499390532221
  },
  "885": {
    "titleSlug": "spiral-matrix-iii",
    "title": "Spiral Matrix III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 84.47381292134548
  },
  "886": {
    "titleSlug": "possible-bipartition",
    "title": "Possible Bipartition",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 51.585274390897204
  },
  "887": {
    "titleSlug": "super-egg-drop",
    "title": "Super Egg Drop",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search",
      "Dynamic Programming"
    ],
    "acRate": 28.828918575190354
  },
  "888": {
    "titleSlug": "fair-candy-swap",
    "title": "Fair Candy Swap",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 63.36461148792222
  },
  "889": {
    "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
    "title": "Construct Binary Tree from Preorder and Postorder Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 78.02007471416172
  },
  "890": {
    "titleSlug": "find-and-replace-pattern",
    "title": "Find and Replace Pattern",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 76.8370136539391
  },
  "891": {
    "titleSlug": "sum-of-subsequence-widths",
    "title": "Sum of Subsequence Widths",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting"
    ],
    "acRate": 39.07242286227468
  },
  "892": {
    "titleSlug": "surface-area-of-3d-shapes",
    "title": "Surface Area of 3D Shapes",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Matrix"
    ],
    "acRate": 68.19955010108488
  },
  "893": {
    "titleSlug": "groups-of-special-equivalent-strings",
    "title": "Groups of Special-Equivalent Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 72.86021335232142
  },
  "894": {
    "titleSlug": "all-possible-full-binary-trees",
    "title": "All Possible Full Binary Trees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Recursion",
      "Memoization",
      "Binary Tree"
    ],
    "acRate": 82.70389040737165
  },
  "895": {
    "titleSlug": "maximum-frequency-stack",
    "title": "Maximum Frequency Stack",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Stack",
      "Design",
      "Ordered Set"
    ],
    "acRate": 66.26203089349872
  },
  "896": {
    "titleSlug": "monotonic-array",
    "title": "Monotonic Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 61.742866952255746
  },
  "897": {
    "titleSlug": "increasing-order-search-tree",
    "title": "Increasing Order Search Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 78.66833558122521
  },
  "898": {
    "titleSlug": "bitwise-ors-of-subarrays",
    "title": "Bitwise ORs of Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 40.83429261572719
  },
  "899": {
    "titleSlug": "orderly-queue",
    "title": "Orderly Queue",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Sorting"
    ],
    "acRate": 66.27115313976235
  },
  "900": {
    "titleSlug": "rle-iterator",
    "title": "RLE Iterator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Design",
      "Counting",
      "Iterator"
    ],
    "acRate": 58.89348125589152
  },
  "901": {
    "titleSlug": "online-stock-span",
    "title": "Online Stock Span",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Stack",
      "Design",
      "Monotonic Stack",
      "Data Stream"
    ],
    "acRate": 67.56096509505812
  },
  "902": {
    "titleSlug": "numbers-at-most-n-given-digit-set",
    "title": "Numbers At Most N Given Digit Set",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "String",
      "Binary Search",
      "Dynamic Programming"
    ],
    "acRate": 43.4267383053878
  },
  "903": {
    "titleSlug": "valid-permutations-for-di-sequence",
    "title": "Valid Permutations for DI Sequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 56.81150550795594
  },
  "904": {
    "titleSlug": "fruit-into-baskets",
    "title": "Fruit Into Baskets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 46.64636789557461
  },
  "905": {
    "titleSlug": "sort-array-by-parity",
    "title": "Sort Array By Parity",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 76.32388826997844
  },
  "906": {
    "titleSlug": "super-palindromes",
    "title": "Super Palindromes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Enumeration"
    ],
    "acRate": 39.336926825666396
  },
  "907": {
    "titleSlug": "sum-of-subarray-minimums",
    "title": "Sum of Subarray Minimums",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 37.69892720411606
  },
  "908": {
    "titleSlug": "smallest-range-i",
    "title": "Smallest Range I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 71.9660524342581
  },
  "909": {
    "titleSlug": "snakes-and-ladders",
    "title": "Snakes and Ladders",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 47.84230588604792
  },
  "910": {
    "titleSlug": "smallest-range-ii",
    "title": "Smallest Range II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Sorting"
    ],
    "acRate": 37.167633550882286
  },
  "911": {
    "titleSlug": "online-election",
    "title": "Online Election",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Design"
    ],
    "acRate": 51.907695953551745
  },
  "912": {
    "titleSlug": "sort-an-array",
    "title": "Sort an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Merge Sort",
      "Bucket Sort",
      "Radix Sort",
      "Counting Sort"
    ],
    "acRate": 56.54288558464848
  },
  "913": {
    "titleSlug": "cat-and-mouse",
    "title": "Cat and Mouse",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Game Theory"
    ],
    "acRate": 33.98860814955455
  },
  "914": {
    "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
    "title": "X of a Kind in a Deck of Cards",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting",
      "Number Theory"
    ],
    "acRate": 29.87780438208637
  },
  "915": {
    "titleSlug": "partition-array-into-disjoint-intervals",
    "title": "Partition Array into Disjoint Intervals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 49.072191221521976
  },
  "916": {
    "titleSlug": "word-subsets",
    "title": "Word Subsets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 55.77245570619191
  },
  "917": {
    "titleSlug": "reverse-only-letters",
    "title": "Reverse Only Letters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 66.93093778908418
  },
  "918": {
    "titleSlug": "maximum-sum-circular-subarray",
    "title": "Maximum Sum Circular Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming",
      "Queue",
      "Monotonic Queue"
    ],
    "acRate": 47.83204763279842
  },
  "919": {
    "titleSlug": "complete-binary-tree-inserter",
    "title": "Complete Binary Tree Inserter",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ],
    "acRate": 64.59817626653927
  },
  "920": {
    "titleSlug": "number-of-music-playlists",
    "title": "Number of Music Playlists",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 59.9762024548206
  },
  "921": {
    "titleSlug": "minimum-add-to-make-parentheses-valid",
    "title": "Minimum Add to Make Parentheses Valid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy"
    ],
    "acRate": 74.64077260822309
  },
  "922": {
    "titleSlug": "sort-array-by-parity-ii",
    "title": "Sort Array By Parity II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 71.01800285849063
  },
  "923": {
    "titleSlug": "3sum-with-multiplicity",
    "title": "3Sum With Multiplicity",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Sorting",
      "Counting"
    ],
    "acRate": 45.82714630781244
  },
  "924": {
    "titleSlug": "minimize-malware-spread",
    "title": "Minimize Malware Spread",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 42.494647581224164
  },
  "925": {
    "titleSlug": "long-pressed-name",
    "title": "Long Pressed Name",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 32.56783582004578
  },
  "926": {
    "titleSlug": "flip-string-to-monotone-increasing",
    "title": "Flip String to Monotone Increasing",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 61.599789627185906
  },
  "927": {
    "titleSlug": "three-equal-parts",
    "title": "Three Equal Parts",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 40.72775421131354
  },
  "928": {
    "titleSlug": "minimize-malware-spread-ii",
    "title": "Minimize Malware Spread II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 44.7234935479074
  },
  "929": {
    "titleSlug": "unique-email-addresses",
    "title": "Unique Email Addresses",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 67.60710060934359
  },
  "930": {
    "titleSlug": "binary-subarrays-with-sum",
    "title": "Binary Subarrays With Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 66.33167038980291
  },
  "931": {
    "titleSlug": "minimum-falling-path-sum",
    "title": "Minimum Falling Path Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 61.28556926499825
  },
  "932": {
    "titleSlug": "beautiful-array",
    "title": "Beautiful Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Divide and Conquer"
    ],
    "acRate": 67.11850617397353
  },
  "933": {
    "titleSlug": "number-of-recent-calls",
    "title": "Number of Recent Calls",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Queue",
      "Data Stream"
    ],
    "acRate": 77.42552620125751
  },
  "934": {
    "titleSlug": "shortest-bridge",
    "title": "Shortest Bridge",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 58.69526654509589
  },
  "935": {
    "titleSlug": "knight-dialer",
    "title": "Knight Dialer",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 61.26036791918701
  },
  "936": {
    "titleSlug": "stamping-the-sequence",
    "title": "Stamping The Sequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy",
      "Queue"
    ],
    "acRate": 61.91039390598376
  },
  "937": {
    "titleSlug": "reorder-data-in-log-files",
    "title": "Reorder Data in Log Files",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Sorting"
    ],
    "acRate": 56.77919424777432
  },
  "938": {
    "titleSlug": "range-sum-of-bst",
    "title": "Range Sum of BST",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 87.4711755381087
  },
  "939": {
    "titleSlug": "minimum-area-rectangle",
    "title": "Minimum Area Rectangle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Geometry",
      "Sorting"
    ],
    "acRate": 55.01950780312125
  },
  "940": {
    "titleSlug": "distinct-subsequences-ii",
    "title": "Distinct Subsequences II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 43.57371178957433
  },
  "941": {
    "titleSlug": "valid-mountain-array",
    "title": "Valid Mountain Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 34.362900062460106
  },
  "942": {
    "titleSlug": "di-string-match",
    "title": "DI String Match",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 80.11222451746451
  },
  "943": {
    "titleSlug": "find-the-shortest-superstring",
    "title": "Find the Shortest Superstring",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 44.33372810062482
  },
  "944": {
    "titleSlug": "delete-columns-to-make-sorted",
    "title": "Delete Columns to Make Sorted",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 74.78311016597884
  },
  "945": {
    "titleSlug": "minimum-increment-to-make-array-unique",
    "title": "Minimum Increment to Make Array Unique",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Counting"
    ],
    "acRate": 60.35133419382647
  },
  "946": {
    "titleSlug": "validate-stack-sequences",
    "title": "Validate Stack Sequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Simulation"
    ],
    "acRate": 69.71649301432454
  },
  "947": {
    "titleSlug": "most-stones-removed-with-same-row-or-column",
    "title": "Most Stones Removed with Same Row or Column",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Depth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 62.25621435241212
  },
  "948": {
    "titleSlug": "bag-of-tokens",
    "title": "Bag of Tokens",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 59.213002687955395
  },
  "949": {
    "titleSlug": "largest-time-for-given-digits",
    "title": "Largest Time for Given Digits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Backtracking",
      "Enumeration"
    ],
    "acRate": 35.5472804081215
  },
  "950": {
    "titleSlug": "reveal-cards-in-increasing-order",
    "title": "Reveal Cards In Increasing Order",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Queue",
      "Sorting",
      "Simulation"
    ],
    "acRate": 83.29456021382963
  },
  "951": {
    "titleSlug": "flip-equivalent-binary-trees",
    "title": "Flip Equivalent Binary Trees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 69.68029293410063
  },
  "952": {
    "titleSlug": "largest-component-size-by-common-factor",
    "title": "Largest Component Size by Common Factor",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Union Find",
      "Number Theory"
    ],
    "acRate": 41.20071932494121
  },
  "953": {
    "titleSlug": "verifying-an-alien-dictionary",
    "title": "Verifying an Alien Dictionary",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 55.59158899458697
  },
  "954": {
    "titleSlug": "array-of-doubled-pairs",
    "title": "Array of Doubled Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting"
    ],
    "acRate": 39.464528876730924
  },
  "955": {
    "titleSlug": "delete-columns-to-make-sorted-ii",
    "title": "Delete Columns to Make Sorted II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Greedy"
    ],
    "acRate": 35.64334756564851
  },
  "956": {
    "titleSlug": "tallest-billboard",
    "title": "Tallest Billboard",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 51.85840425871028
  },
  "957": {
    "titleSlug": "prison-cells-after-n-days",
    "title": "Prison Cells After N Days",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 38.95310012989627
  },
  "958": {
    "titleSlug": "check-completeness-of-a-binary-tree",
    "title": "Check Completeness of a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 58.43535908074053
  },
  "959": {
    "titleSlug": "regions-cut-by-slashes",
    "title": "Regions Cut By Slashes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 77.6119803836258
  },
  "960": {
    "titleSlug": "delete-columns-to-make-sorted-iii",
    "title": "Delete Columns to Make Sorted III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 58.8514116919695
  },
  "961": {
    "titleSlug": "n-repeated-element-in-size-2n-array",
    "title": "N-Repeated Element in Size 2N Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 77.51814702967548
  },
  "962": {
    "titleSlug": "maximum-width-ramp",
    "title": "Maximum Width Ramp",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 55.73851492657367
  },
  "963": {
    "titleSlug": "minimum-area-rectangle-ii",
    "title": "Minimum Area Rectangle II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 55.692205417982386
  },
  "964": {
    "titleSlug": "least-operators-to-express-number",
    "title": "Least Operators to Express Number",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 48.41329649166876
  },
  "965": {
    "titleSlug": "univalued-binary-tree",
    "title": "Univalued Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 72.16817641923897
  },
  "966": {
    "titleSlug": "vowel-spellchecker",
    "title": "Vowel Spellchecker",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 51.58544632970573
  },
  "967": {
    "titleSlug": "numbers-with-same-consecutive-differences",
    "title": "Numbers With Same Consecutive Differences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Backtracking",
      "Breadth-First Search"
    ],
    "acRate": 58.756432829087366
  },
  "968": {
    "titleSlug": "binary-tree-cameras",
    "title": "Binary Tree Cameras",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 47.252256607722806
  },
  "969": {
    "titleSlug": "pancake-sorting",
    "title": "Pancake Sorting",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 71.24475880453858
  },
  "970": {
    "titleSlug": "powerful-integers",
    "title": "Powerful Integers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Enumeration"
    ],
    "acRate": 44.11546031051826
  },
  "971": {
    "titleSlug": "flip-binary-tree-to-match-preorder-traversal",
    "title": "Flip Binary Tree To Match Preorder Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 51.10388101324658
  },
  "972": {
    "titleSlug": "equal-rational-numbers",
    "title": "Equal Rational Numbers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 44.72993437657748
  },
  "973": {
    "titleSlug": "k-closest-points-to-origin",
    "title": "K Closest Points to Origin",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Divide and Conquer",
      "Geometry",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ],
    "acRate": 68.00994353013088
  },
  "974": {
    "titleSlug": "subarray-sums-divisible-by-k",
    "title": "Subarray Sums Divisible by K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 55.65068146582956
  },
  "975": {
    "titleSlug": "odd-even-jump",
    "title": "Odd Even Jump",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack",
      "Ordered Set"
    ],
    "acRate": 40.7572429487794
  },
  "976": {
    "titleSlug": "largest-perimeter-triangle",
    "title": "Largest Perimeter Triangle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Sorting"
    ],
    "acRate": 57.44979628978554
  },
  "977": {
    "titleSlug": "squares-of-a-sorted-array",
    "title": "Squares of a Sorted Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 73.24915884322611
  },
  "978": {
    "titleSlug": "longest-turbulent-subarray",
    "title": "Longest Turbulent Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sliding Window"
    ],
    "acRate": 48.111167041575555
  },
  "979": {
    "titleSlug": "distribute-coins-in-binary-tree",
    "title": "Distribute Coins in Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 77.16505583455785
  },
  "980": {
    "titleSlug": "unique-paths-iii",
    "title": "Unique Paths III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation",
      "Matrix"
    ],
    "acRate": 82.3695970345485
  },
  "981": {
    "titleSlug": "time-based-key-value-store",
    "title": "Time Based Key-Value Store",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Binary Search",
      "Design"
    ],
    "acRate": 49.393680139896055
  },
  "982": {
    "titleSlug": "triples-with-bitwise-and-equal-to-zero",
    "title": "Triples with Bitwise AND Equal To Zero",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation"
    ],
    "acRate": 59.38937457969066
  },
  "983": {
    "titleSlug": "minimum-cost-for-tickets",
    "title": "Minimum Cost For Tickets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 67.4211447246199
  },
  "984": {
    "titleSlug": "string-without-aaa-or-bbb",
    "title": "String Without AAA or BBB",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 44.55194986628348
  },
  "985": {
    "titleSlug": "sum-of-even-numbers-after-queries",
    "title": "Sum of Even Numbers After Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 68.5567841139873
  },
  "986": {
    "titleSlug": "interval-list-intersections",
    "title": "Interval List Intersections",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Line Sweep"
    ],
    "acRate": 72.71716948331705
  },
  "987": {
    "titleSlug": "vertical-order-traversal-of-a-binary-tree",
    "title": "Vertical Order Traversal of a Binary Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Sorting",
      "Binary Tree"
    ],
    "acRate": 51.557414049157515
  },
  "988": {
    "titleSlug": "smallest-string-starting-from-leaf",
    "title": "Smallest String Starting From Leaf",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 60.84979667637924
  },
  "989": {
    "titleSlug": "add-to-array-form-of-integer",
    "title": "Add to Array-Form of Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 45.0877169640336
  },
  "990": {
    "titleSlug": "satisfiability-of-equality-equations",
    "title": "Satisfiability of Equality Equations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Union Find",
      "Graph"
    ],
    "acRate": 51.055977174686504
  },
  "991": {
    "titleSlug": "broken-calculator",
    "title": "Broken Calculator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 55.176386598065044
  },
  "992": {
    "titleSlug": "subarrays-with-k-different-integers",
    "title": "Subarrays with K Different Integers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Counting"
    ],
    "acRate": 66.08994001122093
  },
  "993": {
    "titleSlug": "cousins-in-binary-tree",
    "title": "Cousins in Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 58.26233505450374
  },
  "994": {
    "titleSlug": "rotting-oranges",
    "title": "Rotting Oranges",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 56.784860923365784
  },
  "995": {
    "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
    "title": "Minimum Number of K Consecutive Bit Flips",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Queue",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 62.18312261967337
  },
  "996": {
    "titleSlug": "number-of-squareful-arrays",
    "title": "Number of Squareful Arrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 50.503563422223706
  },
  "997": {
    "titleSlug": "find-the-town-judge",
    "title": "Find the Town Judge",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Graph"
    ],
    "acRate": 50.044905344842086
  },
  "998": {
    "titleSlug": "maximum-binary-tree-ii",
    "title": "Maximum Binary Tree II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Binary Tree"
    ],
    "acRate": 69.29871076790508
  },
  "999": {
    "titleSlug": "available-captures-for-rook",
    "title": "Available Captures for Rook",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 70.4180639391907
  },
  "1000": {
    "titleSlug": "minimum-cost-to-merge-stones",
    "title": "Minimum Cost to Merge Stones",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 44.420036419342715
  },
  "1001": {
    "titleSlug": "grid-illumination",
    "title": "Grid Illumination",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 38.15980704412629
  },
  "1002": {
    "titleSlug": "find-common-characters",
    "title": "Find Common Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 74.54991312721498
  },
  "1003": {
    "titleSlug": "check-if-word-is-valid-after-substitutions",
    "title": "Check If Word Is Valid After Substitutions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 60.26626590395858
  },
  "1004": {
    "titleSlug": "max-consecutive-ones-iii",
    "title": "Max Consecutive Ones III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 66.09731421965962
  },
  "1005": {
    "titleSlug": "maximize-sum-of-array-after-k-negations",
    "title": "Maximize Sum Of Array After K Negations",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 52.5023823651042
  },
  "1006": {
    "titleSlug": "clumsy-factorial",
    "title": "Clumsy Factorial",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Stack",
      "Simulation"
    ],
    "acRate": 59.45734141653113
  },
  "1007": {
    "titleSlug": "minimum-domino-rotations-for-equal-row",
    "title": "Minimum Domino Rotations For Equal Row",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 56.48879139654167
  },
  "1008": {
    "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
    "title": "Construct Binary Search Tree from Preorder Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Tree",
      "Binary Search Tree",
      "Monotonic Stack",
      "Binary Tree"
    ],
    "acRate": 83.393639340861
  },
  "1009": {
    "titleSlug": "complement-of-base-10-integer",
    "title": "Complement of Base 10 Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 60.68485022098543
  },
  "1010": {
    "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
    "title": "Pairs of Songs With Total Durations Divisible by 60",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 53.25922121757595
  },
  "1011": {
    "titleSlug": "capacity-to-ship-packages-within-d-days",
    "title": "Capacity To Ship Packages Within D Days",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 72.2939929954788
  },
  "1012": {
    "titleSlug": "numbers-with-repeated-digits",
    "title": "Numbers With Repeated Digits",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 43.555240793201136
  },
  "1013": {
    "titleSlug": "partition-array-into-three-parts-with-equal-sum",
    "title": "Partition Array Into Three Parts With Equal Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 42.08691391527212
  },
  "1014": {
    "titleSlug": "best-sightseeing-pair",
    "title": "Best Sightseeing Pair",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 62.60547879105594
  },
  "1015": {
    "titleSlug": "smallest-integer-divisible-by-k",
    "title": "Smallest Integer Divisible by K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math"
    ],
    "acRate": 46.590249965474385
  },
  "1016": {
    "titleSlug": "binary-string-with-substrings-representing-1-to-n",
    "title": "Binary String With Substrings Representing 1 To N",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sliding Window"
    ],
    "acRate": 58.04067271462144
  },
  "1017": {
    "titleSlug": "convert-to-base-2",
    "title": "Convert to Base -2",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 61.296844272087334
  },
  "1018": {
    "titleSlug": "binary-prefix-divisible-by-5",
    "title": "Binary Prefix Divisible By 5",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 46.999871789392714
  },
  "1019": {
    "titleSlug": "next-greater-node-in-linked-list",
    "title": "Next Greater Node In Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Linked List",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 62.386077145072086
  },
  "1020": {
    "titleSlug": "number-of-enclaves",
    "title": "Number of Enclaves",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 70.70937870789126
  },
  "1021": {
    "titleSlug": "remove-outermost-parentheses",
    "title": "Remove Outermost Parentheses",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 85.71285022574881
  },
  "1022": {
    "titleSlug": "sum-of-root-to-leaf-binary-numbers",
    "title": "Sum of Root To Leaf Binary Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 73.44206403767727
  },
  "1023": {
    "titleSlug": "camelcase-matching",
    "title": "Camelcase Matching",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String",
      "Trie",
      "String Matching"
    ],
    "acRate": 63.892743089968064
  },
  "1024": {
    "titleSlug": "video-stitching",
    "title": "Video Stitching",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 52.03894593689024
  },
  "1025": {
    "titleSlug": "divisor-game",
    "title": "Divisor Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Brainteaser",
      "Game Theory"
    ],
    "acRate": 70.47355508150046
  },
  "1026": {
    "titleSlug": "maximum-difference-between-node-and-ancestor",
    "title": "Maximum Difference Between Node and Ancestor",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 78.07491607814958
  },
  "1027": {
    "titleSlug": "longest-arithmetic-subsequence",
    "title": "Longest Arithmetic Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Dynamic Programming"
    ],
    "acRate": 49.5078106405101
  },
  "1028": {
    "titleSlug": "recover-a-tree-from-preorder-traversal",
    "title": "Recover a Tree From Preorder Traversal",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 83.3031819788079
  },
  "1029": {
    "titleSlug": "two-city-scheduling",
    "title": "Two City Scheduling",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 67.7301257871163
  },
  "1030": {
    "titleSlug": "matrix-cells-in-distance-order",
    "title": "Matrix Cells in Distance Order",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Sorting",
      "Matrix"
    ],
    "acRate": 72.85386191057499
  },
  "1031": {
    "titleSlug": "maximum-sum-of-two-non-overlapping-subarrays",
    "title": "Maximum Sum of Two Non-Overlapping Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sliding Window"
    ],
    "acRate": 60.2943189596167
  },
  "1032": {
    "titleSlug": "stream-of-characters",
    "title": "Stream of Characters",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Design",
      "Trie",
      "Data Stream"
    ],
    "acRate": 51.28365881947274
  },
  "1033": {
    "titleSlug": "moving-stones-until-consecutive",
    "title": "Moving Stones Until Consecutive",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Brainteaser"
    ],
    "acRate": 49.6885051633655
  },
  "1034": {
    "titleSlug": "coloring-a-border",
    "title": "Coloring A Border",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 49.89838681899076
  },
  "1035": {
    "titleSlug": "uncrossed-lines",
    "title": "Uncrossed Lines",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 64.38646307706045
  },
  "1036": {
    "titleSlug": "escape-a-large-maze",
    "title": "Escape a Large Maze",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 35.39625691550886
  },
  "1037": {
    "titleSlug": "valid-boomerang",
    "title": "Valid Boomerang",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 38.09207381760105
  },
  "1038": {
    "titleSlug": "binary-search-tree-to-greater-sum-tree",
    "title": "Binary Search Tree to Greater Sum Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 88.28074479688493
  },
  "1039": {
    "titleSlug": "minimum-score-triangulation-of-polygon",
    "title": "Minimum Score Triangulation of Polygon",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 60.269768426318784
  },
  "1040": {
    "titleSlug": "moving-stones-until-consecutive-ii",
    "title": "Moving Stones Until Consecutive II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sliding Window",
      "Sorting"
    ],
    "acRate": 57.41338878810672
  },
  "1041": {
    "titleSlug": "robot-bounded-in-circle",
    "title": "Robot Bounded In Circle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation"
    ],
    "acRate": 56.248626095352215
  },
  "1042": {
    "titleSlug": "flower-planting-with-no-adjacent",
    "title": "Flower Planting With No Adjacent",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 52.4741159448032
  },
  "1043": {
    "titleSlug": "partition-array-for-maximum-sum",
    "title": "Partition Array for Maximum Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 77.0515860322318
  },
  "1044": {
    "titleSlug": "longest-duplicate-substring",
    "title": "Longest Duplicate Substring",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Binary Search",
      "Sliding Window",
      "Rolling Hash",
      "Suffix Array",
      "Hash Function"
    ],
    "acRate": 30.800538954619384
  },
  "1045": {
    "titleSlug": "customers-who-bought-all-products",
    "title": "Customers Who Bought All Products",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 63.09334880109812
  },
  "1046": {
    "titleSlug": "last-stone-weight",
    "title": "Last Stone Weight",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)"
    ],
    "acRate": 65.97390907892516
  },
  "1047": {
    "titleSlug": "remove-all-adjacent-duplicates-in-string",
    "title": "Remove All Adjacent Duplicates In String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 71.69139327951288
  },
  "1048": {
    "titleSlug": "longest-string-chain",
    "title": "Longest String Chain",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 62.122220272072134
  },
  "1049": {
    "titleSlug": "last-stone-weight-ii",
    "title": "Last Stone Weight II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 57.7901353718257
  },
  "1050": {
    "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
    "title": "Actors and Directors Who Cooperated At Least Three Times",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 70.67307554426226
  },
  "1051": {
    "titleSlug": "height-checker",
    "title": "Height Checker",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 81.16758386944481
  },
  "1052": {
    "titleSlug": "grumpy-bookstore-owner",
    "title": "Grumpy Bookstore Owner",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 64.03057509591866
  },
  "1053": {
    "titleSlug": "previous-permutation-with-one-swap",
    "title": "Previous Permutation With One Swap",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 49.384686004065664
  },
  "1054": {
    "titleSlug": "distant-barcodes",
    "title": "Distant Barcodes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ],
    "acRate": 47.5886286376032
  },
  "1061": {
    "titleSlug": "lexicographically-smallest-equivalent-string",
    "title": "Lexicographically Smallest Equivalent String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Union Find"
    ],
    "acRate": 81.05242295114459
  },
  "1068": {
    "titleSlug": "product-sales-analysis-i",
    "title": "Product Sales Analysis I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 84.66634370227824
  },
  "1070": {
    "titleSlug": "product-sales-analysis-iii",
    "title": "Product Sales Analysis III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 44.67381038314161
  },
  "1071": {
    "titleSlug": "greatest-common-divisor-of-strings",
    "title": "Greatest Common Divisor of Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 52.77234569075343
  },
  "1072": {
    "titleSlug": "flip-columns-for-maximum-number-of-equal-rows",
    "title": "Flip Columns For Maximum Number of Equal Rows",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "acRate": 78.53856139850063
  },
  "1073": {
    "titleSlug": "adding-two-negabinary-numbers",
    "title": "Adding Two Negabinary Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 36.922484599589325
  },
  "1074": {
    "titleSlug": "number-of-submatrices-that-sum-to-target",
    "title": "Number of Submatrices That Sum to Target",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 74.47978475726308
  },
  "1075": {
    "titleSlug": "project-employees-i",
    "title": "Project Employees I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 65.64952220201184
  },
  "1078": {
    "titleSlug": "occurrences-after-bigram",
    "title": "Occurrences After Bigram",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 63.708846177166066
  },
  "1079": {
    "titleSlug": "letter-tile-possibilities",
    "title": "Letter Tile Possibilities",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Backtracking",
      "Counting"
    ],
    "acRate": 83.55641729129019
  },
  "1080": {
    "titleSlug": "insufficient-nodes-in-root-to-leaf-paths",
    "title": "Insufficient Nodes in Root to Leaf Paths",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 53.815960609438875
  },
  "1081": {
    "titleSlug": "smallest-subsequence-of-distinct-characters",
    "title": "Smallest Subsequence of Distinct Characters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 62.0808190537132
  },
  "1084": {
    "titleSlug": "sales-analysis-iii",
    "title": "Sales Analysis III",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 46.79039837742615
  },
  "1089": {
    "titleSlug": "duplicate-zeros",
    "title": "Duplicate Zeros",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 52.82868786826922
  },
  "1090": {
    "titleSlug": "largest-values-from-labels",
    "title": "Largest Values From Labels",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Counting"
    ],
    "acRate": 63.278337321239775
  },
  "1091": {
    "titleSlug": "shortest-path-in-binary-matrix",
    "title": "Shortest Path in Binary Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 49.94847436832729
  },
  "1092": {
    "titleSlug": "shortest-common-supersequence",
    "title": "Shortest Common Supersequence ",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 61.39361485156498
  },
  "1093": {
    "titleSlug": "statistics-from-a-large-sample",
    "title": "Statistics from a Large Sample",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Probability and Statistics"
    ],
    "acRate": 42.22072285641343
  },
  "1094": {
    "titleSlug": "car-pooling",
    "title": "Car Pooling",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation",
      "Prefix Sum"
    ],
    "acRate": 56.08581902879497
  },
  "1095": {
    "titleSlug": "find-in-mountain-array",
    "title": "Find in Mountain Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Interactive"
    ],
    "acRate": 40.5475173613165
  },
  "1096": {
    "titleSlug": "brace-expansion-ii",
    "title": "Brace Expansion II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Stack",
      "Breadth-First Search"
    ],
    "acRate": 63.1555802434847
  },
  "1103": {
    "titleSlug": "distribute-candies-to-people",
    "title": "Distribute Candies to People",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 66.56770771483988
  },
  "1104": {
    "titleSlug": "path-in-zigzag-labelled-binary-tree",
    "title": "Path In Zigzag Labelled Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 75.50684521583003
  },
  "1105": {
    "titleSlug": "filling-bookcase-shelves",
    "title": "Filling Bookcase Shelves",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 68.65807905088072
  },
  "1106": {
    "titleSlug": "parsing-a-boolean-expression",
    "title": "Parsing A Boolean Expression",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Recursion"
    ],
    "acRate": 69.85370331217351
  },
  "1108": {
    "titleSlug": "defanging-an-ip-address",
    "title": "Defanging an IP Address",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 89.70675500773297
  },
  "1109": {
    "titleSlug": "corporate-flight-bookings",
    "title": "Corporate Flight Bookings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 64.59615018105585
  },
  "1110": {
    "titleSlug": "delete-nodes-and-return-forest",
    "title": "Delete Nodes And Return Forest",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 72.44036050141554
  },
  "1111": {
    "titleSlug": "maximum-nesting-depth-of-two-valid-parentheses-strings",
    "title": "Maximum Nesting Depth of Two Valid Parentheses Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 71.40743176586649
  },
  "1114": {
    "titleSlug": "print-in-order",
    "title": "Print in Order",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Concurrency"
    ],
    "acRate": 71.68188567452603
  },
  "1115": {
    "titleSlug": "print-foobar-alternately",
    "title": "Print FooBar Alternately",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Concurrency"
    ],
    "acRate": 69.9527233573842
  },
  "1116": {
    "titleSlug": "print-zero-even-odd",
    "title": "Print Zero Even Odd",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Concurrency"
    ],
    "acRate": 63.745366517890915
  },
  "1117": {
    "titleSlug": "building-h2o",
    "title": "Building H2O",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Concurrency"
    ],
    "acRate": 57.69961977186312
  },
  "1122": {
    "titleSlug": "relative-sort-array",
    "title": "Relative Sort Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 74.93187737324773
  },
  "1123": {
    "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
    "title": "Lowest Common Ancestor of Deepest Leaves",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 78.91779889903717
  },
  "1124": {
    "titleSlug": "longest-well-performing-interval",
    "title": "Longest Well-Performing Interval",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Stack",
      "Monotonic Stack",
      "Prefix Sum"
    ],
    "acRate": 36.032094686586674
  },
  "1125": {
    "titleSlug": "smallest-sufficient-team",
    "title": "Smallest Sufficient Team",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 55.32331493493413
  },
  "1128": {
    "titleSlug": "number-of-equivalent-domino-pairs",
    "title": "Number of Equivalent Domino Pairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 60.60276673597199
  },
  "1129": {
    "titleSlug": "shortest-path-with-alternating-colors",
    "title": "Shortest Path with Alternating Colors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 47.34978918385514
  },
  "1130": {
    "titleSlug": "minimum-cost-tree-from-leaf-values",
    "title": "Minimum Cost Tree From Leaf Values",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 67.68388059522596
  },
  "1131": {
    "titleSlug": "maximum-of-absolute-value-expression",
    "title": "Maximum of Absolute Value Expression",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 48.300268650547636
  },
  "1137": {
    "titleSlug": "n-th-tribonacci-number",
    "title": "N-th Tribonacci Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 63.55348182268391
  },
  "1138": {
    "titleSlug": "alphabet-board-path",
    "title": "Alphabet Board Path",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 51.59962307994913
  },
  "1139": {
    "titleSlug": "largest-1-bordered-square",
    "title": "Largest 1-Bordered Square",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 51.139694472223184
  },
  "1140": {
    "titleSlug": "stone-game-ii",
    "title": "Stone Game II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Prefix Sum",
      "Game Theory"
    ],
    "acRate": 72.98834919720754
  },
  "1141": {
    "titleSlug": "user-activity-for-the-past-30-days-i",
    "title": "User Activity for the Past 30 Days I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 49.49451515965894
  },
  "1143": {
    "titleSlug": "longest-common-subsequence",
    "title": "Longest Common Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 58.30781249398699
  },
  "1144": {
    "titleSlug": "decrease-elements-to-make-array-zigzag",
    "title": "Decrease Elements To Make Array Zigzag",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 48.505065480602916
  },
  "1145": {
    "titleSlug": "binary-tree-coloring-game",
    "title": "Binary Tree Coloring Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 52.51960367150933
  },
  "1146": {
    "titleSlug": "snapshot-array",
    "title": "Snapshot Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Design"
    ],
    "acRate": 36.65423603403626
  },
  "1147": {
    "titleSlug": "longest-chunked-palindrome-decomposition",
    "title": "Longest Chunked Palindrome Decomposition",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Greedy",
      "Rolling Hash",
      "Hash Function"
    ],
    "acRate": 58.836411718524026
  },
  "1148": {
    "titleSlug": "article-views-i",
    "title": "Article Views I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 77.09112782911896
  },
  "1154": {
    "titleSlug": "day-of-the-year",
    "title": "Day of the Year",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 48.255065103133376
  },
  "1155": {
    "titleSlug": "number-of-dice-rolls-with-target-sum",
    "title": "Number of Dice Rolls With Target Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 61.68565742218113
  },
  "1156": {
    "titleSlug": "swap-for-longest-repeated-character-substring",
    "title": "Swap For Longest Repeated Character Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 43.66436738164982
  },
  "1157": {
    "titleSlug": "online-majority-element-in-subarray",
    "title": "Online Majority Element In Subarray",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Design",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 39.18729280644308
  },
  "1158": {
    "titleSlug": "market-analysis-i",
    "title": "Market Analysis I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 57.185994649509254
  },
  "1160": {
    "titleSlug": "find-words-that-can-be-formed-by-characters",
    "title": "Find Words That Can Be Formed by Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 71.10918055881662
  },
  "1161": {
    "titleSlug": "maximum-level-sum-of-a-binary-tree",
    "title": "Maximum Level Sum of a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 67.40682164534357
  },
  "1162": {
    "titleSlug": "as-far-from-land-as-possible",
    "title": "As Far from Land as Possible",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 51.8701773344585
  },
  "1163": {
    "titleSlug": "last-substring-in-lexicographical-order",
    "title": "Last Substring in Lexicographical Order",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 34.60483800541437
  },
  "1164": {
    "titleSlug": "product-price-at-a-given-date",
    "title": "Product Price at a Given Date",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 57.47662916154993
  },
  "1169": {
    "titleSlug": "invalid-transactions",
    "title": "Invalid Transactions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 31.283607481493735
  },
  "1170": {
    "titleSlug": "compare-strings-by-frequency-of-the-smallest-character",
    "title": "Compare Strings by Frequency of the Smallest Character",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 62.7329502516647
  },
  "1171": {
    "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
    "title": "Remove Zero Sum Consecutive Nodes from Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List"
    ],
    "acRate": 52.913522096736784
  },
  "1172": {
    "titleSlug": "dinner-plate-stacks",
    "title": "Dinner Plate Stacks",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Stack",
      "Design",
      "Heap (Priority Queue)"
    ],
    "acRate": 32.837528604118994
  },
  "1174": {
    "titleSlug": "immediate-food-delivery-ii",
    "title": "Immediate Food Delivery II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 54.37763747480743
  },
  "1175": {
    "titleSlug": "prime-arrangements",
    "title": "Prime Arrangements",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 59.62143621373277
  },
  "1177": {
    "titleSlug": "can-make-palindrome-from-substring",
    "title": "Can Make Palindrome from Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 40.29505998062737
  },
  "1178": {
    "titleSlug": "number-of-valid-words-for-each-puzzle",
    "title": "Number of Valid Words for Each Puzzle",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Trie"
    ],
    "acRate": 47.16111371147327
  },
  "1179": {
    "titleSlug": "reformat-department-table",
    "title": "Reformat Department Table",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 76.65673960896025
  },
  "1184": {
    "titleSlug": "distance-between-bus-stops",
    "title": "Distance Between Bus Stops",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 54.75449449801562
  },
  "1185": {
    "titleSlug": "day-of-the-week",
    "title": "Day of the Week",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 58.55894234300404
  },
  "1186": {
    "titleSlug": "maximum-subarray-sum-with-one-deletion",
    "title": "Maximum Subarray Sum with One Deletion",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 45.18275545665383
  },
  "1187": {
    "titleSlug": "make-array-strictly-increasing",
    "title": "Make Array Strictly Increasing",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 57.8211215193122
  },
  "1189": {
    "titleSlug": "maximum-number-of-balloons",
    "title": "Maximum Number of Balloons",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 59.74564421545032
  },
  "1190": {
    "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
    "title": "Reverse Substrings Between Each Pair of Parentheses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 71.73229580594304
  },
  "1191": {
    "titleSlug": "k-concatenation-maximum-sum",
    "title": "K-Concatenation Maximum Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 24.295210978456126
  },
  "1192": {
    "titleSlug": "critical-connections-in-a-network",
    "title": "Critical Connections in a Network",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Graph",
      "Biconnected Component"
    ],
    "acRate": 57.96219767192979
  },
  "1193": {
    "titleSlug": "monthly-transactions-i",
    "title": "Monthly Transactions I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 58.28392591919008
  },
  "1195": {
    "titleSlug": "fizz-buzz-multithreaded",
    "title": "Fizz Buzz Multithreaded",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Concurrency"
    ],
    "acRate": 74.04259304789669
  },
  "1200": {
    "titleSlug": "minimum-absolute-difference",
    "title": "Minimum Absolute Difference",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 70.66802267117652
  },
  "1201": {
    "titleSlug": "ugly-number-iii",
    "title": "Ugly Number III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search",
      "Combinatorics",
      "Number Theory"
    ],
    "acRate": 30.493460681411953
  },
  "1202": {
    "titleSlug": "smallest-string-with-swaps",
    "title": "Smallest String With Swaps",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Sorting"
    ],
    "acRate": 59.50285729616612
  },
  "1203": {
    "titleSlug": "sort-items-by-groups-respecting-dependencies",
    "title": "Sort Items by Groups Respecting Dependencies",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 65.63674862797632
  },
  "1204": {
    "titleSlug": "last-person-to-fit-in-the-bus",
    "title": "Last Person to Fit in the Bus",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 68.41518708650776
  },
  "1206": {
    "titleSlug": "design-skiplist",
    "title": "Design Skiplist",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Design"
    ],
    "acRate": 58.194396959153714
  },
  "1207": {
    "titleSlug": "unique-number-of-occurrences",
    "title": "Unique Number of Occurrences",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 78.31120193768754
  },
  "1208": {
    "titleSlug": "get-equal-substrings-within-budget",
    "title": "Get Equal Substrings Within Budget",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 59.01954274552528
  },
  "1209": {
    "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
    "title": "Remove All Adjacent Duplicates in String II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 59.68160194817733
  },
  "1210": {
    "titleSlug": "minimum-moves-to-reach-target-with-rotations",
    "title": "Minimum Moves to Reach Target with Rotations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 50.71236559139785
  },
  "1211": {
    "titleSlug": "queries-quality-and-percentage",
    "title": "Queries Quality and Percentage",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 48.59082639672328
  },
  "1217": {
    "titleSlug": "minimum-cost-to-move-chips-to-the-same-position",
    "title": "Minimum Cost to Move Chips to The Same Position",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy"
    ],
    "acRate": 72.37183991247718
  },
  "1218": {
    "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
    "title": "Longest Arithmetic Subsequence of Given Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ],
    "acRate": 54.43541863287044
  },
  "1219": {
    "titleSlug": "path-with-maximum-gold",
    "title": "Path with Maximum Gold",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Matrix"
    ],
    "acRate": 68.1346405191536
  },
  "1220": {
    "titleSlug": "count-vowels-permutation",
    "title": "Count Vowels Permutation",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 61.47104027914318
  },
  "1221": {
    "titleSlug": "split-a-string-in-balanced-strings",
    "title": "Split a String in Balanced Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Counting"
    ],
    "acRate": 86.83249165962864
  },
  "1222": {
    "titleSlug": "queens-that-can-attack-the-king",
    "title": "Queens That Can Attack the King",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 72.22770248736589
  },
  "1223": {
    "titleSlug": "dice-roll-simulation",
    "title": "Dice Roll Simulation",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 50.06886752787323
  },
  "1224": {
    "titleSlug": "maximum-equal-frequency",
    "title": "Maximum Equal Frequency",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 37.518345851679186
  },
  "1226": {
    "titleSlug": "the-dining-philosophers",
    "title": "The Dining Philosophers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Concurrency"
    ],
    "acRate": 54.65322843780589
  },
  "1227": {
    "titleSlug": "airplane-seat-assignment-probability",
    "title": "Airplane Seat Assignment Probability",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Brainteaser",
      "Probability and Statistics"
    ],
    "acRate": 66.67335232059047
  },
  "1232": {
    "titleSlug": "check-if-it-is-a-straight-line",
    "title": "Check If It Is a Straight Line",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 39.719422825339805
  },
  "1233": {
    "titleSlug": "remove-sub-folders-from-the-filesystem",
    "title": "Remove Sub-Folders from the Filesystem",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Depth-First Search",
      "Trie"
    ],
    "acRate": 75.7710032709919
  },
  "1234": {
    "titleSlug": "replace-the-substring-for-balanced-string",
    "title": "Replace the Substring for Balanced String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window"
    ],
    "acRate": 39.693458157323896
  },
  "1235": {
    "titleSlug": "maximum-profit-in-job-scheduling",
    "title": "Maximum Profit in Job Scheduling",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 54.420442300785055
  },
  "1237": {
    "titleSlug": "find-positive-integer-solution-for-a-given-equation",
    "title": "Find Positive Integer Solution for a Given Equation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Two Pointers",
      "Binary Search",
      "Interactive"
    ],
    "acRate": 69.50747044184541
  },
  "1238": {
    "titleSlug": "circular-permutation-in-binary-representation",
    "title": "Circular Permutation in Binary Representation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 71.70738096797433
  },
  "1239": {
    "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
    "title": "Maximum Length of a Concatenated String with Unique Characters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 54.287210923840334
  },
  "1240": {
    "titleSlug": "tiling-a-rectangle-with-the-fewest-squares",
    "title": "Tiling a Rectangle with the Fewest Squares",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Backtracking"
    ],
    "acRate": 54.38423851597505
  },
  "1247": {
    "titleSlug": "minimum-swaps-to-make-strings-equal",
    "title": "Minimum Swaps to Make Strings Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Greedy"
    ],
    "acRate": 64.74295600593179
  },
  "1248": {
    "titleSlug": "count-number-of-nice-subarrays",
    "title": "Count Number of Nice Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 73.4462259052423
  },
  "1249": {
    "titleSlug": "minimum-remove-to-make-valid-parentheses",
    "title": "Minimum Remove to Make Valid Parentheses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 70.79654145886558
  },
  "1250": {
    "titleSlug": "check-if-it-is-a-good-array",
    "title": "Check If It Is a Good Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 61.44640895015483
  },
  "1251": {
    "titleSlug": "average-selling-price",
    "title": "Average Selling Price",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 36.757768183358
  },
  "1252": {
    "titleSlug": "cells-with-odd-values-in-a-matrix",
    "title": "Cells with Odd Values in a Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Simulation"
    ],
    "acRate": 79.27668792875195
  },
  "1253": {
    "titleSlug": "reconstruct-a-2-row-binary-matrix",
    "title": "Reconstruct a 2-Row Binary Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Matrix"
    ],
    "acRate": 47.816046550493
  },
  "1254": {
    "titleSlug": "number-of-closed-islands",
    "title": "Number of Closed Islands",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 66.74374055477647
  },
  "1255": {
    "titleSlug": "maximum-score-words-formed-by-letters",
    "title": "Maximum Score Words Formed by Letters",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 81.59115554158191
  },
  "1260": {
    "titleSlug": "shift-2d-grid",
    "title": "Shift 2D Grid",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 67.72936428666277
  },
  "1261": {
    "titleSlug": "find-elements-in-a-contaminated-binary-tree",
    "title": "Find Elements in a Contaminated Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ],
    "acRate": 84.02345809737339
  },
  "1262": {
    "titleSlug": "greatest-sum-divisible-by-three",
    "title": "Greatest Sum Divisible by Three",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 50.96186823808188
  },
  "1263": {
    "titleSlug": "minimum-moves-to-move-a-box-to-their-target-location",
    "title": "Minimum Moves to Move a Box to Their Target Location",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 48.95198139746654
  },
  "1266": {
    "titleSlug": "minimum-time-visiting-all-points",
    "title": "Minimum Time Visiting All Points",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 82.56456447129347
  },
  "1267": {
    "titleSlug": "count-servers-that-communicate",
    "title": "Count Servers that Communicate",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix",
      "Counting"
    ],
    "acRate": 73.5067027213624
  },
  "1268": {
    "titleSlug": "search-suggestions-system",
    "title": "Search Suggestions System",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Binary Search",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 65.06731736834143
  },
  "1269": {
    "titleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
    "title": "Number of Ways to Stay in the Same Place After Some Steps",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 50.02109093496369
  },
  "1275": {
    "titleSlug": "find-winner-on-a-tic-tac-toe-game",
    "title": "Find Winner on a Tic Tac Toe Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix",
      "Simulation"
    ],
    "acRate": 54.19063443896051
  },
  "1276": {
    "titleSlug": "number-of-burgers-with-no-waste-of-ingredients",
    "title": "Number of Burgers with No Waste of Ingredients",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 50.416157285683184
  },
  "1277": {
    "titleSlug": "count-square-submatrices-with-all-ones",
    "title": "Count Square Submatrices with All Ones",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 78.75733348996185
  },
  "1278": {
    "titleSlug": "palindrome-partitioning-iii",
    "title": "Palindrome Partitioning III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 61.638033337593335
  },
  "1280": {
    "titleSlug": "students-and-examinations",
    "title": "Students and Examinations",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 60.46120935983047
  },
  "1281": {
    "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
    "title": "Subtract the Product and Sum of Digits of an Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 86.6154544596423
  },
  "1282": {
    "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
    "title": "Group the People Given the Group Size They Belong To",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy"
    ],
    "acRate": 87.41887150591673
  },
  "1283": {
    "titleSlug": "find-the-smallest-divisor-given-a-threshold",
    "title": "Find the Smallest Divisor Given a Threshold",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 63.87298585943473
  },
  "1284": {
    "titleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
    "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 72.06299273758205
  },
  "1286": {
    "titleSlug": "iterator-for-combination",
    "title": "Iterator for Combination",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Design",
      "Iterator"
    ],
    "acRate": 72.50082662845806
  },
  "1287": {
    "titleSlug": "element-appearing-more-than-25-in-sorted-array",
    "title": "Element Appearing More Than 25% In Sorted Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 61.06039486022758
  },
  "1288": {
    "titleSlug": "remove-covered-intervals",
    "title": "Remove Covered Intervals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 56.169890026545325
  },
  "1289": {
    "titleSlug": "minimum-falling-path-sum-ii",
    "title": "Minimum Falling Path Sum II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 63.76976007392495
  },
  "1290": {
    "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
    "title": "Convert Binary Number in a Linked List to Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Math"
    ],
    "acRate": 81.22751263698017
  },
  "1291": {
    "titleSlug": "sequential-digits",
    "title": "Sequential Digits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Enumeration"
    ],
    "acRate": 65.26760595464538
  },
  "1292": {
    "titleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
    "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 53.53901996370236
  },
  "1293": {
    "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
    "title": "Shortest Path in a Grid with Obstacles Elimination",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 45.65542002919316
  },
  "1295": {
    "titleSlug": "find-numbers-with-even-number-of-digits",
    "title": "Find Numbers with Even Number of Digits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 79.4274554714643
  },
  "1296": {
    "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
    "title": "Divide Array in Sets of K Consecutive Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting"
    ],
    "acRate": 58.760741000226666
  },
  "1297": {
    "titleSlug": "maximum-number-of-occurrences-of-a-substring",
    "title": "Maximum Number of Occurrences of a Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 53.526927997278726
  },
  "1298": {
    "titleSlug": "maximum-candies-you-can-get-from-boxes",
    "title": "Maximum Candies You Can Get from Boxes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 68.6560310580181
  },
  "1299": {
    "titleSlug": "replace-elements-with-greatest-element-on-right-side",
    "title": "Replace Elements with Greatest Element on Right Side",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 71.53599379432892
  },
  "1300": {
    "titleSlug": "sum-of-mutated-array-closest-to-target",
    "title": "Sum of Mutated Array Closest to Target",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 45.41706957097053
  },
  "1301": {
    "titleSlug": "number-of-paths-with-max-score",
    "title": "Number of Paths with Max Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 41.13315150012398
  },
  "1302": {
    "titleSlug": "deepest-leaves-sum",
    "title": "Deepest Leaves Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 86.37106173655278
  },
  "1304": {
    "titleSlug": "find-n-unique-integers-sum-up-to-zero",
    "title": "Find N Unique Integers Sum up to Zero",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 76.18057535231343
  },
  "1305": {
    "titleSlug": "all-elements-in-two-binary-search-trees",
    "title": "All Elements in Two Binary Search Trees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Sorting",
      "Binary Tree"
    ],
    "acRate": 80.04272661539473
  },
  "1306": {
    "titleSlug": "jump-game-iii",
    "title": "Jump Game III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 66.09123731436168
  },
  "1307": {
    "titleSlug": "verbal-arithmetic-puzzle",
    "title": "Verbal Arithmetic Puzzle",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "String",
      "Backtracking"
    ],
    "acRate": 34.763856404094156
  },
  "1309": {
    "titleSlug": "decrypt-string-from-alphabet-to-integer-mapping",
    "title": "Decrypt String from Alphabet to Integer Mapping",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 80.2335796599659
  },
  "1310": {
    "titleSlug": "xor-queries-of-a-subarray",
    "title": "XOR Queries of a Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 78.36120604081262
  },
  "1311": {
    "titleSlug": "get-watched-videos-by-your-friends",
    "title": "Get Watched Videos by Your Friends",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Breadth-First Search",
      "Graph",
      "Sorting"
    ],
    "acRate": 49.889192865548914
  },
  "1312": {
    "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
    "title": "Minimum Insertion Steps to Make a String Palindrome",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 72.63579540452506
  },
  "1313": {
    "titleSlug": "decompress-run-length-encoded-list",
    "title": "Decompress Run-Length Encoded List",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 86.04739948031039
  },
  "1314": {
    "titleSlug": "matrix-block-sum",
    "title": "Matrix Block Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 75.99820444931373
  },
  "1315": {
    "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
    "title": "Sum of Nodes with Even-Valued Grandparent",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 85.73724227890666
  },
  "1316": {
    "titleSlug": "distinct-echo-substrings",
    "title": "Distinct Echo Substrings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Trie",
      "Rolling Hash",
      "Hash Function"
    ],
    "acRate": 52.091746919333126
  },
  "1317": {
    "titleSlug": "convert-integer-to-the-sum-of-two-no-zero-integers",
    "title": "Convert Integer to the Sum of Two No-Zero Integers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 54.28130146354172
  },
  "1318": {
    "titleSlug": "minimum-flips-to-make-a-or-b-equal-to-c",
    "title": "Minimum Flips to Make a OR b Equal to c",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 71.7011937041201
  },
  "1319": {
    "titleSlug": "number-of-operations-to-make-network-connected",
    "title": "Number of Operations to Make Network Connected",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 64.89875995794678
  },
  "1320": {
    "titleSlug": "minimum-distance-to-type-a-word-using-two-fingers",
    "title": "Minimum Distance to Type a Word Using Two Fingers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 59.075368168248296
  },
  "1321": {
    "titleSlug": "restaurant-growth",
    "title": "Restaurant Growth",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 56.73878875834784
  },
  "1323": {
    "titleSlug": "maximum-69-number",
    "title": "Maximum 69 Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 81.80033134932809
  },
  "1324": {
    "titleSlug": "print-words-vertically",
    "title": "Print Words Vertically",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Simulation"
    ],
    "acRate": 66.30679137409453
  },
  "1325": {
    "titleSlug": "delete-leaves-with-a-given-value",
    "title": "Delete Leaves With a Given Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 77.28755972858544
  },
  "1326": {
    "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
    "title": "Minimum Number of Taps to Open to Water a Garden",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 50.72136282721791
  },
  "1327": {
    "titleSlug": "list-the-products-ordered-in-a-period",
    "title": "List the Products Ordered in a Period",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 71.81878372976215
  },
  "1328": {
    "titleSlug": "break-a-palindrome",
    "title": "Break a Palindrome",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 51.560576839884234
  },
  "1329": {
    "titleSlug": "sort-the-matrix-diagonally",
    "title": "Sort the Matrix Diagonally",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Matrix"
    ],
    "acRate": 83.00141433652055
  },
  "1330": {
    "titleSlug": "reverse-subarray-to-maximize-array-value",
    "title": "Reverse Subarray To Maximize Array Value",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy"
    ],
    "acRate": 42.61048539248756
  },
  "1331": {
    "titleSlug": "rank-transform-of-an-array",
    "title": "Rank Transform of an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 70.67437288853837
  },
  "1332": {
    "titleSlug": "remove-palindromic-subsequences",
    "title": "Remove Palindromic Subsequences",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 76.68405558110159
  },
  "1333": {
    "titleSlug": "filter-restaurants-by-vegan-friendly-price-and-distance",
    "title": "Filter Restaurants by Vegan-Friendly, Price and Distance",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 63.31790067638442
  },
  "1334": {
    "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
    "title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Graph",
      "Shortest Path"
    ],
    "acRate": 70.49696120054485
  },
  "1335": {
    "titleSlug": "minimum-difficulty-of-a-job-schedule",
    "title": "Minimum Difficulty of a Job Schedule",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 59.65848303838096
  },
  "1337": {
    "titleSlug": "the-k-weakest-rows-in-a-matrix",
    "title": "The K Weakest Rows in a Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 74.00861941073495
  },
  "1338": {
    "titleSlug": "reduce-array-size-to-the-half",
    "title": "Reduce Array Size to The Half",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 69.13882287152245
  },
  "1339": {
    "titleSlug": "maximum-product-of-splitted-binary-tree",
    "title": "Maximum Product of Splitted Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 47.93508685788423
  },
  "1340": {
    "titleSlug": "jump-game-v",
    "title": "Jump Game V",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 64.15718821928394
  },
  "1341": {
    "titleSlug": "movie-rating",
    "title": "Movie Rating",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 41.54300237763384
  },
  "1342": {
    "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
    "title": "Number of Steps to Reduce a Number to Zero",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 85.65608437112905
  },
  "1343": {
    "titleSlug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
    "title": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 70.39358439676148
  },
  "1344": {
    "titleSlug": "angle-between-hands-of-a-clock",
    "title": "Angle Between Hands of a Clock",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 64.24408315439251
  },
  "1345": {
    "titleSlug": "jump-game-iv",
    "title": "Jump Game IV",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Breadth-First Search"
    ],
    "acRate": 46.09324306306573
  },
  "1346": {
    "titleSlug": "check-if-n-and-its-double-exist",
    "title": "Check If N and Its Double Exist",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 41.2843666360793
  },
  "1347": {
    "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
    "title": "Minimum Number of Steps to Make Two Strings Anagram",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 82.17117697367726
  },
  "1348": {
    "titleSlug": "tweet-counts-per-frequency",
    "title": "Tweet Counts Per Frequency",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Binary Search",
      "Design",
      "Sorting",
      "Ordered Set"
    ],
    "acRate": 45.29766933359837
  },
  "1349": {
    "titleSlug": "maximum-students-taking-exam",
    "title": "Maximum Students Taking Exam",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Matrix",
      "Bitmask"
    ],
    "acRate": 52.28597966871356
  },
  "1351": {
    "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
    "title": "Count Negative Numbers in a Sorted Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Matrix"
    ],
    "acRate": 77.6871270380754
  },
  "1352": {
    "titleSlug": "product-of-the-last-k-numbers",
    "title": "Product of the Last K Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Design",
      "Data Stream",
      "Prefix Sum"
    ],
    "acRate": 62.76106907708383
  },
  "1353": {
    "titleSlug": "maximum-number-of-events-that-can-be-attended",
    "title": "Maximum Number of Events That Can Be Attended",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 38.324352589844885
  },
  "1354": {
    "titleSlug": "construct-target-array-with-multiple-sums",
    "title": "Construct Target Array With Multiple Sums",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)"
    ],
    "acRate": 36.259603530874344
  },
  "1356": {
    "titleSlug": "sort-integers-by-the-number-of-1-bits",
    "title": "Sort Integers by The Number of 1 Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Sorting",
      "Counting"
    ],
    "acRate": 78.71122967986437
  },
  "1357": {
    "titleSlug": "apply-discount-every-n-orders",
    "title": "Apply Discount Every n Orders",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design"
    ],
    "acRate": 64.33596554199569
  },
  "1358": {
    "titleSlug": "number-of-substrings-containing-all-three-characters",
    "title": "Number of Substrings Containing All Three Characters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 73.22657830220814
  },
  "1359": {
    "titleSlug": "count-all-valid-pickup-and-delivery-options",
    "title": "Count All Valid Pickup and Delivery Options",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 64.86354824277973
  },
  "1360": {
    "titleSlug": "number-of-days-between-two-dates",
    "title": "Number of Days Between Two Dates",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 51.4391044870378
  },
  "1361": {
    "titleSlug": "validate-binary-tree-nodes",
    "title": "Validate Binary Tree Nodes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Binary Tree"
    ],
    "acRate": 43.88610061916835
  },
  "1362": {
    "titleSlug": "closest-divisors",
    "title": "Closest Divisors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 61.34135211663118
  },
  "1363": {
    "titleSlug": "largest-multiple-of-three",
    "title": "Largest Multiple of Three",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 32.761664222475694
  },
  "1365": {
    "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
    "title": "How Many Numbers Are Smaller Than the Current Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 87.14335711058649
  },
  "1366": {
    "titleSlug": "rank-teams-by-votes",
    "title": "Rank Teams by Votes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting",
      "Counting"
    ],
    "acRate": 59.45062090822427
  },
  "1367": {
    "titleSlug": "linked-list-in-binary-tree",
    "title": "Linked List in Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 51.91695239479538
  },
  "1368": {
    "titleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
    "title": "Minimum Cost to Make at Least One Valid Path in a Grid",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Matrix",
      "Shortest Path"
    ],
    "acRate": 70.70571029222552
  },
  "1370": {
    "titleSlug": "increasing-decreasing-string",
    "title": "Increasing Decreasing String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 76.83184265185876
  },
  "1371": {
    "titleSlug": "find-the-longest-substring-containing-vowels-in-even-counts",
    "title": "Find the Longest Substring Containing Vowels in Even Counts",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 75.73672609581206
  },
  "1372": {
    "titleSlug": "longest-zigzag-path-in-a-binary-tree",
    "title": "Longest ZigZag Path in a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 66.67371887197264
  },
  "1373": {
    "titleSlug": "maximum-sum-bst-in-binary-tree",
    "title": "Maximum Sum BST in Binary Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 44.5245144996952
  },
  "1374": {
    "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
    "title": "Generate a String With Characters That Have Odd Counts",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 78.08539418355045
  },
  "1375": {
    "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
    "title": "Number of Times Binary String Is Prefix-Aligned",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 65.75813495019887
  },
  "1376": {
    "titleSlug": "time-needed-to-inform-all-employees",
    "title": "Time Needed to Inform All Employees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 60.27015591247522
  },
  "1377": {
    "titleSlug": "frog-position-after-t-seconds",
    "title": "Frog Position After T Seconds",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 35.92258167394208
  },
  "1378": {
    "titleSlug": "replace-employee-id-with-the-unique-identifier",
    "title": "Replace Employee ID With The Unique Identifier",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 83.56832200558945
  },
  "1379": {
    "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
    "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 85.72909257189309
  },
  "1380": {
    "titleSlug": "lucky-numbers-in-a-matrix",
    "title": "Lucky Numbers in a Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 79.91696425979154
  },
  "1381": {
    "titleSlug": "design-a-stack-with-increment-operation",
    "title": "Design a Stack With Increment Operation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Design"
    ],
    "acRate": 80.13508314453041
  },
  "1382": {
    "titleSlug": "balance-a-binary-search-tree",
    "title": "Balance a Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Divide and Conquer",
      "Greedy",
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 84.65897831031658
  },
  "1383": {
    "titleSlug": "maximum-performance-of-a-team",
    "title": "Maximum Performance of a Team",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 47.50313260116459
  },
  "1385": {
    "titleSlug": "find-the-distance-value-between-two-arrays",
    "title": "Find the Distance Value Between Two Arrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 70.3299122251878
  },
  "1386": {
    "titleSlug": "cinema-seat-allocation",
    "title": "Cinema Seat Allocation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 42.877914763030816
  },
  "1387": {
    "titleSlug": "sort-integers-by-the-power-value",
    "title": "Sort Integers by The Power Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Memoization",
      "Sorting"
    ],
    "acRate": 70.80083086282404
  },
  "1388": {
    "titleSlug": "pizza-with-3n-slices",
    "title": "Pizza With 3n Slices",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 53.117102615694165
  },
  "1389": {
    "titleSlug": "create-target-array-in-the-given-order",
    "title": "Create Target Array in the Given Order",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 86.24713094859978
  },
  "1390": {
    "titleSlug": "four-divisors",
    "title": "Four Divisors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 44.917043740573156
  },
  "1391": {
    "titleSlug": "check-if-there-is-a-valid-path-in-a-grid",
    "title": "Check if There is a Valid Path in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 48.99480914279159
  },
  "1392": {
    "titleSlug": "longest-happy-prefix",
    "title": "Longest Happy Prefix",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 49.27234200275538
  },
  "1393": {
    "titleSlug": "capital-gainloss",
    "title": "Capital Gain/Loss",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 84.8973757380925
  },
  "1394": {
    "titleSlug": "find-lucky-integer-in-an-array",
    "title": "Find Lucky Integer in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 75.38351092957024
  },
  "1395": {
    "titleSlug": "count-number-of-teams",
    "title": "Count Number of Teams",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 70.10434084275758
  },
  "1396": {
    "titleSlug": "design-underground-system",
    "title": "Design Underground System",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Design"
    ],
    "acRate": 74.05173128635228
  },
  "1397": {
    "titleSlug": "find-all-good-strings",
    "title": "Find All Good Strings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "String Matching"
    ],
    "acRate": 43.80824131430111
  },
  "1399": {
    "titleSlug": "count-largest-group",
    "title": "Count Largest Group",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math"
    ],
    "acRate": 74.96548730193184
  },
  "1400": {
    "titleSlug": "construct-k-palindrome-strings",
    "title": "Construct K Palindrome Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Counting"
    ],
    "acRate": 68.70252887791554
  },
  "1401": {
    "titleSlug": "circle-and-rectangle-overlapping",
    "title": "Circle and Rectangle Overlapping",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Geometry"
    ],
    "acRate": 48.92509013219388
  },
  "1402": {
    "titleSlug": "reducing-dishes",
    "title": "Reducing Dishes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 76.37988254022503
  },
  "1403": {
    "titleSlug": "minimum-subsequence-in-non-increasing-order",
    "title": "Minimum Subsequence in Non-Increasing Order",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 73.03850019665254
  },
  "1404": {
    "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
    "title": "Number of Steps to Reduce a Number in Binary Representation to One",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Bit Manipulation",
      "Simulation"
    ],
    "acRate": 61.36744614030526
  },
  "1405": {
    "titleSlug": "longest-happy-string",
    "title": "Longest Happy String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 65.4568238412724
  },
  "1406": {
    "titleSlug": "stone-game-iii",
    "title": "Stone Game III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Game Theory"
    ],
    "acRate": 63.205192520887145
  },
  "1407": {
    "titleSlug": "top-travellers",
    "title": "Top Travellers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 57.058469762779815
  },
  "1408": {
    "titleSlug": "string-matching-in-an-array",
    "title": "String Matching in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "String Matching"
    ],
    "acRate": 69.82545551107117
  },
  "1409": {
    "titleSlug": "queries-on-a-permutation-with-key",
    "title": "Queries on a Permutation With Key",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Indexed Tree",
      "Simulation"
    ],
    "acRate": 84.56681172210219
  },
  "1410": {
    "titleSlug": "html-entity-parser",
    "title": "HTML Entity Parser",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 50.20346230774536
  },
  "1411": {
    "titleSlug": "number-of-ways-to-paint-n-3-grid",
    "title": "Number of Ways to Paint N \u00d7 3 Grid",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 65.08913103314282
  },
  "1413": {
    "titleSlug": "minimum-value-to-get-positive-step-by-step-sum",
    "title": "Minimum Value to Get Positive Step by Step Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 64.62626987132865
  },
  "1414": {
    "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
    "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 64.49122064734503
  },
  "1415": {
    "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
    "title": "The k-th Lexicographical String of All Happy Strings of Length n",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking"
    ],
    "acRate": 85.14843257353193
  },
  "1416": {
    "titleSlug": "restore-the-array",
    "title": "Restore The Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 46.910899053051075
  },
  "1417": {
    "titleSlug": "reformat-the-string",
    "title": "Reformat The String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 52.07264237419598
  },
  "1418": {
    "titleSlug": "display-table-of-food-orders-in-a-restaurant",
    "title": "Display Table of Food Orders in a Restaurant",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting",
      "Ordered Set"
    ],
    "acRate": 75.68492389734473
  },
  "1419": {
    "titleSlug": "minimum-number-of-frogs-croaking",
    "title": "Minimum Number of Frogs Croaking",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Counting"
    ],
    "acRate": 50.79618941659133
  },
  "1420": {
    "titleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
    "title": "Build Array Where You Can Find The Maximum Exactly K Comparisons",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 66.67181914790842
  },
  "1422": {
    "titleSlug": "maximum-score-after-splitting-a-string",
    "title": "Maximum Score After Splitting a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Prefix Sum"
    ],
    "acRate": 65.14954961539165
  },
  "1423": {
    "titleSlug": "maximum-points-you-can-obtain-from-cards",
    "title": "Maximum Points You Can Obtain from Cards",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 55.83852199652956
  },
  "1424": {
    "titleSlug": "diagonal-traverse-ii",
    "title": "Diagonal Traverse II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 58.03569249648758
  },
  "1425": {
    "titleSlug": "constrained-subsequence-sum",
    "title": "Constrained Subsequence Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "acRate": 56.41219219179791
  },
  "1431": {
    "titleSlug": "kids-with-the-greatest-number-of-candies",
    "title": "Kids With the Greatest Number of Candies",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 88.1034592897176
  },
  "1432": {
    "titleSlug": "max-difference-you-can-get-from-changing-an-integer",
    "title": "Max Difference You Can Get From Changing an Integer",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 48.93145810925495
  },
  "1433": {
    "titleSlug": "check-if-a-string-can-break-another-string",
    "title": "Check If a String Can Break Another String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Sorting"
    ],
    "acRate": 70.34233516405338
  },
  "1434": {
    "titleSlug": "number-of-ways-to-wear-different-hats-to-each-other",
    "title": "Number of Ways to Wear Different Hats to Each Other",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 44.49572817440833
  },
  "1436": {
    "titleSlug": "destination-city",
    "title": "Destination City",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 79.43153287555165
  },
  "1437": {
    "titleSlug": "check-if-all-1s-are-at-least-length-k-places-away",
    "title": "Check If All 1's Are at Least Length K Places Away",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 58.09830728739359
  },
  "1438": {
    "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
    "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Ordered Set",
      "Monotonic Queue"
    ],
    "acRate": 56.801640671469166
  },
  "1439": {
    "titleSlug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
    "title": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 61.95643760546156
  },
  "1441": {
    "titleSlug": "build-an-array-with-stack-operations",
    "title": "Build an Array With Stack Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Simulation"
    ],
    "acRate": 80.23981524570843
  },
  "1442": {
    "titleSlug": "count-triplets-that-can-form-two-arrays-of-equal-xor",
    "title": "Count Triplets That Can Form Two Arrays of Equal XOR",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 84.80652038563855
  },
  "1443": {
    "titleSlug": "minimum-time-to-collect-all-apples-in-a-tree",
    "title": "Minimum Time to Collect All Apples in a Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 63.0533882703603
  },
  "1444": {
    "titleSlug": "number-of-ways-of-cutting-a-pizza",
    "title": "Number of Ways of Cutting a Pizza",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Memoization",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 61.614660304860024
  },
  "1446": {
    "titleSlug": "consecutive-characters",
    "title": "Consecutive Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 60.24005113515305
  },
  "1447": {
    "titleSlug": "simplified-fractions",
    "title": "Simplified Fractions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Number Theory"
    ],
    "acRate": 68.43276861119135
  },
  "1448": {
    "titleSlug": "count-good-nodes-in-binary-tree",
    "title": "Count Good Nodes in Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 73.52990339987208
  },
  "1449": {
    "titleSlug": "form-largest-integer-with-digits-that-add-up-to-target",
    "title": "Form Largest Integer With Digits That Add up to Target",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 48.77764576859806
  },
  "1450": {
    "titleSlug": "number-of-students-doing-homework-at-a-given-time",
    "title": "Number of Students Doing Homework at a Given Time",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 75.69997501059333
  },
  "1451": {
    "titleSlug": "rearrange-words-in-a-sentence",
    "title": "Rearrange Words in a Sentence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sorting"
    ],
    "acRate": 65.90275143373574
  },
  "1452": {
    "titleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
    "title": "People Whose List of Favorite Companies Is Not a Subset of Another List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 59.496083797301125
  },
  "1453": {
    "titleSlug": "maximum-number-of-darts-inside-of-a-circular-dartboard",
    "title": "Maximum Number of Darts Inside of a Circular Dartboard",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 38.51562900990607
  },
  "1455": {
    "titleSlug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
    "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "String Matching"
    ],
    "acRate": 68.68418888418462
  },
  "1456": {
    "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
    "title": "Maximum Number of Vowels in a Substring of Given Length",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window"
    ],
    "acRate": 60.53964994965993
  },
  "1457": {
    "titleSlug": "pseudo-palindromic-paths-in-a-binary-tree",
    "title": "Pseudo-Palindromic Paths in a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 68.33670198040728
  },
  "1458": {
    "titleSlug": "max-dot-product-of-two-subsequences",
    "title": "Max Dot Product of Two Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 62.34916192711625
  },
  "1460": {
    "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
    "title": "Make Two Arrays Equal by Reversing Subarrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 75.82491166748983
  },
  "1461": {
    "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
    "title": "Check If a String Contains All Binary Codes of Size K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Rolling Hash",
      "Hash Function"
    ],
    "acRate": 56.64468399915451
  },
  "1462": {
    "titleSlug": "course-schedule-iv",
    "title": "Course Schedule IV",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 59.60556852163694
  },
  "1463": {
    "titleSlug": "cherry-pickup-ii",
    "title": "Cherry Pickup II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 72.02479634128912
  },
  "1464": {
    "titleSlug": "maximum-product-of-two-elements-in-an-array",
    "title": "Maximum Product of Two Elements in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 83.26753234038787
  },
  "1465": {
    "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
    "title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 41.24106505286336
  },
  "1466": {
    "titleSlug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
    "title": "Reorder Routes to Make All Paths Lead to the City Zero",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 65.10902535340239
  },
  "1467": {
    "titleSlug": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",
    "title": "Probability of a Two Boxes Having The Same Number of Distinct Balls",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Backtracking",
      "Combinatorics",
      "Probability and Statistics"
    ],
    "acRate": 60.05846243788366
  },
  "1470": {
    "titleSlug": "shuffle-the-array",
    "title": "Shuffle the Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 88.8531856932142
  },
  "1471": {
    "titleSlug": "the-k-strongest-values-in-an-array",
    "title": "The k Strongest Values in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 61.95407665209456
  },
  "1472": {
    "titleSlug": "design-browser-history",
    "title": "Design Browser History",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Linked List",
      "Stack",
      "Design",
      "Doubly-Linked List",
      "Data Stream"
    ],
    "acRate": 77.78094596913654
  },
  "1473": {
    "titleSlug": "paint-house-iii",
    "title": "Paint House III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 61.02464681278834
  },
  "1475": {
    "titleSlug": "final-prices-with-a-special-discount-in-a-shop",
    "title": "Final Prices With a Special Discount in a Shop",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 83.33715020907044
  },
  "1476": {
    "titleSlug": "subrectangle-queries",
    "title": "Subrectangle Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Design",
      "Matrix"
    ],
    "acRate": 85.9823063921871
  },
  "1477": {
    "titleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
    "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Dynamic Programming",
      "Sliding Window"
    ],
    "acRate": 36.50819067244968
  },
  "1478": {
    "titleSlug": "allocate-mailboxes",
    "title": "Allocate Mailboxes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 55.746080755729544
  },
  "1480": {
    "titleSlug": "running-sum-of-1d-array",
    "title": "Running Sum of 1d Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 86.94928171526057
  },
  "1481": {
    "titleSlug": "least-number-of-unique-integers-after-k-removals",
    "title": "Least Number of Unique Integers after K Removals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Counting"
    ],
    "acRate": 63.459236238037334
  },
  "1482": {
    "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
    "title": "Minimum Number of Days to Make m Bouquets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 55.527943819148284
  },
  "1483": {
    "titleSlug": "kth-ancestor-of-a-tree-node",
    "title": "Kth Ancestor of a Tree Node",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design"
    ],
    "acRate": 36.03735652898254
  },
  "1484": {
    "titleSlug": "group-sold-products-by-the-date",
    "title": "Group Sold Products By The Date",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 77.72987547518555
  },
  "1486": {
    "titleSlug": "xor-operation-in-an-array",
    "title": "XOR Operation in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 86.89785595821482
  },
  "1487": {
    "titleSlug": "making-file-names-unique",
    "title": "Making File Names Unique",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 37.924453199154925
  },
  "1488": {
    "titleSlug": "avoid-flood-in-the-city",
    "title": "Avoid Flood in The City",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 27.42613773337262
  },
  "1489": {
    "titleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
    "title": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Union Find",
      "Graph",
      "Sorting",
      "Minimum Spanning Tree",
      "Strongly Connected Component"
    ],
    "acRate": 66.2965157989956
  },
  "1491": {
    "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
    "title": "Average Salary Excluding the Minimum and Maximum Salary",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 63.44141650164112
  },
  "1492": {
    "titleSlug": "the-kth-factor-of-n",
    "title": "The kth Factor of n",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Number Theory"
    ],
    "acRate": 69.6049734655179
  },
  "1493": {
    "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
    "title": "Longest Subarray of 1's After Deleting One Element",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sliding Window"
    ],
    "acRate": 69.2980081283436
  },
  "1494": {
    "titleSlug": "parallel-courses-ii",
    "title": "Parallel Courses II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Bit Manipulation",
      "Graph",
      "Bitmask"
    ],
    "acRate": 29.462934947049924
  },
  "1496": {
    "titleSlug": "path-crossing",
    "title": "Path Crossing",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 62.54347219480988
  },
  "1497": {
    "titleSlug": "check-if-array-pairs-are-divisible-by-k",
    "title": "Check If Array Pairs Are Divisible by k",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 46.204337700753904
  },
  "1498": {
    "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
    "title": "Number of Subsequences That Satisfy the Given Sum Condition",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 49.701089005461185
  },
  "1499": {
    "titleSlug": "max-value-of-equation",
    "title": "Max Value of Equation",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "acRate": 44.602074312054754
  },
  "1502": {
    "titleSlug": "can-make-arithmetic-progression-from-sequence",
    "title": "Can Make Arithmetic Progression From Sequence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 69.45389673428946
  },
  "1503": {
    "titleSlug": "last-moment-before-all-ants-fall-out-of-a-plank",
    "title": "Last Moment Before All Ants Fall Out of a Plank",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Brainteaser",
      "Simulation"
    ],
    "acRate": 68.1669376693767
  },
  "1504": {
    "titleSlug": "count-submatrices-with-all-ones",
    "title": "Count Submatrices With All Ones",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Matrix",
      "Monotonic Stack"
    ],
    "acRate": 57.32580037664784
  },
  "1505": {
    "titleSlug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",
    "title": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 40.01834613032547
  },
  "1507": {
    "titleSlug": "reformat-date",
    "title": "Reformat Date",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 67.38828646789344
  },
  "1508": {
    "titleSlug": "range-sum-of-sorted-subarray-sums",
    "title": "Range Sum of Sorted Subarray Sums",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 63.10357860257424
  },
  "1509": {
    "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
    "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 59.176700840562425
  },
  "1510": {
    "titleSlug": "stone-game-iv",
    "title": "Stone Game IV",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Game Theory"
    ],
    "acRate": 59.50078166490885
  },
  "1512": {
    "titleSlug": "number-of-good-pairs",
    "title": "Number of Good Pairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting"
    ],
    "acRate": 89.59764269759042
  },
  "1513": {
    "titleSlug": "number-of-substrings-with-only-1s",
    "title": "Number of Substrings With Only 1s",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 47.9358540797237
  },
  "1514": {
    "titleSlug": "path-with-maximum-probability",
    "title": "Path with Maximum Probability",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 65.30001173473443
  },
  "1515": {
    "titleSlug": "best-position-for-a-service-centre",
    "title": "Best Position for a Service Centre",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Randomized"
    ],
    "acRate": 34.847022876211156
  },
  "1517": {
    "titleSlug": "find-users-with-valid-e-mails",
    "title": "Find Users With Valid E-Mails",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 42.989315300280914
  },
  "1518": {
    "titleSlug": "water-bottles",
    "title": "Water Bottles",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 70.65246054471599
  },
  "1519": {
    "titleSlug": "number-of-nodes-in-the-sub-tree-with-the-same-label",
    "title": "Number of Nodes in the Sub-Tree With the Same Label",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Counting"
    ],
    "acRate": 55.07426198695347
  },
  "1520": {
    "titleSlug": "maximum-number-of-non-overlapping-substrings",
    "title": "Maximum Number of Non-Overlapping Substrings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 40.136054421768705
  },
  "1521": {
    "titleSlug": "find-a-value-of-a-mysterious-function-closest-to-target",
    "title": "Find a Value of a Mysterious Function Closest to Target",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Bit Manipulation",
      "Segment Tree"
    ],
    "acRate": 45.78920458695494
  },
  "1523": {
    "titleSlug": "count-odd-numbers-in-an-interval-range",
    "title": "Count Odd Numbers in an Interval Range",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 50.583193719084626
  },
  "1524": {
    "titleSlug": "number-of-sub-arrays-with-odd-sum",
    "title": "Number of Sub-arrays With Odd Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 56.02743250196334
  },
  "1525": {
    "titleSlug": "number-of-good-ways-to-split-a-string",
    "title": "Number of Good Ways to Split a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 68.33188480691534
  },
  "1526": {
    "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
    "title": "Minimum Number of Increments on Subarrays to Form a Target Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 72.49261016017047
  },
  "1527": {
    "titleSlug": "patients-with-a-condition",
    "title": "Patients With a Condition",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 39.05005697749638
  },
  "1528": {
    "titleSlug": "shuffle-string",
    "title": "Shuffle String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 85.11470261864682
  },
  "1529": {
    "titleSlug": "minimum-suffix-flips",
    "title": "Minimum Suffix Flips",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 73.50898864276891
  },
  "1530": {
    "titleSlug": "number-of-good-leaf-nodes-pairs",
    "title": "Number of Good Leaf Nodes Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 71.78344065899793
  },
  "1531": {
    "titleSlug": "string-compression-ii",
    "title": "String Compression II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 51.96722140725378
  },
  "1534": {
    "titleSlug": "count-good-triplets",
    "title": "Count Good Triplets",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 85.49313582655688
  },
  "1535": {
    "titleSlug": "find-the-winner-of-an-array-game",
    "title": "Find the Winner of an Array Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 56.75156242657769
  },
  "1536": {
    "titleSlug": "minimum-swaps-to-arrange-a-binary-grid",
    "title": "Minimum Swaps to Arrange a Binary Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Matrix"
    ],
    "acRate": 48.12250481587984
  },
  "1537": {
    "titleSlug": "get-the-maximum-score",
    "title": "Get the Maximum Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 40.07087314208437
  },
  "1539": {
    "titleSlug": "kth-missing-positive-number",
    "title": "Kth Missing Positive Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 62.39283390101775
  },
  "1540": {
    "titleSlug": "can-convert-string-in-k-moves",
    "title": "Can Convert String in K Moves",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 36.08007668253744
  },
  "1541": {
    "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
    "title": "Minimum Insertions to Balance a Parentheses String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy"
    ],
    "acRate": 53.208365889050114
  },
  "1542": {
    "titleSlug": "find-longest-awesome-substring",
    "title": "Find Longest Awesome Substring",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation"
    ],
    "acRate": 45.34513274336283
  },
  "1544": {
    "titleSlug": "make-the-string-great",
    "title": "Make The String Great",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 68.28473565979405
  },
  "1545": {
    "titleSlug": "find-kth-bit-in-nth-binary-string",
    "title": "Find Kth Bit in Nth Binary String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Recursion",
      "Simulation"
    ],
    "acRate": 70.17834779980136
  },
  "1546": {
    "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
    "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Prefix Sum"
    ],
    "acRate": 48.11616490211155
  },
  "1547": {
    "titleSlug": "minimum-cost-to-cut-a-stick",
    "title": "Minimum Cost to Cut a Stick",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 62.133712855630264
  },
  "1550": {
    "titleSlug": "three-consecutive-odds",
    "title": "Three Consecutive Odds",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 69.63968975680031
  },
  "1551": {
    "titleSlug": "minimum-operations-to-make-array-equal",
    "title": "Minimum Operations to Make Array Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 82.31463946461042
  },
  "1552": {
    "titleSlug": "magnetic-force-between-two-balls",
    "title": "Magnetic Force Between Two Balls",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 71.39863107208087
  },
  "1553": {
    "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
    "title": "Minimum Number of Days to Eat N Oranges",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 35.709257762598746
  },
  "1556": {
    "titleSlug": "thousand-separator",
    "title": "Thousand Separator",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 53.54369777158774
  },
  "1557": {
    "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
    "title": "Minimum Number of Vertices to Reach All Nodes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Graph"
    ],
    "acRate": 81.20188236385924
  },
  "1558": {
    "titleSlug": "minimum-numbers-of-function-calls-to-make-target-array",
    "title": "Minimum Numbers of Function Calls to Make Target Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 62.57976181249838
  },
  "1559": {
    "titleSlug": "detect-cycles-in-2d-grid",
    "title": "Detect Cycles in 2D Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 50.51047180667434
  },
  "1560": {
    "titleSlug": "most-visited-sector-in-a-circular-track",
    "title": "Most Visited Sector in  a Circular Track",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 59.170115091167716
  },
  "1561": {
    "titleSlug": "maximum-number-of-coins-you-can-get",
    "title": "Maximum Number of Coins You Can Get",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Sorting",
      "Game Theory"
    ],
    "acRate": 84.49882809638906
  },
  "1562": {
    "titleSlug": "find-latest-group-of-size-m",
    "title": "Find Latest Group of Size M",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Simulation"
    ],
    "acRate": 43.1679831490258
  },
  "1563": {
    "titleSlug": "stone-game-v",
    "title": "Stone Game V",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Game Theory"
    ],
    "acRate": 41.22665835972518
  },
  "1566": {
    "titleSlug": "detect-pattern-of-length-m-repeated-k-or-more-times",
    "title": "Detect Pattern of Length M Repeated K or More Times",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 43.49308581170676
  },
  "1567": {
    "titleSlug": "maximum-length-of-subarray-with-positive-product",
    "title": "Maximum Length of Subarray With Positive Product",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 44.409759719222464
  },
  "1568": {
    "titleSlug": "minimum-number-of-days-to-disconnect-island",
    "title": "Minimum Number of Days to Disconnect Island",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix",
      "Strongly Connected Component"
    ],
    "acRate": 59.017347482076744
  },
  "1569": {
    "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
    "title": "Number of Ways to Reorder Array to Get Same BST",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Divide and Conquer",
      "Dynamic Programming",
      "Tree",
      "Union Find",
      "Binary Search Tree",
      "Memoization",
      "Combinatorics",
      "Binary Tree"
    ],
    "acRate": 53.65115365383242
  },
  "1572": {
    "titleSlug": "matrix-diagonal-sum",
    "title": "Matrix Diagonal Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 83.74506868532798
  },
  "1573": {
    "titleSlug": "number-of-ways-to-split-a-string",
    "title": "Number of Ways to Split a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 33.88054876447175
  },
  "1574": {
    "titleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted",
    "title": "Shortest Subarray to be Removed to Make Array Sorted",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 51.41504820306951
  },
  "1575": {
    "titleSlug": "count-all-possible-routes",
    "title": "Count All Possible Routes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 64.93272240996828
  },
  "1576": {
    "titleSlug": "replace-all-s-to-avoid-consecutive-repeating-characters",
    "title": "Replace All ?'s to Avoid Consecutive Repeating Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 45.199931399321905
  },
  "1577": {
    "titleSlug": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
    "title": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Two Pointers"
    ],
    "acRate": 42.14812752331895
  },
  "1578": {
    "titleSlug": "minimum-time-to-make-rope-colorful",
    "title": "Minimum Time to Make Rope Colorful",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 63.419138233270786
  },
  "1579": {
    "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
    "title": "Remove Max Number of Edges to Keep Graph Fully Traversable",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Union Find",
      "Graph"
    ],
    "acRate": 70.39522972249827
  },
  "1581": {
    "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
    "title": "Customer Who Visited but Did Not Make Any Transactions",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 67.40619981916748
  },
  "1582": {
    "titleSlug": "special-positions-in-a-binary-matrix",
    "title": "Special Positions in a Binary Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 68.70997888615832
  },
  "1583": {
    "titleSlug": "count-unhappy-friends",
    "title": "Count Unhappy Friends",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 62.08573799918933
  },
  "1584": {
    "titleSlug": "min-cost-to-connect-all-points",
    "title": "Min Cost to Connect All Points",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Union Find",
      "Graph",
      "Minimum Spanning Tree"
    ],
    "acRate": 69.14822755378087
  },
  "1585": {
    "titleSlug": "check-if-string-is-transformable-with-substring-sort-operations",
    "title": "Check If String Is Transformable With Substring Sort Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Sorting"
    ],
    "acRate": 48.58468238189908
  },
  "1587": {
    "titleSlug": "bank-account-summary-ii",
    "title": "Bank Account Summary II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 83.32477598073373
  },
  "1588": {
    "titleSlug": "sum-of-all-odd-length-subarrays",
    "title": "Sum of All Odd Length Subarrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Prefix Sum"
    ],
    "acRate": 83.55245029078621
  },
  "1589": {
    "titleSlug": "maximum-sum-obtained-of-any-permutation",
    "title": "Maximum Sum Obtained of Any Permutation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 39.43823220362906
  },
  "1590": {
    "titleSlug": "make-sum-divisible-by-p",
    "title": "Make Sum Divisible by P",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 39.47046945423714
  },
  "1591": {
    "titleSlug": "strange-printer-ii",
    "title": "Strange Printer II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Topological Sort",
      "Matrix"
    ],
    "acRate": 59.986499029617754
  },
  "1592": {
    "titleSlug": "rearrange-spaces-between-words",
    "title": "Rearrange Spaces Between Words",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 43.96525119342321
  },
  "1593": {
    "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
    "title": "Split a String Into the Max Number of Unique Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Backtracking"
    ],
    "acRate": 68.40206529934434
  },
  "1594": {
    "titleSlug": "maximum-non-negative-product-in-a-matrix",
    "title": "Maximum Non Negative Product in a Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 34.82656335129245
  },
  "1595": {
    "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
    "title": "Minimum Cost to Connect Two Groups of Points",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Matrix",
      "Bitmask"
    ],
    "acRate": 48.43414459556192
  },
  "1598": {
    "titleSlug": "crawler-log-folder",
    "title": "Crawler Log Folder",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Stack"
    ],
    "acRate": 71.60797619641633
  },
  "1599": {
    "titleSlug": "maximum-profit-of-operating-a-centennial-wheel",
    "title": "Maximum Profit of Operating a Centennial Wheel",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 43.98925660656952
  },
  "1600": {
    "titleSlug": "throne-inheritance",
    "title": "Throne Inheritance",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Design"
    ],
    "acRate": 65.22765406819668
  },
  "1601": {
    "titleSlug": "maximum-number-of-achievable-transfer-requests",
    "title": "Maximum Number of Achievable Transfer Requests",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation",
      "Enumeration"
    ],
    "acRate": 64.465815590805
  },
  "1603": {
    "titleSlug": "design-parking-system",
    "title": "Design Parking System",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Simulation",
      "Counting"
    ],
    "acRate": 87.08649205139518
  },
  "1604": {
    "titleSlug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
    "title": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 45.86922185953459
  },
  "1605": {
    "titleSlug": "find-valid-matrix-given-row-and-column-sums",
    "title": "Find Valid Matrix Given Row and Column Sums",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Matrix"
    ],
    "acRate": 82.82688473123754
  },
  "1606": {
    "titleSlug": "find-servers-that-handled-most-number-of-requests",
    "title": "Find Servers That Handled Most Number of Requests",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 44.14158250808903
  },
  "1608": {
    "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
    "title": "Special Array With X Elements Greater Than or Equal X",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 66.6564757021171
  },
  "1609": {
    "titleSlug": "even-odd-tree",
    "title": "Even Odd Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 66.61796024825661
  },
  "1610": {
    "titleSlug": "maximum-number-of-visible-points",
    "title": "Maximum Number of Visible Points",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Sliding Window",
      "Sorting"
    ],
    "acRate": 37.71026963639101
  },
  "1611": {
    "titleSlug": "minimum-one-bit-operations-to-make-integers-zero",
    "title": "Minimum One Bit Operations to Make Integers Zero",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Bit Manipulation",
      "Memoization"
    ],
    "acRate": 73.25483210530578
  },
  "1614": {
    "titleSlug": "maximum-nesting-depth-of-the-parentheses",
    "title": "Maximum Nesting Depth of the Parentheses",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack"
    ],
    "acRate": 84.36869518863071
  },
  "1615": {
    "titleSlug": "maximal-network-rank",
    "title": "Maximal Network Rank",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Graph"
    ],
    "acRate": 65.50652142458505
  },
  "1616": {
    "titleSlug": "split-two-strings-to-make-palindrome",
    "title": "Split Two Strings to Make Palindrome",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 31.6042049990854
  },
  "1617": {
    "titleSlug": "count-subtrees-with-max-distance-between-cities",
    "title": "Count Subtrees With Max Distance Between Cities",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Bit Manipulation",
      "Tree",
      "Enumeration",
      "Bitmask"
    ],
    "acRate": 66.74707271722197
  },
  "1619": {
    "titleSlug": "mean-of-array-after-removing-some-elements",
    "title": "Mean of Array After Removing Some Elements",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 70.50733697440285
  },
  "1620": {
    "titleSlug": "coordinate-with-maximum-network-quality",
    "title": "Coordinate With Maximum Network Quality",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 38.450454444690756
  },
  "1621": {
    "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
    "title": "Number of Sets of K Non-Overlapping Line Segments",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 44.74049611588546
  },
  "1622": {
    "titleSlug": "fancy-sequence",
    "title": "Fancy Sequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Design",
      "Segment Tree"
    ],
    "acRate": 17.430867107697768
  },
  "1624": {
    "titleSlug": "largest-substring-between-two-equal-characters",
    "title": "Largest Substring Between Two Equal Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 68.22435493770575
  },
  "1625": {
    "titleSlug": "lexicographically-smallest-string-after-applying-operations",
    "title": "Lexicographically Smallest String After Applying Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Enumeration"
    ],
    "acRate": 65.38809921962095
  },
  "1626": {
    "titleSlug": "best-team-with-no-conflicts",
    "title": "Best Team With No Conflicts",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 50.4428020073691
  },
  "1627": {
    "titleSlug": "graph-connectivity-with-threshold",
    "title": "Graph Connectivity With Threshold",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Union Find",
      "Number Theory"
    ],
    "acRate": 48.19780522521695
  },
  "1629": {
    "titleSlug": "slowest-key",
    "title": "Slowest Key",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 59.28590203683141
  },
  "1630": {
    "titleSlug": "arithmetic-subarrays",
    "title": "Arithmetic Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 83.70853113851513
  },
  "1631": {
    "titleSlug": "path-with-minimum-effort",
    "title": "Path With Minimum Effort",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 61.58890892818398
  },
  "1632": {
    "titleSlug": "rank-transform-of-a-matrix",
    "title": "Rank Transform of a Matrix",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Union Find",
      "Graph",
      "Topological Sort",
      "Sorting",
      "Matrix"
    ],
    "acRate": 41.46966535788799
  },
  "1633": {
    "titleSlug": "percentage-of-users-attended-a-contest",
    "title": "Percentage of Users Attended a Contest",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 58.97412729424556
  },
  "1636": {
    "titleSlug": "sort-array-by-increasing-frequency",
    "title": "Sort Array by Increasing Frequency",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 80.28503746030441
  },
  "1637": {
    "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
    "title": "Widest Vertical Area Between Two Points Containing No Points",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 87.08281062600808
  },
  "1638": {
    "titleSlug": "count-substrings-that-differ-by-one-character",
    "title": "Count Substrings That Differ by One Character",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Enumeration"
    ],
    "acRate": 71.76456151832461
  },
  "1639": {
    "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
    "title": "Number of Ways to Form a Target String Given a Dictionary",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 57.02178696309753
  },
  "1640": {
    "titleSlug": "check-array-formation-through-concatenation",
    "title": "Check Array Formation Through Concatenation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 56.99771137543114
  },
  "1641": {
    "titleSlug": "count-sorted-vowel-strings",
    "title": "Count Sorted Vowel Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 78.9045820985884
  },
  "1642": {
    "titleSlug": "furthest-building-you-can-reach",
    "title": "Furthest Building You Can Reach",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 50.39385678511428
  },
  "1643": {
    "titleSlug": "kth-smallest-instructions",
    "title": "Kth Smallest Instructions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 43.82446963092124
  },
  "1646": {
    "titleSlug": "get-maximum-in-generated-array",
    "title": "Get Maximum in Generated Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 51.02533694588956
  },
  "1647": {
    "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
    "title": "Minimum Deletions to Make Character Frequencies Unique",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting"
    ],
    "acRate": 61.323263505130186
  },
  "1648": {
    "titleSlug": "sell-diminishing-valued-colored-balls",
    "title": "Sell Diminishing-Valued Colored Balls",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 29.958830672629798
  },
  "1649": {
    "titleSlug": "create-sorted-array-through-instructions",
    "title": "Create Sorted Array through Instructions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Merge Sort",
      "Ordered Set"
    ],
    "acRate": 40.15355769362366
  },
  "1652": {
    "titleSlug": "defuse-the-bomb",
    "title": "Defuse the Bomb",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 79.29595038821388
  },
  "1653": {
    "titleSlug": "minimum-deletions-to-make-string-balanced",
    "title": "Minimum Deletions to Make String Balanced",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Stack"
    ],
    "acRate": 65.58741274641322
  },
  "1654": {
    "titleSlug": "minimum-jumps-to-reach-home",
    "title": "Minimum Jumps to Reach Home",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search"
    ],
    "acRate": 30.15836178308161
  },
  "1655": {
    "titleSlug": "distribute-repeating-integers",
    "title": "Distribute Repeating Integers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 39.79643444177519
  },
  "1656": {
    "titleSlug": "design-an-ordered-stream",
    "title": "Design an Ordered Stream",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design",
      "Data Stream"
    ],
    "acRate": 82.17379500974852
  },
  "1657": {
    "titleSlug": "determine-if-two-strings-are-close",
    "title": "Determine if Two Strings Are Close",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sorting",
      "Counting"
    ],
    "acRate": 54.15261445423866
  },
  "1658": {
    "titleSlug": "minimum-operations-to-reduce-x-to-zero",
    "title": "Minimum Operations to Reduce X to Zero",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 40.08990424466557
  },
  "1659": {
    "titleSlug": "maximize-grid-happiness",
    "title": "Maximize Grid Happiness",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Bit Manipulation",
      "Memoization",
      "Bitmask"
    ],
    "acRate": 39.786540171953746
  },
  "1661": {
    "titleSlug": "average-time-of-process-per-machine",
    "title": "Average Time of Process per Machine",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 68.39907641038957
  },
  "1662": {
    "titleSlug": "check-if-two-string-arrays-are-equivalent",
    "title": "Check If Two String Arrays are Equivalent",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 85.77079840610345
  },
  "1663": {
    "titleSlug": "smallest-string-with-a-given-numeric-value",
    "title": "Smallest String With A Given Numeric Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 67.1109068627451
  },
  "1664": {
    "titleSlug": "ways-to-make-a-fair-array",
    "title": "Ways to Make a Fair Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 64.61075592327943
  },
  "1665": {
    "titleSlug": "minimum-initial-energy-to-finish-tasks",
    "title": "Minimum Initial Energy to Finish Tasks",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 59.43516216684974
  },
  "1667": {
    "titleSlug": "fix-names-in-a-table",
    "title": "Fix Names in a Table",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 60.85748685085242
  },
  "1668": {
    "titleSlug": "maximum-repeating-substring",
    "title": "Maximum Repeating Substring",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "String Matching"
    ],
    "acRate": 39.698355187485625
  },
  "1669": {
    "titleSlug": "merge-in-between-linked-lists",
    "title": "Merge In Between Linked Lists",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 82.35928765980825
  },
  "1670": {
    "titleSlug": "design-front-middle-back-queue",
    "title": "Design Front Middle Back Queue",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Linked List",
      "Design",
      "Queue",
      "Data Stream"
    ],
    "acRate": 56.295354462569
  },
  "1671": {
    "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
    "title": "Minimum Number of Removals to Make Mountain Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 54.90595752127011
  },
  "1672": {
    "titleSlug": "richest-customer-wealth",
    "title": "Richest Customer Wealth",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 88.56288895696906
  },
  "1673": {
    "titleSlug": "find-the-most-competitive-subsequence",
    "title": "Find the Most Competitive Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 51.9448358895076
  },
  "1674": {
    "titleSlug": "minimum-moves-to-make-array-complementary",
    "title": "Minimum Moves to Make Array Complementary",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 42.26224783861671
  },
  "1675": {
    "titleSlug": "minimize-deviation-in-array",
    "title": "Minimize Deviation in Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 53.91507959574247
  },
  "1678": {
    "titleSlug": "goal-parser-interpretation",
    "title": "Goal Parser Interpretation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 87.73176889945047
  },
  "1679": {
    "titleSlug": "max-number-of-k-sum-pairs",
    "title": "Max Number of K-Sum Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 56.31662625566754
  },
  "1680": {
    "titleSlug": "concatenation-of-consecutive-binary-numbers",
    "title": "Concatenation of Consecutive Binary Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation",
      "Simulation"
    ],
    "acRate": 56.7217351399657
  },
  "1681": {
    "titleSlug": "minimum-incompatibility",
    "title": "Minimum Incompatibility",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 39.86145591415072
  },
  "1683": {
    "titleSlug": "invalid-tweets",
    "title": "Invalid Tweets",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 85.47465492353749
  },
  "1684": {
    "titleSlug": "count-the-number-of-consistent-strings",
    "title": "Count the Number of Consistent Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Counting"
    ],
    "acRate": 88.27934987378639
  },
  "1685": {
    "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
    "title": "Sum of Absolute Differences in a Sorted Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Prefix Sum"
    ],
    "acRate": 68.11975315505643
  },
  "1686": {
    "titleSlug": "stone-game-vi",
    "title": "Stone Game VI",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Game Theory"
    ],
    "acRate": 59.19484853469954
  },
  "1687": {
    "titleSlug": "delivering-boxes-from-storage-to-ports",
    "title": "Delivering Boxes from Storage to Ports",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Segment Tree",
      "Queue",
      "Heap (Priority Queue)",
      "Prefix Sum",
      "Monotonic Queue"
    ],
    "acRate": 39.45775722088275
  },
  "1688": {
    "titleSlug": "count-of-matches-in-tournament",
    "title": "Count of Matches in Tournament",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 86.0341225521468
  },
  "1689": {
    "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
    "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 88.63832847791815
  },
  "1690": {
    "titleSlug": "stone-game-vii",
    "title": "Stone Game VII",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Game Theory"
    ],
    "acRate": 58.351999306348354
  },
  "1691": {
    "titleSlug": "maximum-height-by-stacking-cuboids",
    "title": "Maximum Height by Stacking Cuboids ",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 60.26291225886745
  },
  "1693": {
    "titleSlug": "daily-leads-and-partners",
    "title": "Daily Leads and Partners",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 86.64425396499512
  },
  "1694": {
    "titleSlug": "reformat-phone-number",
    "title": "Reformat Phone Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 66.9548284306494
  },
  "1695": {
    "titleSlug": "maximum-erasure-value",
    "title": "Maximum Erasure Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 59.47307951348996
  },
  "1696": {
    "titleSlug": "jump-game-vi",
    "title": "Jump Game VI",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Queue",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "acRate": 46.030104828622434
  },
  "1697": {
    "titleSlug": "checking-existence-of-edge-length-limited-paths",
    "title": "Checking Existence of Edge Length Limited Paths",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Union Find",
      "Graph",
      "Sorting"
    ],
    "acRate": 62.76884877361339
  },
  "1700": {
    "titleSlug": "number-of-students-unable-to-eat-lunch",
    "title": "Number of Students Unable to Eat Lunch",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Queue",
      "Simulation"
    ],
    "acRate": 78.73932993258312
  },
  "1701": {
    "titleSlug": "average-waiting-time",
    "title": "Average Waiting Time",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 73.05437174451966
  },
  "1702": {
    "titleSlug": "maximum-binary-string-after-change",
    "title": "Maximum Binary String After Change",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 47.551980485538394
  },
  "1703": {
    "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
    "title": "Minimum Adjacent Swaps for K Consecutive Ones",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 41.96928517633191
  },
  "1704": {
    "titleSlug": "determine-if-string-halves-are-alike",
    "title": "Determine if String Halves Are Alike",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Counting"
    ],
    "acRate": 78.66154092715341
  },
  "1705": {
    "titleSlug": "maximum-number-of-eaten-apples",
    "title": "Maximum Number of Eaten Apples",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 40.62518740629685
  },
  "1706": {
    "titleSlug": "where-will-the-ball-fall",
    "title": "Where Will the Ball Fall",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 72.05311825087352
  },
  "1707": {
    "titleSlug": "maximum-xor-with-an-element-from-array",
    "title": "Maximum XOR With an Element From Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Trie"
    ],
    "acRate": 55.4202081723558
  },
  "1710": {
    "titleSlug": "maximum-units-on-a-truck",
    "title": "Maximum Units on a Truck",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 74.27801866547516
  },
  "1711": {
    "titleSlug": "count-good-meals",
    "title": "Count Good Meals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 31.70781947692962
  },
  "1712": {
    "titleSlug": "ways-to-split-array-into-three-subarrays",
    "title": "Ways to Split Array Into Three Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Prefix Sum"
    ],
    "acRate": 33.52965249728653
  },
  "1713": {
    "titleSlug": "minimum-operations-to-make-a-subsequence",
    "title": "Minimum Operations to Make a Subsequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 48.85926515452978
  },
  "1716": {
    "titleSlug": "calculate-money-in-leetcode-bank",
    "title": "Calculate Money in Leetcode Bank",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 78.51447811447811
  },
  "1717": {
    "titleSlug": "maximum-score-from-removing-substrings",
    "title": "Maximum Score From Removing Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy"
    ],
    "acRate": 62.839145347052614
  },
  "1718": {
    "titleSlug": "construct-the-lexicographically-largest-valid-sequence",
    "title": "Construct the Lexicographically Largest Valid Sequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking"
    ],
    "acRate": 73.04440028275337
  },
  "1719": {
    "titleSlug": "number-of-ways-to-reconstruct-a-tree",
    "title": "Number Of Ways To Reconstruct A Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Graph"
    ],
    "acRate": 44.26475228778794
  },
  "1720": {
    "titleSlug": "decode-xored-array",
    "title": "Decode XORed Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 87.0120068272181
  },
  "1721": {
    "titleSlug": "swapping-nodes-in-a-linked-list",
    "title": "Swapping Nodes in a Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 68.53379150420616
  },
  "1722": {
    "titleSlug": "minimize-hamming-distance-after-swap-operations",
    "title": "Minimize Hamming Distance After Swap Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Union Find"
    ],
    "acRate": 48.20294507641845
  },
  "1723": {
    "titleSlug": "find-minimum-time-to-finish-all-jobs",
    "title": "Find Minimum Time to Finish All Jobs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 43.727873641472534
  },
  "1725": {
    "titleSlug": "number-of-rectangles-that-can-form-the-largest-square",
    "title": "Number Of Rectangles That Can Form The Largest Square",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 79.01823063602934
  },
  "1726": {
    "titleSlug": "tuple-with-same-product",
    "title": "Tuple with Same Product",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 70.12840437461914
  },
  "1727": {
    "titleSlug": "largest-submatrix-with-rearrangements",
    "title": "Largest Submatrix With Rearrangements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Matrix"
    ],
    "acRate": 75.17239352740665
  },
  "1728": {
    "titleSlug": "cat-and-mouse-ii",
    "title": "Cat and Mouse II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Matrix",
      "Game Theory"
    ],
    "acRate": 39.66306450851776
  },
  "1729": {
    "titleSlug": "find-followers-count",
    "title": "Find Followers Count",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 69.53077180704247
  },
  "1731": {
    "titleSlug": "the-number-of-employees-which-report-to-each-employee",
    "title": "The Number of Employees Which Report to Each Employee",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 52.19579106155165
  },
  "1732": {
    "titleSlug": "find-the-highest-altitude",
    "title": "Find the Highest Altitude",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 83.83896351486737
  },
  "1733": {
    "titleSlug": "minimum-number-of-people-to-teach",
    "title": "Minimum Number of People to Teach",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy"
    ],
    "acRate": 43.7902483900644
  },
  "1734": {
    "titleSlug": "decode-xored-permutation",
    "title": "Decode XORed Permutation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 65.94182130830407
  },
  "1735": {
    "titleSlug": "count-ways-to-make-array-with-product",
    "title": "Count Ways to Make Array With Product",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Combinatorics",
      "Number Theory"
    ],
    "acRate": 53.20242488139167
  },
  "1736": {
    "titleSlug": "latest-time-by-replacing-hidden-digits",
    "title": "Latest Time by Replacing Hidden Digits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 43.15755001587805
  },
  "1737": {
    "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
    "title": "Change Minimum Characters to Satisfy One of Three Conditions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting",
      "Prefix Sum"
    ],
    "acRate": 37.1682481576032
  },
  "1738": {
    "titleSlug": "find-kth-largest-xor-coordinate-value",
    "title": "Find Kth Largest XOR Coordinate Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Bit Manipulation",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix",
      "Prefix Sum",
      "Quickselect"
    ],
    "acRate": 63.16424000741908
  },
  "1739": {
    "titleSlug": "building-boxes",
    "title": "Building Boxes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 51.89391721796148
  },
  "1741": {
    "titleSlug": "find-total-time-spent-by-each-employee",
    "title": "Find Total Time Spent by Each Employee",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 86.79247087172082
  },
  "1742": {
    "titleSlug": "maximum-number-of-balls-in-a-box",
    "title": "Maximum Number of Balls in a Box",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Counting"
    ],
    "acRate": 74.26136308794146
  },
  "1743": {
    "titleSlug": "restore-the-array-from-adjacent-pairs",
    "title": "Restore the Array From Adjacent Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Depth-First Search"
    ],
    "acRate": 74.75113004792571
  },
  "1744": {
    "titleSlug": "can-you-eat-your-favorite-candy-on-your-favorite-day",
    "title": "Can You Eat Your Favorite Candy on Your Favorite Day?",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 34.930474116267376
  },
  "1745": {
    "titleSlug": "palindrome-partitioning-iv",
    "title": "Palindrome Partitioning IV",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 44.826333711691255
  },
  "1748": {
    "titleSlug": "sum-of-unique-elements",
    "title": "Sum of Unique Elements",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 79.1201254514215
  },
  "1749": {
    "titleSlug": "maximum-absolute-sum-of-any-subarray",
    "title": "Maximum Absolute Sum of Any Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 71.45803387288294
  },
  "1750": {
    "titleSlug": "minimum-length-of-string-after-deleting-similar-ends",
    "title": "Minimum Length of String After Deleting Similar Ends",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 55.934881358801455
  },
  "1751": {
    "titleSlug": "maximum-number-of-events-that-can-be-attended-ii",
    "title": "Maximum Number of Events That Can Be Attended II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 60.82239187262357
  },
  "1752": {
    "titleSlug": "check-if-array-is-sorted-and-rotated",
    "title": "Check if Array Is Sorted and Rotated",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 55.120519917914876
  },
  "1753": {
    "titleSlug": "maximum-score-from-removing-stones",
    "title": "Maximum Score From Removing Stones",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 67.90760416087222
  },
  "1754": {
    "titleSlug": "largest-merge-of-two-strings",
    "title": "Largest Merge Of Two Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 51.53375296953302
  },
  "1755": {
    "titleSlug": "closest-subsequence-sum",
    "title": "Closest Subsequence Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Bit Manipulation",
      "Sorting",
      "Bitmask"
    ],
    "acRate": 41.82379943502825
  },
  "1757": {
    "titleSlug": "recyclable-and-low-fat-products",
    "title": "Recyclable and Low Fat Products",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 89.20680575529572
  },
  "1758": {
    "titleSlug": "minimum-changes-to-make-alternating-binary-string",
    "title": "Minimum Changes To Make Alternating Binary String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 63.69011449405143
  },
  "1759": {
    "titleSlug": "count-number-of-homogenous-substrings",
    "title": "Count Number of Homogenous Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 57.35042774846434
  },
  "1760": {
    "titleSlug": "minimum-limit-of-balls-in-a-bag",
    "title": "Minimum Limit of Balls in a Bag",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 67.22581612242891
  },
  "1761": {
    "titleSlug": "minimum-degree-of-a-connected-trio-in-a-graph",
    "title": "Minimum Degree of a Connected Trio in a Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Graph"
    ],
    "acRate": 43.47749224563265
  },
  "1763": {
    "titleSlug": "longest-nice-substring",
    "title": "Longest Nice Substring",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Divide and Conquer",
      "Bit Manipulation",
      "Sliding Window"
    ],
    "acRate": 62.63459372746644
  },
  "1764": {
    "titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
    "title": "Form Array by Concatenating Subarrays of Another Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "String Matching"
    ],
    "acRate": 53.73777700630677
  },
  "1765": {
    "titleSlug": "map-of-highest-peak",
    "title": "Map of Highest Peak",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 75.16505945232733
  },
  "1766": {
    "titleSlug": "tree-of-coprimes",
    "title": "Tree of Coprimes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Tree",
      "Depth-First Search",
      "Number Theory"
    ],
    "acRate": 42.37228585482398
  },
  "1768": {
    "titleSlug": "merge-strings-alternately",
    "title": "Merge Strings Alternately",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 82.21668564019474
  },
  "1769": {
    "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
    "title": "Minimum Number of Operations to Move All Balls to Each Box",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Prefix Sum"
    ],
    "acRate": 90.13646024184683
  },
  "1770": {
    "titleSlug": "maximum-score-from-performing-multiplication-operations",
    "title": "Maximum Score from Performing Multiplication Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 42.32034632034632
  },
  "1771": {
    "titleSlug": "maximize-palindrome-length-from-subsequences",
    "title": "Maximize Palindrome Length From Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 37.26996909291972
  },
  "1773": {
    "titleSlug": "count-items-matching-a-rule",
    "title": "Count Items Matching a Rule",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 84.98829540959582
  },
  "1774": {
    "titleSlug": "closest-dessert-cost",
    "title": "Closest Dessert Cost",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking"
    ],
    "acRate": 47.719819151089816
  },
  "1775": {
    "titleSlug": "equal-sum-arrays-with-minimum-number-of-operations",
    "title": "Equal Sum Arrays With Minimum Number of Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Counting"
    ],
    "acRate": 53.981170691772405
  },
  "1776": {
    "titleSlug": "car-fleet-ii",
    "title": "Car Fleet II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Stack",
      "Heap (Priority Queue)",
      "Monotonic Stack"
    ],
    "acRate": 56.52967520981521
  },
  "1779": {
    "titleSlug": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
    "title": "Find Nearest Point That Has the Same X or Y Coordinate",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 69.4636163746774
  },
  "1780": {
    "titleSlug": "check-if-number-is-a-sum-of-powers-of-three",
    "title": "Check if Number is a Sum of Powers of Three",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 79.33220230822509
  },
  "1781": {
    "titleSlug": "sum-of-beauty-of-all-substrings",
    "title": "Sum of Beauty of All Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 71.12015204608898
  },
  "1782": {
    "titleSlug": "count-pairs-of-nodes",
    "title": "Count Pairs Of Nodes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Graph",
      "Sorting"
    ],
    "acRate": 40.94380929214303
  },
  "1784": {
    "titleSlug": "check-if-binary-string-has-at-most-one-segment-of-ones",
    "title": "Check if Binary String Has at Most One Segment of Ones",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 39.06885993437735
  },
  "1785": {
    "titleSlug": "minimum-elements-to-add-to-form-a-given-sum",
    "title": "Minimum Elements to Add to Form a Given Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 44.37874012959881
  },
  "1786": {
    "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
    "title": "Number of Restricted Paths From First to Last Node",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Graph",
      "Topological Sort",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 40.06747926279572
  },
  "1787": {
    "titleSlug": "make-the-xor-of-all-segments-equal-to-zero",
    "title": "Make the XOR of All Segments Equal to Zero",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 39.95496944355098
  },
  "1789": {
    "titleSlug": "primary-department-for-each-employee",
    "title": "Primary Department for Each Employee",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 71.86105755799642
  },
  "1790": {
    "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
    "title": "Check if One String Swap Can Make Strings Equal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 49.46295493538352
  },
  "1791": {
    "titleSlug": "find-center-of-star-graph",
    "title": "Find Center of Star Graph",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Graph"
    ],
    "acRate": 86.62879236720956
  },
  "1792": {
    "titleSlug": "maximum-average-pass-ratio",
    "title": "Maximum Average Pass Ratio",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 71.56348373557188
  },
  "1793": {
    "titleSlug": "maximum-score-of-a-good-subarray",
    "title": "Maximum Score of a Good Subarray",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 64.26562271217527
  },
  "1795": {
    "titleSlug": "rearrange-products-table",
    "title": "Rearrange Products Table",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 85.61405469666872
  },
  "1796": {
    "titleSlug": "second-largest-digit-in-a-string",
    "title": "Second Largest Digit in a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 52.06839529481076
  },
  "1797": {
    "titleSlug": "design-authentication-manager",
    "title": "Design Authentication Manager",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "acRate": 57.90012875001731
  },
  "1798": {
    "titleSlug": "maximum-number-of-consecutive-values-you-can-make",
    "title": "Maximum Number of Consecutive Values You Can Make",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 62.227512236873785
  },
  "1799": {
    "titleSlug": "maximize-score-after-n-operations",
    "title": "Maximize Score After N Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Number Theory",
      "Bitmask"
    ],
    "acRate": 57.86047889582099
  },
  "1800": {
    "titleSlug": "maximum-ascending-subarray-sum",
    "title": "Maximum Ascending Subarray Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 66.44343390226287
  },
  "1801": {
    "titleSlug": "number-of-orders-in-the-backlog",
    "title": "Number of Orders in the Backlog",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 52.126736912033365
  },
  "1802": {
    "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
    "title": "Maximum Value at a Given Index in a Bounded Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 38.840934825787535
  },
  "1803": {
    "titleSlug": "count-pairs-with-xor-in-a-range",
    "title": "Count Pairs With XOR in a Range",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Trie"
    ],
    "acRate": 45.812339968613195
  },
  "1805": {
    "titleSlug": "number-of-different-integers-in-a-string",
    "title": "Number of Different Integers in a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 39.165327955702914
  },
  "1806": {
    "titleSlug": "minimum-number-of-operations-to-reinitialize-a-permutation",
    "title": "Minimum Number of Operations to Reinitialize a Permutation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Simulation"
    ],
    "acRate": 72.14591987136541
  },
  "1807": {
    "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
    "title": "Evaluate the Bracket Pairs of a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 68.39473490697844
  },
  "1808": {
    "titleSlug": "maximize-number-of-nice-divisors",
    "title": "Maximize Number of Nice Divisors",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Recursion",
      "Number Theory"
    ],
    "acRate": 33.13931224630466
  },
  "1812": {
    "titleSlug": "determine-color-of-a-chessboard-square",
    "title": "Determine Color of a Chessboard Square",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 79.36666590945231
  },
  "1813": {
    "titleSlug": "sentence-similarity-iii",
    "title": "Sentence Similarity III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String"
    ],
    "acRate": 48.59476193189372
  },
  "1814": {
    "titleSlug": "count-nice-pairs-in-an-array",
    "title": "Count Nice Pairs in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting"
    ],
    "acRate": 48.5193612992215
  },
  "1815": {
    "titleSlug": "maximum-number-of-groups-getting-fresh-donuts",
    "title": "Maximum Number of Groups Getting Fresh Donuts",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Memoization",
      "Bitmask"
    ],
    "acRate": 40.50873397013035
  },
  "1816": {
    "titleSlug": "truncate-sentence",
    "title": "Truncate Sentence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 86.10765330124856
  },
  "1817": {
    "titleSlug": "finding-the-users-active-minutes",
    "title": "Finding the Users Active Minutes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 80.53469768354927
  },
  "1818": {
    "titleSlug": "minimum-absolute-sum-difference",
    "title": "Minimum Absolute Sum Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting",
      "Ordered Set"
    ],
    "acRate": 31.429549295172087
  },
  "1819": {
    "titleSlug": "number-of-different-subsequences-gcds",
    "title": "Number of Different Subsequences GCDs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Counting",
      "Number Theory"
    ],
    "acRate": 42.19149430629793
  },
  "1822": {
    "titleSlug": "sign-of-the-product-of-an-array",
    "title": "Sign of the Product of an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 65.02125908199268
  },
  "1823": {
    "titleSlug": "find-the-winner-of-the-circular-game",
    "title": "Find the Winner of the Circular Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Recursion",
      "Queue",
      "Simulation"
    ],
    "acRate": 82.09733614789602
  },
  "1824": {
    "titleSlug": "minimum-sideway-jumps",
    "title": "Minimum Sideway Jumps",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 50.908809802197375
  },
  "1825": {
    "titleSlug": "finding-mk-average",
    "title": "Finding MK Average",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Queue",
      "Heap (Priority Queue)",
      "Data Stream",
      "Ordered Set"
    ],
    "acRate": 38.23263280793929
  },
  "1827": {
    "titleSlug": "minimum-operations-to-make-the-array-increasing",
    "title": "Minimum Operations to Make the Array Increasing",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 81.1671699521596
  },
  "1828": {
    "titleSlug": "queries-on-number-of-points-inside-a-circle",
    "title": "Queries on Number of Points Inside a Circle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 86.5038371443413
  },
  "1829": {
    "titleSlug": "maximum-xor-for-each-query",
    "title": "Maximum XOR for Each Query",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 84.79294738370686
  },
  "1830": {
    "titleSlug": "minimum-number-of-operations-to-make-string-sorted",
    "title": "Minimum Number of Operations to Make String Sorted",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Combinatorics"
    ],
    "acRate": 50.08717054661061
  },
  "1832": {
    "titleSlug": "check-if-the-sentence-is-pangram",
    "title": "Check if the Sentence Is Pangram",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 83.87699027758208
  },
  "1833": {
    "titleSlug": "maximum-ice-cream-bars",
    "title": "Maximum Ice Cream Bars",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 73.94904485275949
  },
  "1834": {
    "titleSlug": "single-threaded-cpu",
    "title": "Single-Threaded CPU",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 46.55574697116953
  },
  "1835": {
    "titleSlug": "find-xor-sum-of-all-pairs-bitwise-and",
    "title": "Find XOR Sum of All Pairs Bitwise AND",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 61.7131867560684
  },
  "1837": {
    "titleSlug": "sum-of-digits-in-base-k",
    "title": "Sum of Digits in Base K",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 78.05524585314797
  },
  "1838": {
    "titleSlug": "frequency-of-the-most-frequent-element",
    "title": "Frequency of the Most Frequent Element",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sliding Window",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 44.13486829332096
  },
  "1839": {
    "titleSlug": "longest-substring-of-all-vowels-in-order",
    "title": "Longest Substring Of All Vowels in Order",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window"
    ],
    "acRate": 50.62744214006612
  },
  "1840": {
    "titleSlug": "maximum-building-height",
    "title": "Maximum Building Height",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting"
    ],
    "acRate": 37.6256582096697
  },
  "1844": {
    "titleSlug": "replace-all-digits-with-characters",
    "title": "Replace All Digits with Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 82.18103216202948
  },
  "1845": {
    "titleSlug": "seat-reservation-manager",
    "title": "Seat Reservation Manager",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Heap (Priority Queue)"
    ],
    "acRate": 66.44079716411811
  },
  "1846": {
    "titleSlug": "maximum-element-after-decreasing-and-rearranging",
    "title": "Maximum Element After Decreasing and Rearranging",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 65.72211359597773
  },
  "1847": {
    "titleSlug": "closest-room",
    "title": "Closest Room",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting",
      "Ordered Set"
    ],
    "acRate": 39.730903395742864
  },
  "1848": {
    "titleSlug": "minimum-distance-to-the-target-element",
    "title": "Minimum Distance to the Target Element",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 54.20487319741423
  },
  "1849": {
    "titleSlug": "splitting-a-string-into-descending-consecutive-values",
    "title": "Splitting a String Into Descending Consecutive Values",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Enumeration"
    ],
    "acRate": 36.85381220230817
  },
  "1850": {
    "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
    "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 71.39351198871651
  },
  "1851": {
    "titleSlug": "minimum-interval-to-include-each-query",
    "title": "Minimum Interval to Include Each Query",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Line Sweep",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 52.44247499016872
  },
  "1854": {
    "titleSlug": "maximum-population-year",
    "title": "Maximum Population Year",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Counting",
      "Prefix Sum"
    ],
    "acRate": 62.77002423252861
  },
  "1855": {
    "titleSlug": "maximum-distance-between-a-pair-of-values",
    "title": "Maximum Distance Between a Pair of Values",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search"
    ],
    "acRate": 53.875899871413424
  },
  "1856": {
    "titleSlug": "maximum-subarray-min-product",
    "title": "Maximum Subarray Min-Product",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack",
      "Prefix Sum"
    ],
    "acRate": 39.03457036566555
  },
  "1857": {
    "titleSlug": "largest-color-value-in-a-directed-graph",
    "title": "Largest Color Value in a Directed Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Dynamic Programming",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Counting"
    ],
    "acRate": 57.6340862422998
  },
  "1859": {
    "titleSlug": "sorting-the-sentence",
    "title": "Sorting the Sentence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sorting"
    ],
    "acRate": 83.79197751804716
  },
  "1860": {
    "titleSlug": "incremental-memory-leak",
    "title": "Incremental Memory Leak",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 72.58765927682998
  },
  "1861": {
    "titleSlug": "rotating-the-box",
    "title": "Rotating the Box",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Matrix"
    ],
    "acRate": 79.12695396620305
  },
  "1862": {
    "titleSlug": "sum-of-floored-pairs",
    "title": "Sum of Floored Pairs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Prefix Sum"
    ],
    "acRate": 29.715684940824378
  },
  "1863": {
    "titleSlug": "sum-of-all-subset-xor-totals",
    "title": "Sum of All Subset XOR Totals",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Backtracking",
      "Bit Manipulation",
      "Combinatorics",
      "Enumeration"
    ],
    "acRate": 90.07826094266188
  },
  "1864": {
    "titleSlug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
    "title": "Minimum Number of Swaps to Make the Binary String Alternating",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 43.48696058160475
  },
  "1865": {
    "titleSlug": "finding-pairs-with-a-certain-sum",
    "title": "Finding Pairs With a Certain Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design"
    ],
    "acRate": 61.85492203080324
  },
  "1866": {
    "titleSlug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
    "title": "Number of Ways to Rearrange Sticks With K Sticks Visible",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 57.929104477611936
  },
  "1869": {
    "titleSlug": "longer-contiguous-segments-of-ones-than-zeros",
    "title": "Longer Contiguous Segments of Ones than Zeros",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 61.64902652554554
  },
  "1870": {
    "titleSlug": "minimum-speed-to-arrive-on-time",
    "title": "Minimum Speed to Arrive on Time",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 47.2994084791525
  },
  "1871": {
    "titleSlug": "jump-game-vii",
    "title": "Jump Game VII",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 25.673172564709002
  },
  "1872": {
    "titleSlug": "stone-game-viii",
    "title": "Stone Game VIII",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Prefix Sum",
      "Game Theory"
    ],
    "acRate": 52.873985045185556
  },
  "1873": {
    "titleSlug": "calculate-special-bonus",
    "title": "Calculate Special Bonus",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 57.26616201165927
  },
  "1876": {
    "titleSlug": "substrings-of-size-three-with-distinct-characters",
    "title": "Substrings of Size Three with Distinct Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window",
      "Counting"
    ],
    "acRate": 75.5641311621682
  },
  "1877": {
    "titleSlug": "minimize-maximum-pair-sum-in-array",
    "title": "Minimize Maximum Pair Sum in Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 81.47460310317885
  },
  "1878": {
    "titleSlug": "get-biggest-three-rhombus-sums-in-a-grid",
    "title": "Get Biggest Three Rhombus Sums in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 49.34336383847784
  },
  "1879": {
    "titleSlug": "minimum-xor-sum-of-two-arrays",
    "title": "Minimum XOR Sum of Two Arrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 49.15761782156051
  },
  "1880": {
    "titleSlug": "check-if-word-equals-summation-of-two-words",
    "title": "Check if Word Equals Summation of Two Words",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 74.71625258395413
  },
  "1881": {
    "titleSlug": "maximum-value-after-insertion",
    "title": "Maximum Value after Insertion",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 38.57453687199597
  },
  "1882": {
    "titleSlug": "process-tasks-using-servers",
    "title": "Process Tasks Using Servers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)"
    ],
    "acRate": 41.30543748496271
  },
  "1883": {
    "titleSlug": "minimum-skips-to-arrive-at-meeting-on-time",
    "title": "Minimum Skips to Arrive at Meeting On Time",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 38.21524577572964
  },
  "1884": {
    "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
    "title": "Egg Drop With 2 Eggs and N Floors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 73.80077593073148
  },
  "1886": {
    "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
    "title": "Determine Whether Matrix Can Be Obtained By Rotation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 58.22714793554001
  },
  "1887": {
    "titleSlug": "reduction-operations-to-make-the-array-elements-equal",
    "title": "Reduction Operations to Make the Array Elements Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 72.30759194560821
  },
  "1888": {
    "titleSlug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
    "title": "Minimum Number of Flips to Make the Binary String Alternating",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Sliding Window"
    ],
    "acRate": 40.580722050343695
  },
  "1889": {
    "titleSlug": "minimum-space-wasted-from-packaging",
    "title": "Minimum Space Wasted From Packaging",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 32.71311942282134
  },
  "1890": {
    "titleSlug": "the-latest-login-in-2020",
    "title": "The Latest Login in 2020",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 77.36681101267332
  },
  "1893": {
    "titleSlug": "check-if-all-the-integers-in-a-range-are-covered",
    "title": "Check if All the Integers in a Range Are Covered",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 50.48590907117113
  },
  "1894": {
    "titleSlug": "find-the-student-that-will-replace-the-chalk",
    "title": "Find the Student that Will Replace the Chalk",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Simulation",
      "Prefix Sum"
    ],
    "acRate": 53.167830635810354
  },
  "1895": {
    "titleSlug": "largest-magic-square",
    "title": "Largest Magic Square",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 52.55897097112657
  },
  "1896": {
    "titleSlug": "minimum-cost-to-change-the-final-value-of-expression",
    "title": "Minimum Cost to Change the Final Value of Expression",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming",
      "Stack"
    ],
    "acRate": 50.74152542372882
  },
  "1897": {
    "titleSlug": "redistribute-characters-to-make-all-strings-equal",
    "title": "Redistribute Characters to Make All Strings Equal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 66.77841424033647
  },
  "1898": {
    "titleSlug": "maximum-number-of-removable-characters",
    "title": "Maximum Number of Removable Characters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String",
      "Binary Search"
    ],
    "acRate": 45.91066278972371
  },
  "1899": {
    "titleSlug": "merge-triplets-to-form-target-triplet",
    "title": "Merge Triplets to Form Target Triplet",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 67.7843528771102
  },
  "1900": {
    "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
    "title": "The Earliest and Latest Rounds Where Players Compete",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 48.20260180124702
  },
  "1901": {
    "titleSlug": "find-a-peak-element-ii",
    "title": "Find a Peak Element II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Matrix"
    ],
    "acRate": 53.326539285139596
  },
  "1903": {
    "titleSlug": "largest-odd-number-in-string",
    "title": "Largest Odd Number in String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Greedy"
    ],
    "acRate": 65.46303788498818
  },
  "1904": {
    "titleSlug": "the-number-of-full-rounds-you-have-played",
    "title": "The Number of Full Rounds You Have Played",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 43.37888154495733
  },
  "1905": {
    "titleSlug": "count-sub-islands",
    "title": "Count Sub Islands",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 72.84616814106542
  },
  "1906": {
    "titleSlug": "minimum-absolute-difference-queries",
    "title": "Minimum Absolute Difference Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 44.87297757592961
  },
  "1907": {
    "titleSlug": "count-salary-categories",
    "title": "Count Salary Categories",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 62.61074845952466
  },
  "1909": {
    "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
    "title": "Remove One Element to Make the Array Strictly Increasing",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 28.783545773113584
  },
  "1910": {
    "titleSlug": "remove-all-occurrences-of-a-substring",
    "title": "Remove All Occurrences of a Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 78.09453464523533
  },
  "1911": {
    "titleSlug": "maximum-alternating-subsequence-sum",
    "title": "Maximum Alternating Subsequence Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 58.63184862241
  },
  "1912": {
    "titleSlug": "design-movie-rental-system",
    "title": "Design Movie Rental System",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 35.67845550731358
  },
  "1913": {
    "titleSlug": "maximum-product-difference-between-two-pairs",
    "title": "Maximum Product Difference Between Two Pairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 82.90078652989439
  },
  "1914": {
    "titleSlug": "cyclically-rotating-a-grid",
    "title": "Cyclically Rotating a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 50.53322680376559
  },
  "1915": {
    "titleSlug": "number-of-wonderful-substrings",
    "title": "Number of Wonderful Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 66.65391062093879
  },
  "1916": {
    "titleSlug": "count-ways-to-build-rooms-in-an-ant-colony",
    "title": "Count Ways to Build Rooms in an Ant Colony",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Tree",
      "Graph",
      "Topological Sort",
      "Combinatorics"
    ],
    "acRate": 48.72306883867578
  },
  "1920": {
    "titleSlug": "build-array-from-permutation",
    "title": "Build Array from Permutation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 91.09033654325323
  },
  "1921": {
    "titleSlug": "eliminate-maximum-number-of-monsters",
    "title": "Eliminate Maximum Number of Monsters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 50.800328606018674
  },
  "1922": {
    "titleSlug": "count-good-numbers",
    "title": "Count Good Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Recursion"
    ],
    "acRate": 56.71531416177796
  },
  "1923": {
    "titleSlug": "longest-common-subpath",
    "title": "Longest Common Subpath",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Rolling Hash",
      "Suffix Array",
      "Hash Function"
    ],
    "acRate": 28.34450780124068
  },
  "1925": {
    "titleSlug": "count-square-sum-triples",
    "title": "Count Square Sum Triples",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 69.11242027362579
  },
  "1926": {
    "titleSlug": "nearest-exit-from-entrance-in-maze",
    "title": "Nearest Exit from Entrance in Maze",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 47.631743557665686
  },
  "1927": {
    "titleSlug": "sum-game",
    "title": "Sum Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Greedy",
      "Game Theory"
    ],
    "acRate": 48.55826992390869
  },
  "1928": {
    "titleSlug": "minimum-cost-to-reach-destination-in-time",
    "title": "Minimum Cost to Reach Destination in Time",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Graph"
    ],
    "acRate": 40.02299346123446
  },
  "1929": {
    "titleSlug": "concatenation-of-array",
    "title": "Concatenation of Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 90.50382646903672
  },
  "1930": {
    "titleSlug": "unique-length-3-palindromic-subsequences",
    "title": "Unique Length-3 Palindromic Subsequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 70.93254077357058
  },
  "1931": {
    "titleSlug": "painting-a-grid-with-three-different-colors",
    "title": "Painting a Grid With Three Different Colors",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 78.42227638806204
  },
  "1932": {
    "titleSlug": "merge-bsts-to-create-single-bst",
    "title": "Merge BSTs to Create Single BST",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Binary Search",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 36.036061738609455
  },
  "1934": {
    "titleSlug": "confirmation-rate",
    "title": "Confirmation Rate",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 60.95800301293106
  },
  "1935": {
    "titleSlug": "maximum-number-of-words-you-can-type",
    "title": "Maximum Number of Words You Can Type",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 74.73714532622786
  },
  "1936": {
    "titleSlug": "add-minimum-number-of-rungs",
    "title": "Add Minimum Number of Rungs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 43.373272131837496
  },
  "1937": {
    "titleSlug": "maximum-number-of-points-with-cost",
    "title": "Maximum Number of Points with Cost",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 42.110377901294726
  },
  "1938": {
    "titleSlug": "maximum-genetic-difference-query",
    "title": "Maximum Genetic Difference Query",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Depth-First Search",
      "Trie"
    ],
    "acRate": 44.507920020773824
  },
  "1941": {
    "titleSlug": "check-if-all-characters-have-equal-number-of-occurrences",
    "title": "Check if All Characters Have Equal Number of Occurrences",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 78.73622809392224
  },
  "1942": {
    "titleSlug": "the-number-of-the-smallest-unoccupied-chair",
    "title": "The Number of the Smallest Unoccupied Chair",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Heap (Priority Queue)"
    ],
    "acRate": 60.408012194587435
  },
  "1943": {
    "titleSlug": "describe-the-painting",
    "title": "Describe the Painting",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 51.21078951356266
  },
  "1944": {
    "titleSlug": "number-of-visible-people-in-a-queue",
    "title": "Number of Visible People in a Queue",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 71.38570470786388
  },
  "1945": {
    "titleSlug": "sum-of-digits-of-string-after-convert",
    "title": "Sum of Digits of String After Convert",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 74.72087634295345
  },
  "1946": {
    "titleSlug": "largest-number-after-mutating-substring",
    "title": "Largest Number After Mutating Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Greedy"
    ],
    "acRate": 36.96881047066173
  },
  "1947": {
    "titleSlug": "maximum-compatibility-score-sum",
    "title": "Maximum Compatibility Score Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 63.36360453862153
  },
  "1948": {
    "titleSlug": "delete-duplicate-folders-in-system",
    "title": "Delete Duplicate Folders in System",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie",
      "Hash Function"
    ],
    "acRate": 53.83240458416571
  },
  "1952": {
    "titleSlug": "three-divisors",
    "title": "Three Divisors",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration",
      "Number Theory"
    ],
    "acRate": 62.84351936797695
  },
  "1953": {
    "titleSlug": "maximum-number-of-weeks-for-which-you-can-work",
    "title": "Maximum Number of Weeks for Which You Can Work",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 41.419648607761786
  },
  "1954": {
    "titleSlug": "minimum-garden-perimeter-to-collect-enough-apples",
    "title": "Minimum Garden Perimeter to Collect Enough Apples",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search"
    ],
    "acRate": 54.56715914836246
  },
  "1955": {
    "titleSlug": "count-number-of-special-subsequences",
    "title": "Count Number of Special Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 51.90460294499463
  },
  "1957": {
    "titleSlug": "delete-characters-to-make-fancy-string",
    "title": "Delete Characters to Make Fancy String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 71.60828874547227
  },
  "1958": {
    "titleSlug": "check-if-move-is-legal",
    "title": "Check if Move is Legal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Enumeration"
    ],
    "acRate": 49.30510185900101
  },
  "1959": {
    "titleSlug": "minimum-total-space-wasted-with-k-resizing-operations",
    "title": "Minimum Total Space Wasted With K Resizing Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 43.013193968471555
  },
  "1960": {
    "titleSlug": "maximum-product-of-the-length-of-two-palindromic-substrings",
    "title": "Maximum Product of the Length of Two Palindromic Substrings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Rolling Hash",
      "Hash Function"
    ],
    "acRate": 30.344313406533825
  },
  "1961": {
    "titleSlug": "check-if-string-is-a-prefix-of-array",
    "title": "Check If String Is a Prefix of Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String"
    ],
    "acRate": 52.52355572146526
  },
  "1962": {
    "titleSlug": "remove-stones-to-minimize-the-total",
    "title": "Remove Stones to Minimize the Total",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 64.6388858901004
  },
  "1963": {
    "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
    "title": "Minimum Number of Swaps to Make the String Balanced",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Stack",
      "Greedy"
    ],
    "acRate": 77.99395240152245
  },
  "1964": {
    "titleSlug": "find-the-longest-valid-obstacle-course-at-each-position",
    "title": "Find the Longest Valid Obstacle Course at Each Position",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Binary Indexed Tree"
    ],
    "acRate": 62.52105069588277
  },
  "1965": {
    "titleSlug": "employees-with-missing-information",
    "title": "Employees With Missing Information",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 72.89863941025175
  },
  "1967": {
    "titleSlug": "number-of-strings-that-appear-as-substrings-in-word",
    "title": "Number of Strings That Appear as Substrings in Word",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 81.94012560209744
  },
  "1968": {
    "titleSlug": "array-with-elements-not-equal-to-average-of-neighbors",
    "title": "Array With Elements Not Equal to Average of Neighbors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 50.16761259915696
  },
  "1969": {
    "titleSlug": "minimum-non-zero-product-of-the-array-elements",
    "title": "Minimum Non-Zero Product of the Array Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy",
      "Recursion"
    ],
    "acRate": 36.40770440656989
  },
  "1970": {
    "titleSlug": "last-day-where-you-can-still-cross",
    "title": "Last Day Where You Can Still Cross",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 62.34262589928058
  },
  "1971": {
    "titleSlug": "find-if-path-exists-in-graph",
    "title": "Find if Path Exists in Graph",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 54.064533594523276
  },
  "1974": {
    "titleSlug": "minimum-time-to-type-word-using-special-typewriter",
    "title": "Minimum Time to Type Word Using Special Typewriter",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 77.80028830794406
  },
  "1975": {
    "titleSlug": "maximum-matrix-sum",
    "title": "Maximum Matrix Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Matrix"
    ],
    "acRate": 65.91608110346134
  },
  "1976": {
    "titleSlug": "number-of-ways-to-arrive-at-destination",
    "title": "Number of Ways to Arrive at Destination",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Graph",
      "Topological Sort",
      "Shortest Path"
    ],
    "acRate": 37.420965273755755
  },
  "1977": {
    "titleSlug": "number-of-ways-to-separate-numbers",
    "title": "Number of Ways to Separate Numbers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Suffix Array"
    ],
    "acRate": 21.047687462010277
  },
  "1978": {
    "titleSlug": "employees-whose-manager-left-the-company",
    "title": "Employees Whose Manager Left the Company",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 48.803744668000455
  },
  "1979": {
    "titleSlug": "find-greatest-common-divisor-of-array",
    "title": "Find Greatest Common Divisor of Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 78.68432764822853
  },
  "1980": {
    "titleSlug": "find-unique-binary-string",
    "title": "Find Unique Binary String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Backtracking"
    ],
    "acRate": 79.37746880299969
  },
  "1981": {
    "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
    "title": "Minimize the Difference Between Target and Chosen Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 35.932091302685556
  },
  "1982": {
    "titleSlug": "find-array-given-subset-sums",
    "title": "Find Array Given Subset Sums",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer"
    ],
    "acRate": 48.81772349641412
  },
  "1984": {
    "titleSlug": "minimum-difference-between-highest-and-lowest-of-k-scores",
    "title": "Minimum Difference Between Highest and Lowest of K Scores",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window",
      "Sorting"
    ],
    "acRate": 58.67658226190788
  },
  "1985": {
    "titleSlug": "find-the-kth-largest-integer-in-the-array",
    "title": "Find the Kth Largest Integer in the Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ],
    "acRate": 46.86490223081993
  },
  "1986": {
    "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
    "title": "Minimum Number of Work Sessions to Finish the Tasks",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 33.79842595216813
  },
  "1987": {
    "titleSlug": "number-of-unique-good-subsequences",
    "title": "Number of Unique Good Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 52.23911398500378
  },
  "1991": {
    "titleSlug": "find-the-middle-index-in-array",
    "title": "Find the Middle Index in Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 68.20289884616952
  },
  "1992": {
    "titleSlug": "find-all-groups-of-farmland",
    "title": "Find All Groups of Farmland",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 75.47152168532219
  },
  "1993": {
    "titleSlug": "operations-on-tree",
    "title": "Operations on Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design"
    ],
    "acRate": 43.532569422937954
  },
  "1994": {
    "titleSlug": "the-number-of-good-subsets",
    "title": "The Number of Good Subsets",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 35.97552090922338
  },
  "1995": {
    "titleSlug": "count-special-quadruplets",
    "title": "Count Special Quadruplets",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Enumeration"
    ],
    "acRate": 63.410745233968804
  },
  "1996": {
    "titleSlug": "the-number-of-weak-characters-in-the-game",
    "title": "The Number of Weak Characters in the Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Greedy",
      "Sorting",
      "Monotonic Stack"
    ],
    "acRate": 44.248929233020135
  },
  "1997": {
    "titleSlug": "first-day-where-you-have-been-in-all-the-rooms",
    "title": "First Day Where You Have Been in All the Rooms",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 39.761125024080144
  },
  "1998": {
    "titleSlug": "gcd-sort-of-an-array",
    "title": "GCD Sort of an Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Union Find",
      "Sorting",
      "Number Theory"
    ],
    "acRate": 46.661010786571325
  },
  "2000": {
    "titleSlug": "reverse-prefix-of-word",
    "title": "Reverse Prefix of Word",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Stack"
    ],
    "acRate": 86.40727561934173
  },
  "2001": {
    "titleSlug": "number-of-pairs-of-interchangeable-rectangles",
    "title": "Number of Pairs of Interchangeable Rectangles",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting",
      "Number Theory"
    ],
    "acRate": 51.649653663871675
  },
  "2002": {
    "titleSlug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
    "title": "Maximum Product of the Length of Two Palindromic Subsequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 61.41995186603844
  },
  "2003": {
    "titleSlug": "smallest-missing-genetic-value-in-each-subtree",
    "title": "Smallest Missing Genetic Value in Each Subtree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Union Find"
    ],
    "acRate": 46.59503275366417
  },
  "2006": {
    "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
    "title": "Count Number of Pairs With Absolute Difference K",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 84.94269311281063
  },
  "2007": {
    "titleSlug": "find-original-array-from-doubled-array",
    "title": "Find Original Array From Doubled Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting"
    ],
    "acRate": 40.504419354749245
  },
  "2008": {
    "titleSlug": "maximum-earnings-from-taxi",
    "title": "Maximum Earnings From Taxi",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 44.891158230064505
  },
  "2009": {
    "titleSlug": "minimum-number-of-operations-to-make-array-continuous",
    "title": "Minimum Number of Operations to Make Array Continuous",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Sliding Window"
    ],
    "acRate": 52.213506961631694
  },
  "2011": {
    "titleSlug": "final-value-of-variable-after-performing-operations",
    "title": "Final Value of Variable After Performing Operations",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Simulation"
    ],
    "acRate": 89.55711362564477
  },
  "2012": {
    "titleSlug": "sum-of-beauty-in-the-array",
    "title": "Sum of Beauty in the Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 50.18323759524094
  },
  "2013": {
    "titleSlug": "detect-squares",
    "title": "Detect Squares",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design",
      "Counting"
    ],
    "acRate": 51.39174741620034
  },
  "2014": {
    "titleSlug": "longest-subsequence-repeated-k-times",
    "title": "Longest Subsequence Repeated k Times",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Greedy",
      "Counting",
      "Enumeration"
    ],
    "acRate": 71.61366072795957
  },
  "2016": {
    "titleSlug": "maximum-difference-between-increasing-elements",
    "title": "Maximum Difference Between Increasing Elements",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 66.18324196529046
  },
  "2017": {
    "titleSlug": "grid-game",
    "title": "Grid Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 60.96364192422552
  },
  "2018": {
    "titleSlug": "check-if-word-can-be-placed-in-crossword",
    "title": "Check if Word Can Be Placed In Crossword",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Enumeration"
    ],
    "acRate": 50.12592550512224
  },
  "2019": {
    "titleSlug": "the-score-of-students-solving-math-expression",
    "title": "The Score of Students Solving Math Expression",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "String",
      "Dynamic Programming",
      "Stack",
      "Memoization"
    ],
    "acRate": 33.312252964426875
  },
  "2022": {
    "titleSlug": "convert-1d-array-into-2d-array",
    "title": "Convert 1D Array Into 2D Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 71.83232797524676
  },
  "2023": {
    "titleSlug": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
    "title": "Number of Pairs of Strings With Concatenation Equal to Target",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 74.88776803633674
  },
  "2024": {
    "titleSlug": "maximize-the-confusion-of-an-exam",
    "title": "Maximize the Confusion of an Exam",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 68.72133967690777
  },
  "2025": {
    "titleSlug": "maximum-number-of-ways-to-partition-an-array",
    "title": "Maximum Number of Ways to Partition an Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 34.68475922555022
  },
  "2027": {
    "titleSlug": "minimum-moves-to-convert-string",
    "title": "Minimum Moves to Convert String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 56.685541713854285
  },
  "2028": {
    "titleSlug": "find-missing-observations",
    "title": "Find Missing Observations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Simulation"
    ],
    "acRate": 57.38750367853608
  },
  "2029": {
    "titleSlug": "stone-game-ix",
    "title": "Stone Game IX",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Counting",
      "Game Theory"
    ],
    "acRate": 28.95116772823779
  },
  "2030": {
    "titleSlug": "smallest-k-length-subsequence-with-occurrences-of-a-letter",
    "title": "Smallest K-Length Subsequence With Occurrences of a Letter",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 38.955013879910254
  },
  "2032": {
    "titleSlug": "two-out-of-three",
    "title": "Two Out of Three",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation"
    ],
    "acRate": 76.64599518039805
  },
  "2033": {
    "titleSlug": "minimum-operations-to-make-a-uni-value-grid",
    "title": "Minimum Operations to Make a Uni-Value Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting",
      "Matrix"
    ],
    "acRate": 67.47146319534029
  },
  "2034": {
    "titleSlug": "stock-price-fluctuation",
    "title": "Stock Price Fluctuation ",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Design",
      "Heap (Priority Queue)",
      "Data Stream",
      "Ordered Set"
    ],
    "acRate": 48.21754615332597
  },
  "2035": {
    "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
    "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Dynamic Programming",
      "Bit Manipulation",
      "Ordered Set",
      "Bitmask"
    ],
    "acRate": 21.89308479670387
  },
  "2037": {
    "titleSlug": "minimum-number-of-moves-to-seat-everyone",
    "title": "Minimum Number of Moves to Seat Everyone",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 87.29526865110016
  },
  "2038": {
    "titleSlug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
    "title": "Remove Colored Pieces if Both Neighbors are the Same Color",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Greedy",
      "Game Theory"
    ],
    "acRate": 62.85426381256604
  },
  "2039": {
    "titleSlug": "the-time-when-the-network-becomes-idle",
    "title": "The Time When the Network Becomes Idle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 53.935222672064775
  },
  "2040": {
    "titleSlug": "kth-smallest-product-of-two-sorted-arrays",
    "title": "Kth Smallest Product of Two Sorted Arrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 49.14449559910295
  },
  "2042": {
    "titleSlug": "check-if-numbers-are-ascending-in-a-sentence",
    "title": "Check if Numbers Are Ascending in a Sentence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 71.9077112193277
  },
  "2043": {
    "titleSlug": "simple-bank-system",
    "title": "Simple Bank System",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design",
      "Simulation"
    ],
    "acRate": 61.39289212256891
  },
  "2044": {
    "titleSlug": "count-number-of-maximum-bitwise-or-subsets",
    "title": "Count Number of Maximum Bitwise-OR Subsets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation",
      "Enumeration"
    ],
    "acRate": 87.94395647813269
  },
  "2045": {
    "titleSlug": "second-minimum-time-to-reach-destination",
    "title": "Second Minimum Time to Reach Destination",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Breadth-First Search",
      "Graph",
      "Shortest Path"
    ],
    "acRate": 62.46925584853859
  },
  "2047": {
    "titleSlug": "number-of-valid-words-in-a-sentence",
    "title": "Number of Valid Words in a Sentence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 30.042028446372175
  },
  "2048": {
    "titleSlug": "next-greater-numerically-balanced-number",
    "title": "Next Greater Numerically Balanced Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Backtracking",
      "Counting",
      "Enumeration"
    ],
    "acRate": 49.05740955402355
  },
  "2049": {
    "titleSlug": "count-nodes-with-the-highest-score",
    "title": "Count Nodes With the Highest Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 51.324206117419116
  },
  "2050": {
    "titleSlug": "parallel-courses-iii",
    "title": "Parallel Courses III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 66.77257536559088
  },
  "2053": {
    "titleSlug": "kth-distinct-string-in-an-array",
    "title": "Kth Distinct String in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 82.02772064053518
  },
  "2054": {
    "titleSlug": "two-best-non-overlapping-events",
    "title": "Two Best Non-Overlapping Events",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 60.833579663020984
  },
  "2055": {
    "titleSlug": "plates-between-candles",
    "title": "Plates Between Candles",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Binary Search",
      "Prefix Sum"
    ],
    "acRate": 46.71971590161778
  },
  "2056": {
    "titleSlug": "number-of-valid-move-combinations-on-chessboard",
    "title": "Number of Valid Move Combinations On Chessboard",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Backtracking",
      "Simulation"
    ],
    "acRate": 47.78802710843373
  },
  "2057": {
    "titleSlug": "smallest-index-with-equal-value",
    "title": "Smallest Index With Equal Value",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 72.58725171136797
  },
  "2058": {
    "titleSlug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
    "title": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 69.45006116885143
  },
  "2059": {
    "titleSlug": "minimum-operations-to-convert-number",
    "title": "Minimum Operations to Convert Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search"
    ],
    "acRate": 50.63476186812341
  },
  "2060": {
    "titleSlug": "check-if-an-original-string-exists-given-two-encoded-strings",
    "title": "Check if an Original String Exists Given Two Encoded Strings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 43.23806482516366
  },
  "2062": {
    "titleSlug": "count-vowel-substrings-of-a-string",
    "title": "Count Vowel Substrings of a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 71.55608314024494
  },
  "2063": {
    "titleSlug": "vowels-of-all-substrings",
    "title": "Vowels of All Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 54.738441502062074
  },
  "2064": {
    "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
    "title": "Minimized Maximum of Products Distributed to Any Store",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 62.6271313702202
  },
  "2065": {
    "titleSlug": "maximum-path-quality-of-a-graph",
    "title": "Maximum Path Quality of a Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Graph"
    ],
    "acRate": 59.80398678462937
  },
  "2068": {
    "titleSlug": "check-whether-two-strings-are-almost-equivalent",
    "title": "Check Whether Two Strings are Almost Equivalent",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 63.69740532959327
  },
  "2069": {
    "titleSlug": "walking-robot-simulation-ii",
    "title": "Walking Robot Simulation II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Simulation"
    ],
    "acRate": 25.114222549742077
  },
  "2070": {
    "titleSlug": "most-beautiful-item-for-each-query",
    "title": "Most Beautiful Item for Each Query",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 62.05378172928639
  },
  "2071": {
    "titleSlug": "maximum-number-of-tasks-you-can-assign",
    "title": "Maximum Number of Tasks You Can Assign",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Queue",
      "Sorting",
      "Monotonic Queue"
    ],
    "acRate": 50.58660890065604
  },
  "2073": {
    "titleSlug": "time-needed-to-buy-tickets",
    "title": "Time Needed to Buy Tickets",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Queue",
      "Simulation"
    ],
    "acRate": 70.80102288794627
  },
  "2074": {
    "titleSlug": "reverse-nodes-in-even-length-groups",
    "title": "Reverse Nodes in Even Length Groups",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List"
    ],
    "acRate": 61.2893076553677
  },
  "2075": {
    "titleSlug": "decode-the-slanted-ciphertext",
    "title": "Decode the Slanted Ciphertext",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 49.20186676971552
  },
  "2076": {
    "titleSlug": "process-restricted-friend-requests",
    "title": "Process Restricted Friend Requests",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Union Find",
      "Graph"
    ],
    "acRate": 57.127417835171535
  },
  "2078": {
    "titleSlug": "two-furthest-houses-with-different-colors",
    "title": "Two Furthest Houses With Different Colors",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 65.60320277353584
  },
  "2079": {
    "titleSlug": "watering-plants",
    "title": "Watering Plants",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 79.94692213088226
  },
  "2080": {
    "titleSlug": "range-frequency-queries",
    "title": "Range Frequency Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Design",
      "Segment Tree"
    ],
    "acRate": 39.913251047973915
  },
  "2081": {
    "titleSlug": "sum-of-k-mirror-numbers",
    "title": "Sum of k-Mirror Numbers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 63.85147558086833
  },
  "2085": {
    "titleSlug": "count-common-words-with-one-occurrence",
    "title": "Count Common Words With One Occurrence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 72.45150254345536
  },
  "2086": {
    "titleSlug": "minimum-number-of-food-buckets-to-feed-the-hamsters",
    "title": "Minimum Number of Food Buckets to Feed the Hamsters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 47.058716630018
  },
  "2087": {
    "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
    "title": "Minimum Cost Homecoming of a Robot in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 51.26700924067662
  },
  "2088": {
    "titleSlug": "count-fertile-pyramids-in-a-land",
    "title": "Count Fertile Pyramids in a Land",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 65.47334482183557
  },
  "2089": {
    "titleSlug": "find-target-indices-after-sorting-array",
    "title": "Find Target Indices After Sorting Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 77.32648609987983
  },
  "2090": {
    "titleSlug": "k-radius-subarray-averages",
    "title": "K Radius Subarray Averages",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 45.96816664892993
  },
  "2091": {
    "titleSlug": "removing-minimum-and-maximum-from-array",
    "title": "Removing Minimum and Maximum From Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 55.41538621803219
  },
  "2092": {
    "titleSlug": "find-all-people-with-secret",
    "title": "Find All People With Secret",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Sorting"
    ],
    "acRate": 45.32815979955457
  },
  "2094": {
    "titleSlug": "finding-3-digit-even-numbers",
    "title": "Finding 3-Digit Even Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 78.87966825127829
  },
  "2095": {
    "titleSlug": "delete-the-middle-node-of-a-linked-list",
    "title": "Delete the Middle Node of a Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers"
    ],
    "acRate": 59.54235338896687
  },
  "2096": {
    "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
    "title": "Step-By-Step Directions From a Binary Tree Node to Another",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 56.32346917878353
  },
  "2097": {
    "titleSlug": "valid-arrangement-of-pairs",
    "title": "Valid Arrangement of Pairs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Graph",
      "Eulerian Circuit"
    ],
    "acRate": 66.25831230871935
  },
  "2099": {
    "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
    "title": "Find Subsequence of Length K With the Largest Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 57.456225423639154
  },
  "2100": {
    "titleSlug": "find-good-days-to-rob-the-bank",
    "title": "Find Good Days to Rob the Bank",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 50.434338958929125
  },
  "2101": {
    "titleSlug": "detonate-the-maximum-bombs",
    "title": "Detonate the Maximum Bombs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Geometry"
    ],
    "acRate": 49.275440340999054
  },
  "2102": {
    "titleSlug": "sequentially-ordinal-rank-tracker",
    "title": "Sequentially Ordinal Rank Tracker",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Heap (Priority Queue)",
      "Data Stream",
      "Ordered Set"
    ],
    "acRate": 61.658448223810005
  },
  "2103": {
    "titleSlug": "rings-and-rods",
    "title": "Rings and Rods",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 81.18456008751367
  },
  "2104": {
    "titleSlug": "sum-of-subarray-ranges",
    "title": "Sum of Subarray Ranges",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 60.11589886128631
  },
  "2105": {
    "titleSlug": "watering-plants-ii",
    "title": "Watering Plants II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Simulation"
    ],
    "acRate": 48.17548720089565
  },
  "2106": {
    "titleSlug": "maximum-fruits-harvested-after-at-most-k-steps",
    "title": "Maximum Fruits Harvested After at Most K Steps",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 36.62823239673122
  },
  "2108": {
    "titleSlug": "find-first-palindromic-string-in-the-array",
    "title": "Find First Palindromic String in the Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String"
    ],
    "acRate": 83.92224111241134
  },
  "2109": {
    "titleSlug": "adding-spaces-to-a-string",
    "title": "Adding Spaces to a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "String",
      "Simulation"
    ],
    "acRate": 71.65914725430619
  },
  "2110": {
    "titleSlug": "number-of-smooth-descent-periods-of-a-stock",
    "title": "Number of Smooth Descent Periods of a Stock",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 59.2306956010447
  },
  "2111": {
    "titleSlug": "minimum-operations-to-make-the-array-k-increasing",
    "title": "Minimum Operations to Make the Array K-Increasing",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 39.27214343055927
  },
  "2114": {
    "titleSlug": "maximum-number-of-words-found-in-sentences",
    "title": "Maximum Number of Words Found in Sentences",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 86.59730349873594
  },
  "2115": {
    "titleSlug": "find-all-possible-recipes-from-given-supplies",
    "title": "Find All Possible Recipes from Given Supplies",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 56.48147665218457
  },
  "2116": {
    "titleSlug": "check-if-a-parentheses-string-can-be-valid",
    "title": "Check if a Parentheses String Can Be Valid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Greedy"
    ],
    "acRate": 44.87079986764131
  },
  "2117": {
    "titleSlug": "abbreviating-the-product-of-a-range",
    "title": "Abbreviating the Product of a Range",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 24.556335121749896
  },
  "2119": {
    "titleSlug": "a-number-after-a-double-reversal",
    "title": "A Number After a Double Reversal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 81.32694983115941
  },
  "2120": {
    "titleSlug": "execution-of-all-suffix-instructions-staying-in-a-grid",
    "title": "Execution of All Suffix Instructions Staying in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 81.56616241854896
  },
  "2121": {
    "titleSlug": "intervals-between-identical-elements",
    "title": "Intervals Between Identical Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 44.98160700614345
  },
  "2122": {
    "titleSlug": "recover-the-original-array",
    "title": "Recover the Original Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 40.20218718209563
  },
  "2124": {
    "titleSlug": "check-if-all-as-appears-before-all-bs",
    "title": "Check if All A's Appears Before All B's",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 72.44094488188976
  },
  "2125": {
    "titleSlug": "number-of-laser-beams-in-a-bank",
    "title": "Number of Laser Beams in a Bank",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "String",
      "Matrix"
    ],
    "acRate": 85.4197132562452
  },
  "2126": {
    "titleSlug": "destroying-asteroids",
    "title": "Destroying Asteroids",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 52.71034464038509
  },
  "2127": {
    "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
    "title": "Maximum Employees to Be Invited to a Meeting",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 62.06237556133646
  },
  "2129": {
    "titleSlug": "capitalize-the-title",
    "title": "Capitalize the Title",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 66.66639655116528
  },
  "2130": {
    "titleSlug": "maximum-twin-sum-of-a-linked-list",
    "title": "Maximum Twin Sum of a Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Two Pointers",
      "Stack"
    ],
    "acRate": 81.50271146342213
  },
  "2131": {
    "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
    "title": "Longest Palindrome by Concatenating Two Letter Words",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Greedy",
      "Counting"
    ],
    "acRate": 53.72212098357123
  },
  "2132": {
    "titleSlug": "stamping-the-grid",
    "title": "Stamping the Grid",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 33.58564832336689
  },
  "2133": {
    "titleSlug": "check-if-every-row-and-column-contains-all-numbers",
    "title": "Check if Every Row and Column Contains All Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "acRate": 52.914639824045985
  },
  "2134": {
    "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
    "title": "Minimum Swaps to Group All 1's Together II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 65.53904533341644
  },
  "2135": {
    "titleSlug": "count-words-obtained-after-adding-a-letter",
    "title": "Count Words Obtained After Adding a Letter",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sorting"
    ],
    "acRate": 43.445412469371085
  },
  "2136": {
    "titleSlug": "earliest-possible-day-of-full-bloom",
    "title": "Earliest Possible Day of Full Bloom",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 71.16428189752419
  },
  "2138": {
    "titleSlug": "divide-a-string-into-groups-of-size-k",
    "title": "Divide a String Into Groups of Size k",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 77.08753377981435
  },
  "2139": {
    "titleSlug": "minimum-moves-to-reach-target-score",
    "title": "Minimum Moves to Reach Target Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 51.540657755648425
  },
  "2140": {
    "titleSlug": "solving-questions-with-brainpower",
    "title": "Solving Questions With Brainpower",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 60.31063607742683
  },
  "2141": {
    "titleSlug": "maximum-running-time-of-n-computers",
    "title": "Maximum Running Time of N Computers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 49.844241505640056
  },
  "2144": {
    "titleSlug": "minimum-cost-of-buying-candies-with-discount",
    "title": "Minimum Cost of Buying Candies With Discount",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 62.219180362741746
  },
  "2145": {
    "titleSlug": "count-the-hidden-sequences",
    "title": "Count the Hidden Sequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 56.7175605391465
  },
  "2146": {
    "titleSlug": "k-highest-ranked-items-within-a-price-range",
    "title": "K Highest Ranked Items Within a Price Range",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 45.00539576784122
  },
  "2147": {
    "titleSlug": "number-of-ways-to-divide-a-long-corridor",
    "title": "Number of Ways to Divide a Long Corridor",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 48.80211807304357
  },
  "2148": {
    "titleSlug": "count-elements-with-strictly-smaller-and-greater-elements",
    "title": "Count Elements With Strictly Smaller and Greater Elements ",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Counting"
    ],
    "acRate": 59.24336220002856
  },
  "2149": {
    "titleSlug": "rearrange-array-elements-by-sign",
    "title": "Rearrange Array Elements by Sign",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Simulation"
    ],
    "acRate": 84.37911221178759
  },
  "2150": {
    "titleSlug": "find-all-lonely-numbers-in-the-array",
    "title": "Find All Lonely Numbers in the Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 61.76970317297851
  },
  "2151": {
    "titleSlug": "maximum-good-people-based-on-statements",
    "title": "Maximum Good People Based on Statements",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation",
      "Enumeration"
    ],
    "acRate": 51.12287927821908
  },
  "2154": {
    "titleSlug": "keep-multiplying-found-values-by-two",
    "title": "Keep Multiplying Found Values by Two",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Simulation"
    ],
    "acRate": 71.33123168613322
  },
  "2155": {
    "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array",
    "title": "All Divisions With the Highest Score of a Binary Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 64.50662175610503
  },
  "2156": {
    "titleSlug": "find-substring-with-given-hash-value",
    "title": "Find Substring With Given Hash Value",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ],
    "acRate": 24.977839062346106
  },
  "2157": {
    "titleSlug": "groups-of-strings",
    "title": "Groups of Strings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Bit Manipulation",
      "Union Find"
    ],
    "acRate": 26.674558547893856
  },
  "2160": {
    "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
    "title": "Minimum Sum of Four Digit Number After Splitting Digits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy",
      "Sorting"
    ],
    "acRate": 86.12331245650661
  },
  "2161": {
    "titleSlug": "partition-array-according-to-given-pivot",
    "title": "Partition Array According to Given Pivot",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Simulation"
    ],
    "acRate": 89.88912616609257
  },
  "2162": {
    "titleSlug": "minimum-cost-to-set-cooking-time",
    "title": "Minimum Cost to Set Cooking Time",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 41.02644134302403
  },
  "2163": {
    "titleSlug": "minimum-difference-in-sums-after-removal-of-elements",
    "title": "Minimum Difference in Sums After Removal of Elements",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Heap (Priority Queue)"
    ],
    "acRate": 49.72784368457781
  },
  "2164": {
    "titleSlug": "sort-even-and-odd-indices-independently",
    "title": "Sort Even and Odd Indices Independently",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 62.69684029394818
  },
  "2165": {
    "titleSlug": "smallest-value-of-the-rearranged-number",
    "title": "Smallest Value of the Rearranged Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Sorting"
    ],
    "acRate": 52.77279549031809
  },
  "2166": {
    "titleSlug": "design-bitset",
    "title": "Design Bitset",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Design"
    ],
    "acRate": 31.808311124272038
  },
  "2167": {
    "titleSlug": "minimum-time-to-remove-all-cars-containing-illegal-goods",
    "title": "Minimum Time to Remove All Cars Containing Illegal Goods",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 41.313817738281934
  },
  "2169": {
    "titleSlug": "count-operations-to-obtain-zero",
    "title": "Count Operations to Obtain Zero",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 74.93008405758063
  },
  "2170": {
    "titleSlug": "minimum-operations-to-make-the-array-alternating",
    "title": "Minimum Operations to Make the Array Alternating",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Counting"
    ],
    "acRate": 34.65631364562118
  },
  "2171": {
    "titleSlug": "removing-minimum-number-of-magic-beans",
    "title": "Removing Minimum Number of Magic Beans",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 43.67907570289666
  },
  "2172": {
    "titleSlug": "maximum-and-sum-of-array",
    "title": "Maximum AND Sum of Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 49.94129279446298
  },
  "2176": {
    "titleSlug": "count-equal-and-divisible-pairs-in-an-array",
    "title": "Count Equal and Divisible Pairs in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 84.06756360153848
  },
  "2177": {
    "titleSlug": "find-three-consecutive-integers-that-sum-to-a-given-number",
    "title": "Find Three Consecutive Integers That Sum to a Given Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 64.6694214876033
  },
  "2178": {
    "titleSlug": "maximum-split-of-positive-even-integers",
    "title": "Maximum Split of Positive Even Integers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Backtracking",
      "Greedy"
    ],
    "acRate": 59.41495124593716
  },
  "2179": {
    "titleSlug": "count-good-triplets-in-an-array",
    "title": "Count Good Triplets in an Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Merge Sort",
      "Ordered Set"
    ],
    "acRate": 65.98081905858643
  },
  "2180": {
    "titleSlug": "count-integers-with-even-digit-sum",
    "title": "Count Integers With Even Digit Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 68.87388184906965
  },
  "2181": {
    "titleSlug": "merge-nodes-in-between-zeros",
    "title": "Merge Nodes in Between Zeros",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Simulation"
    ],
    "acRate": 89.56509744644899
  },
  "2182": {
    "titleSlug": "construct-string-with-repeat-limit",
    "title": "Construct String With Repeat Limit",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Heap (Priority Queue)",
      "Counting"
    ],
    "acRate": 70.89475980527234
  },
  "2183": {
    "titleSlug": "count-array-pairs-divisible-by-k",
    "title": "Count Array Pairs Divisible by K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 30.15944470260223
  },
  "2185": {
    "titleSlug": "counting-words-with-a-given-prefix",
    "title": "Counting Words With a Given Prefix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "String Matching"
    ],
    "acRate": 84.519377045881
  },
  "2186": {
    "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
    "title": "Minimum Number of Steps to Make Two Strings Anagram II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 72.77636315743261
  },
  "2187": {
    "titleSlug": "minimum-time-to-complete-trips",
    "title": "Minimum Time to Complete Trips",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 39.06773534676642
  },
  "2188": {
    "titleSlug": "minimum-time-to-finish-the-race",
    "title": "Minimum Time to Finish the Race",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 42.314868626311444
  },
  "2190": {
    "titleSlug": "most-frequent-number-following-key-in-an-array",
    "title": "Most Frequent Number Following Key In an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 59.198375794092605
  },
  "2191": {
    "titleSlug": "sort-the-jumbled-numbers",
    "title": "Sort the Jumbled Numbers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 59.977570949641255
  },
  "2192": {
    "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
    "title": "All Ancestors of a Node in a Directed Acyclic Graph",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 61.894859910643454
  },
  "2193": {
    "titleSlug": "minimum-number-of-moves-to-make-palindrome",
    "title": "Minimum Number of Moves to Make Palindrome",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Greedy",
      "Binary Indexed Tree"
    ],
    "acRate": 52.07250776011387
  },
  "2194": {
    "titleSlug": "cells-in-a-range-on-an-excel-sheet",
    "title": "Cells in a Range on an Excel Sheet",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 83.95027078720595
  },
  "2195": {
    "titleSlug": "append-k-integers-with-minimal-sum",
    "title": "Append K Integers With Minimal Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Sorting"
    ],
    "acRate": 26.184451198547716
  },
  "2196": {
    "titleSlug": "create-binary-tree-from-descriptions",
    "title": "Create Binary Tree From Descriptions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 81.64211950212496
  },
  "2197": {
    "titleSlug": "replace-non-coprime-numbers-in-array",
    "title": "Replace Non-Coprime Numbers in Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Stack",
      "Number Theory"
    ],
    "acRate": 40.549350462585686
  },
  "2200": {
    "titleSlug": "find-all-k-distant-indices-in-an-array",
    "title": "Find All K-Distant Indices in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 77.38105173357071
  },
  "2201": {
    "titleSlug": "count-artifacts-that-can-be-extracted",
    "title": "Count Artifacts That Can Be Extracted",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Simulation"
    ],
    "acRate": 56.360073231737196
  },
  "2202": {
    "titleSlug": "maximize-the-topmost-element-after-k-moves",
    "title": "Maximize the Topmost Element After K Moves",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 23.510097540871
  },
  "2203": {
    "titleSlug": "minimum-weighted-subgraph-with-the-required-paths",
    "title": "Minimum Weighted Subgraph With the Required Paths",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Graph",
      "Shortest Path"
    ],
    "acRate": 38.800930784322674
  },
  "2206": {
    "titleSlug": "divide-array-into-equal-pairs",
    "title": "Divide Array Into Equal Pairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Counting"
    ],
    "acRate": 79.30889372158047
  },
  "2207": {
    "titleSlug": "maximize-number-of-subsequences-in-a-string",
    "title": "Maximize Number of Subsequences in a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Prefix Sum"
    ],
    "acRate": 35.23925957273397
  },
  "2208": {
    "titleSlug": "minimum-operations-to-halve-array-sum",
    "title": "Minimum Operations to Halve Array Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 48.98586946073248
  },
  "2209": {
    "titleSlug": "minimum-white-tiles-after-covering-with-carpets",
    "title": "Minimum White Tiles After Covering With Carpets",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 37.32653782106272
  },
  "2210": {
    "titleSlug": "count-hills-and-valleys-in-an-array",
    "title": "Count Hills and Valleys in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 61.58508864979543
  },
  "2211": {
    "titleSlug": "count-collisions-on-a-road",
    "title": "Count Collisions on a Road",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 44.42683979338151
  },
  "2212": {
    "titleSlug": "maximum-points-in-an-archery-competition",
    "title": "Maximum Points in an Archery Competition",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation",
      "Enumeration"
    ],
    "acRate": 50.507998877350545
  },
  "2213": {
    "titleSlug": "longest-substring-of-one-repeating-character",
    "title": "Longest Substring of One Repeating Character",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Segment Tree",
      "Ordered Set"
    ],
    "acRate": 33.145073877574305
  },
  "2215": {
    "titleSlug": "find-the-difference-of-two-arrays",
    "title": "Find the Difference of Two Arrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 80.88989863580628
  },
  "2216": {
    "titleSlug": "minimum-deletions-to-make-array-beautiful",
    "title": "Minimum Deletions to Make Array Beautiful",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Greedy"
    ],
    "acRate": 48.942291196537205
  },
  "2217": {
    "titleSlug": "find-palindrome-with-fixed-length",
    "title": "Find Palindrome With Fixed Length",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 37.42205256716592
  },
  "2218": {
    "titleSlug": "maximum-value-of-k-coins-from-piles",
    "title": "Maximum Value of K Coins From Piles",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 60.335204426927824
  },
  "2220": {
    "titleSlug": "minimum-bit-flips-to-convert-number",
    "title": "Minimum Bit Flips to Convert Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 87.6191862788759
  },
  "2221": {
    "titleSlug": "find-triangular-sum-of-an-array",
    "title": "Find Triangular Sum of an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Simulation",
      "Combinatorics"
    ],
    "acRate": 78.80557663271328
  },
  "2222": {
    "titleSlug": "number-of-ways-to-select-buildings",
    "title": "Number of Ways to Select Buildings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 50.52417595282949
  },
  "2223": {
    "titleSlug": "sum-of-scores-of-built-strings",
    "title": "Sum of Scores of Built Strings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Binary Search",
      "Rolling Hash",
      "Suffix Array",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 42.45036779245432
  },
  "2224": {
    "titleSlug": "minimum-number-of-operations-to-convert-time",
    "title": "Minimum Number of Operations to Convert Time",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 65.6807664733103
  },
  "2225": {
    "titleSlug": "find-players-with-zero-or-one-losses",
    "title": "Find Players With Zero or One Losses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ],
    "acRate": 72.57864243644244
  },
  "2226": {
    "titleSlug": "maximum-candies-allocated-to-k-children",
    "title": "Maximum Candies Allocated to K Children",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 50.082892726264696
  },
  "2227": {
    "titleSlug": "encrypt-and-decrypt-strings",
    "title": "Encrypt and Decrypt Strings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "acRate": 36.96194037005081
  },
  "2231": {
    "titleSlug": "largest-number-after-digit-swaps-by-parity",
    "title": "Largest Number After Digit Swaps by Parity",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 63.92516185668825
  },
  "2232": {
    "titleSlug": "minimize-result-by-adding-parentheses-to-expression",
    "title": "Minimize Result by Adding Parentheses to Expression",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Enumeration"
    ],
    "acRate": 67.59878254252949
  },
  "2233": {
    "titleSlug": "maximum-product-after-k-increments",
    "title": "Maximum Product After K Increments",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 42.47600664843708
  },
  "2234": {
    "titleSlug": "maximum-total-beauty-of-the-gardens",
    "title": "Maximum Total Beauty of the Gardens",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Sorting",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 29.993394291276985
  },
  "2235": {
    "titleSlug": "add-two-integers",
    "title": "Add Two Integers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 88.07881376026361
  },
  "2236": {
    "titleSlug": "root-equals-sum-of-children",
    "title": "Root Equals Sum of Children",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Binary Tree"
    ],
    "acRate": 84.92096001605043
  },
  "2239": {
    "titleSlug": "find-closest-number-to-zero",
    "title": "Find Closest Number to Zero",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 47.24568599793555
  },
  "2240": {
    "titleSlug": "number-of-ways-to-buy-pens-and-pencils",
    "title": "Number of Ways to Buy Pens and Pencils",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 55.9681056701031
  },
  "2241": {
    "titleSlug": "design-an-atm-machine",
    "title": "Design an ATM Machine",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Design"
    ],
    "acRate": 42.380359259870644
  },
  "2242": {
    "titleSlug": "maximum-score-of-a-node-sequence",
    "title": "Maximum Score of a Node Sequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 39.10317850944227
  },
  "2243": {
    "titleSlug": "calculate-digit-sum-of-a-string",
    "title": "Calculate Digit Sum of a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 66.6574048346763
  },
  "2244": {
    "titleSlug": "minimum-rounds-to-complete-all-tasks",
    "title": "Minimum Rounds to Complete All Tasks",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Counting"
    ],
    "acRate": 62.983672901960176
  },
  "2245": {
    "titleSlug": "maximum-trailing-zeros-in-a-cornered-path",
    "title": "Maximum Trailing Zeros in a Cornered Path",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 36.64340231010979
  },
  "2246": {
    "titleSlug": "longest-path-with-different-adjacent-characters",
    "title": "Longest Path With Different Adjacent Characters",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Tree",
      "Depth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 53.922687875096464
  },
  "2248": {
    "titleSlug": "intersection-of-multiple-arrays",
    "title": "Intersection of Multiple Arrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ],
    "acRate": 68.48199391620057
  },
  "2249": {
    "titleSlug": "count-lattice-points-inside-a-circle",
    "title": "Count Lattice Points Inside a Circle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Geometry",
      "Enumeration"
    ],
    "acRate": 55.356644397714796
  },
  "2250": {
    "titleSlug": "count-number-of-rectangles-containing-each-point",
    "title": "Count Number of Rectangles Containing Each Point",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Binary Indexed Tree",
      "Sorting"
    ],
    "acRate": 36.15188538278984
  },
  "2251": {
    "titleSlug": "number-of-flowers-in-full-bloom",
    "title": "Number of Flowers in Full Bloom",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Sorting",
      "Prefix Sum",
      "Ordered Set"
    ],
    "acRate": 57.2182004368389
  },
  "2255": {
    "titleSlug": "count-prefixes-of-a-given-string",
    "title": "Count Prefixes of a Given String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 73.94232869729848
  },
  "2256": {
    "titleSlug": "minimum-average-difference",
    "title": "Minimum Average Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 43.55730265737922
  },
  "2257": {
    "titleSlug": "count-unguarded-cells-in-the-grid",
    "title": "Count Unguarded Cells in the Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 65.73531720631394
  },
  "2258": {
    "titleSlug": "escape-the-spreading-fire",
    "title": "Escape the Spreading Fire",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 36.4018012101881
  },
  "2259": {
    "titleSlug": "remove-digit-from-number-to-maximize-result",
    "title": "Remove Digit From Number to Maximize Result",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Enumeration"
    ],
    "acRate": 47.50513233432087
  },
  "2260": {
    "titleSlug": "minimum-consecutive-cards-to-pick-up",
    "title": "Minimum Consecutive Cards to Pick Up",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 52.767653987878305
  },
  "2261": {
    "titleSlug": "k-divisible-elements-subarrays",
    "title": "K Divisible Elements Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Trie",
      "Rolling Hash",
      "Hash Function",
      "Enumeration"
    ],
    "acRate": 53.9880510567879
  },
  "2262": {
    "titleSlug": "total-appeal-of-a-string",
    "title": "Total Appeal of A String",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 55.855264884154174
  },
  "2264": {
    "titleSlug": "largest-3-same-digit-number-in-string",
    "title": "Largest 3-Same-Digit Number in String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 69.11546459088636
  },
  "2265": {
    "titleSlug": "count-nodes-equal-to-average-of-subtree",
    "title": "Count Nodes Equal to Average of Subtree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 86.45372588388483
  },
  "2266": {
    "titleSlug": "count-number-of-texts",
    "title": "Count Number of Texts",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 48.943166698346324
  },
  "2267": {
    "titleSlug": "check-if-there-is-a-valid-parentheses-string-path",
    "title": " Check if There Is a Valid Parentheses String Path",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 39.448281779570124
  },
  "2269": {
    "titleSlug": "find-the-k-beauty-of-a-number",
    "title": "Find the K-Beauty of a Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Sliding Window"
    ],
    "acRate": 61.80500500500501
  },
  "2270": {
    "titleSlug": "number-of-ways-to-split-array",
    "title": "Number of Ways to Split Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 56.098374622139424
  },
  "2271": {
    "titleSlug": "maximum-white-tiles-covered-by-a-carpet",
    "title": "Maximum White Tiles Covered by a Carpet",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sliding Window",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 35.004572312886886
  },
  "2272": {
    "titleSlug": "substring-with-largest-variance",
    "title": "Substring With Largest Variance",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 45.9266528731896
  },
  "2273": {
    "titleSlug": "find-resultant-array-after-removing-anagrams",
    "title": "Find Resultant Array After Removing Anagrams",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 59.57840969733933
  },
  "2274": {
    "titleSlug": "maximum-consecutive-floors-without-special-floors",
    "title": "Maximum Consecutive Floors Without Special Floors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 52.13077199083658
  },
  "2275": {
    "titleSlug": "largest-combination-with-bitwise-and-greater-than-zero",
    "title": "Largest Combination With Bitwise AND Greater Than Zero",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Counting"
    ],
    "acRate": 80.89449614976813
  },
  "2276": {
    "titleSlug": "count-integers-in-intervals",
    "title": "Count Integers in Intervals",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Design",
      "Segment Tree",
      "Ordered Set"
    ],
    "acRate": 34.25701272719534
  },
  "2278": {
    "titleSlug": "percentage-of-letter-in-string",
    "title": "Percentage of Letter in String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 74.53985202761712
  },
  "2279": {
    "titleSlug": "maximum-bags-with-full-capacity-of-rocks",
    "title": "Maximum Bags With Full Capacity of Rocks",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 67.64455288331203
  },
  "2280": {
    "titleSlug": "minimum-lines-to-represent-a-line-chart",
    "title": "Minimum Lines to Represent a Line Chart",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Sorting",
      "Number Theory"
    ],
    "acRate": 26.166587456654522
  },
  "2281": {
    "titleSlug": "sum-of-total-strength-of-wizards",
    "title": "Sum of Total Strength of Wizards",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack",
      "Prefix Sum"
    ],
    "acRate": 28.455904606258702
  },
  "2283": {
    "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
    "title": "Check if Number Has Equal Digit Count and Digit Value",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 72.52946509519492
  },
  "2284": {
    "titleSlug": "sender-with-largest-word-count",
    "title": "Sender With Largest Word Count",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 58.4389755329804
  },
  "2285": {
    "titleSlug": "maximum-total-importance-of-roads",
    "title": "Maximum Total Importance of Roads",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Greedy",
      "Graph",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 69.14956011730206
  },
  "2286": {
    "titleSlug": "booking-concert-tickets-in-groups",
    "title": "Booking Concert Tickets in Groups",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Design",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 17.67261675441976
  },
  "2287": {
    "titleSlug": "rearrange-characters-to-make-target-string",
    "title": "Rearrange Characters to Make Target String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 60.23320404156492
  },
  "2288": {
    "titleSlug": "apply-discount-to-prices",
    "title": "Apply Discount to Prices",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 32.807742990866544
  },
  "2289": {
    "titleSlug": "steps-to-make-array-non-decreasing",
    "title": "Steps to Make Array Non-decreasing",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Linked List",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 23.210257116778894
  },
  "2290": {
    "titleSlug": "minimum-obstacle-removal-to-reach-corner",
    "title": "Minimum Obstacle Removal to Reach Corner",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Matrix",
      "Shortest Path"
    ],
    "acRate": 70.07030820720315
  },
  "2293": {
    "titleSlug": "min-max-game",
    "title": "Min Max Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 63.75405951022558
  },
  "2294": {
    "titleSlug": "partition-array-such-that-maximum-difference-is-k",
    "title": "Partition Array Such That Maximum Difference Is K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 81.8417366587482
  },
  "2295": {
    "titleSlug": "replace-elements-in-an-array",
    "title": "Replace Elements in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Simulation"
    ],
    "acRate": 58.848042249453314
  },
  "2296": {
    "titleSlug": "design-a-text-editor",
    "title": "Design a Text Editor",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "String",
      "Stack",
      "Design",
      "Simulation",
      "Doubly-Linked List"
    ],
    "acRate": 47.28835127754186
  },
  "2299": {
    "titleSlug": "strong-password-checker-ii",
    "title": "Strong Password Checker II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 55.00480820600492
  },
  "2300": {
    "titleSlug": "successful-pairs-of-spells-and-potions",
    "title": "Successful Pairs of Spells and Potions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 45.586955714109735
  },
  "2301": {
    "titleSlug": "match-substring-after-replacement",
    "title": "Match Substring After Replacement",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "String Matching"
    ],
    "acRate": 42.236436380316505
  },
  "2302": {
    "titleSlug": "count-subarrays-with-score-less-than-k",
    "title": "Count Subarrays With Score Less Than K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 62.42347737777736
  },
  "2303": {
    "titleSlug": "calculate-amount-paid-in-taxes",
    "title": "Calculate Amount Paid in Taxes",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 67.63682290204883
  },
  "2304": {
    "titleSlug": "minimum-path-cost-in-a-grid",
    "title": "Minimum Path Cost in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 67.3076923076923
  },
  "2305": {
    "titleSlug": "fair-distribution-of-cookies",
    "title": "Fair Distribution of Cookies",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 69.39882799468758
  },
  "2306": {
    "titleSlug": "naming-a-company",
    "title": "Naming a Company",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Enumeration"
    ],
    "acRate": 46.37371734820592
  },
  "2309": {
    "titleSlug": "greatest-english-letter-in-upper-and-lower-case",
    "title": "Greatest English Letter in Upper and Lower Case",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Enumeration"
    ],
    "acRate": 71.08393018717773
  },
  "2310": {
    "titleSlug": "sum-of-numbers-with-units-digit-k",
    "title": "Sum of Numbers With Units Digit K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Greedy",
      "Enumeration"
    ],
    "acRate": 27.385976041408096
  },
  "2311": {
    "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
    "title": "Longest Binary Subsequence Less Than or Equal to K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Greedy",
      "Memoization"
    ],
    "acRate": 52.924329287965655
  },
  "2312": {
    "titleSlug": "selling-pieces-of-wood",
    "title": "Selling Pieces of Wood",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 51.54868928004836
  },
  "2315": {
    "titleSlug": "count-asterisks",
    "title": "Count Asterisks",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 82.80564888104323
  },
  "2316": {
    "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
    "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 49.37031304700311
  },
  "2317": {
    "titleSlug": "maximum-xor-after-operations",
    "title": "Maximum XOR After Operations ",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 79.3254931921744
  },
  "2318": {
    "titleSlug": "number-of-distinct-roll-sequences",
    "title": "Number of Distinct Roll Sequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 57.451471509079525
  },
  "2319": {
    "titleSlug": "check-if-matrix-is-x-matrix",
    "title": "Check if Matrix Is X-Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 65.63318598559266
  },
  "2320": {
    "titleSlug": "count-number-of-ways-to-place-houses",
    "title": "Count Number of Ways to Place Houses",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 42.90084865253132
  },
  "2321": {
    "titleSlug": "maximum-score-of-spliced-array",
    "title": "Maximum Score Of Spliced Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 57.61591141665136
  },
  "2322": {
    "titleSlug": "minimum-score-after-removals-on-a-tree",
    "title": "Minimum Score After Removals on a Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 52.119531731361675
  },
  "2325": {
    "titleSlug": "decode-the-message",
    "title": "Decode the Message",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 85.45155869413342
  },
  "2326": {
    "titleSlug": "spiral-matrix-iv",
    "title": "Spiral Matrix IV",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Linked List",
      "Matrix",
      "Simulation"
    ],
    "acRate": 82.2019717151627
  },
  "2327": {
    "titleSlug": "number-of-people-aware-of-a-secret",
    "title": "Number of People Aware of a Secret",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Queue",
      "Simulation"
    ],
    "acRate": 46.38770893348307
  },
  "2328": {
    "titleSlug": "number-of-increasing-paths-in-a-grid",
    "title": "Number of Increasing Paths in a Grid",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Matrix"
    ],
    "acRate": 57.66295659517993
  },
  "2331": {
    "titleSlug": "evaluate-boolean-binary-tree",
    "title": "Evaluate Boolean Binary Tree",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "acRate": 82.3917856768945
  },
  "2332": {
    "titleSlug": "the-latest-time-to-catch-a-bus",
    "title": "The Latest Time to Catch a Bus",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 28.744470781462887
  },
  "2333": {
    "titleSlug": "minimum-sum-of-squared-difference",
    "title": "Minimum Sum of Squared Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 26.025158783992108
  },
  "2334": {
    "titleSlug": "subarray-with-elements-greater-than-varying-threshold",
    "title": "Subarray With Elements Greater Than Varying Threshold",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Union Find",
      "Monotonic Stack"
    ],
    "acRate": 44.59940898671601
  },
  "2335": {
    "titleSlug": "minimum-amount-of-time-to-fill-cups",
    "title": "Minimum Amount of Time to Fill Cups",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 59.073225298712096
  },
  "2336": {
    "titleSlug": "smallest-number-in-infinite-set",
    "title": "Smallest Number in Infinite Set",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Design",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 70.477649597127
  },
  "2337": {
    "titleSlug": "move-pieces-to-obtain-a-string",
    "title": "Move Pieces to Obtain a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 56.79545799120645
  },
  "2338": {
    "titleSlug": "count-the-number-of-ideal-arrays",
    "title": "Count the Number of Ideal Arrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics",
      "Number Theory"
    ],
    "acRate": 57.13251698826575
  },
  "2341": {
    "titleSlug": "maximum-number-of-pairs-in-array",
    "title": "Maximum Number of Pairs in Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 75.58399534621607
  },
  "2342": {
    "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
    "title": "Max Sum of a Pair With Equal Sum of Digits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 65.97036144377587
  },
  "2343": {
    "titleSlug": "query-kth-smallest-trimmed-number",
    "title": "Query Kth Smallest Trimmed Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Radix Sort",
      "Quickselect"
    ],
    "acRate": 45.730376985133695
  },
  "2344": {
    "titleSlug": "minimum-deletions-to-make-array-divisible",
    "title": "Minimum Deletions to Make Array Divisible",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting",
      "Heap (Priority Queue)",
      "Number Theory"
    ],
    "acRate": 57.74923643198371
  },
  "2347": {
    "titleSlug": "best-poker-hand",
    "title": "Best Poker Hand",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 61.19886795746113
  },
  "2348": {
    "titleSlug": "number-of-zero-filled-subarrays",
    "title": "Number of Zero-Filled Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 66.63853305925754
  },
  "2349": {
    "titleSlug": "design-a-number-container-system",
    "title": "Design a Number Container System",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Design",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 57.170344371694796
  },
  "2350": {
    "titleSlug": "shortest-impossible-sequence-of-rolls",
    "title": "Shortest Impossible Sequence of Rolls",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy"
    ],
    "acRate": 68.75752982783413
  },
  "2351": {
    "titleSlug": "first-letter-to-appear-twice",
    "title": "First Letter to Appear Twice",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Counting"
    ],
    "acRate": 74.33100430390233
  },
  "2352": {
    "titleSlug": "equal-row-and-column-pairs",
    "title": "Equal Row and Column Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix",
      "Simulation"
    ],
    "acRate": 70.55130993147165
  },
  "2353": {
    "titleSlug": "design-a-food-rating-system",
    "title": "Design a Food Rating System",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Design",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 44.951274009997874
  },
  "2354": {
    "titleSlug": "number-of-excellent-pairs",
    "title": "Number of Excellent Pairs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Bit Manipulation"
    ],
    "acRate": 48.141687533410234
  },
  "2356": {
    "titleSlug": "number-of-unique-subjects-taught-by-each-teacher",
    "title": "Number of Unique Subjects Taught by Each Teacher",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 89.31470604046925
  },
  "2357": {
    "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
    "title": "Make Array Zero by Subtracting Equal Amounts",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 73.41016487869439
  },
  "2358": {
    "titleSlug": "maximum-number-of-groups-entering-a-competition",
    "title": "Maximum Number of Groups Entering a Competition",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 68.17397474560144
  },
  "2359": {
    "titleSlug": "find-closest-node-to-given-two-nodes",
    "title": "Find Closest Node to Given Two Nodes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Graph"
    ],
    "acRate": 52.84942713607752
  },
  "2360": {
    "titleSlug": "longest-cycle-in-a-graph",
    "title": "Longest Cycle in a Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 49.89484667177489
  },
  "2363": {
    "titleSlug": "merge-similar-items",
    "title": "Merge Similar Items",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Ordered Set"
    ],
    "acRate": 76.84904936482224
  },
  "2364": {
    "titleSlug": "count-number-of-bad-pairs",
    "title": "Count Number of Bad Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting"
    ],
    "acRate": 54.34070746497313
  },
  "2365": {
    "titleSlug": "task-scheduler-ii",
    "title": "Task Scheduler II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Simulation"
    ],
    "acRate": 54.009407919436406
  },
  "2366": {
    "titleSlug": "minimum-replacements-to-sort-the-array",
    "title": "Minimum Replacements to Sort the Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy"
    ],
    "acRate": 53.24958425097758
  },
  "2367": {
    "titleSlug": "number-of-arithmetic-triplets",
    "title": "Number of Arithmetic Triplets",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Enumeration"
    ],
    "acRate": 85.04907375264304
  },
  "2368": {
    "titleSlug": "reachable-nodes-with-restrictions",
    "title": "Reachable Nodes With Restrictions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 59.5699114476386
  },
  "2369": {
    "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
    "title": "Check if There is a Valid Partition For The Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 51.99773260992793
  },
  "2370": {
    "titleSlug": "longest-ideal-subsequence",
    "title": "Longest Ideal Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 46.81011467809691
  },
  "2373": {
    "titleSlug": "largest-local-values-in-a-matrix",
    "title": "Largest Local Values in a Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 87.7627952802753
  },
  "2374": {
    "titleSlug": "node-with-highest-edge-score",
    "title": "Node With Highest Edge Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Graph"
    ],
    "acRate": 48.5013918218468
  },
  "2375": {
    "titleSlug": "construct-smallest-number-from-di-string",
    "title": "Construct Smallest Number From DI String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Stack",
      "Greedy"
    ],
    "acRate": 85.82779738706941
  },
  "2376": {
    "titleSlug": "count-special-integers",
    "title": "Count Special Integers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 40.11593260740018
  },
  "2379": {
    "titleSlug": "minimum-recolors-to-get-k-consecutive-black-blocks",
    "title": "Minimum Recolors to Get K Consecutive Black Blocks",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window"
    ],
    "acRate": 68.4455487349378
  },
  "2380": {
    "titleSlug": "time-needed-to-rearrange-a-binary-string",
    "title": "Time Needed to Rearrange a Binary String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Simulation"
    ],
    "acRate": 51.625989226574454
  },
  "2381": {
    "titleSlug": "shifting-letters-ii",
    "title": "Shifting Letters II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Prefix Sum"
    ],
    "acRate": 53.358094118963685
  },
  "2382": {
    "titleSlug": "maximum-segment-sum-after-removals",
    "title": "Maximum Segment Sum After Removals",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Union Find",
      "Prefix Sum",
      "Ordered Set"
    ],
    "acRate": 48.49877450980392
  },
  "2383": {
    "titleSlug": "minimum-hours-of-training-to-win-a-competition",
    "title": "Minimum Hours of Training to Win a Competition",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 41.942144098201595
  },
  "2384": {
    "titleSlug": "largest-palindromic-number",
    "title": "Largest Palindromic Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Counting"
    ],
    "acRate": 36.51801801801802
  },
  "2385": {
    "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
    "title": "Amount of Time for Binary Tree to Be Infected",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 63.95175016650633
  },
  "2386": {
    "titleSlug": "find-the-k-sum-of-an-array",
    "title": "Find the K-Sum of an Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 39.81965365303822
  },
  "2389": {
    "titleSlug": "longest-subsequence-with-limited-sum",
    "title": "Longest Subsequence With Limited Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 72.88137328160667
  },
  "2390": {
    "titleSlug": "removing-stars-from-a-string",
    "title": "Removing Stars From a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 78.04107854191857
  },
  "2391": {
    "titleSlug": "minimum-amount-of-time-to-collect-garbage",
    "title": "Minimum Amount of Time to Collect Garbage",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Prefix Sum"
    ],
    "acRate": 85.13152833949114
  },
  "2392": {
    "titleSlug": "build-a-matrix-with-conditions",
    "title": "Build a Matrix With Conditions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Topological Sort",
      "Matrix"
    ],
    "acRate": 79.25404565727418
  },
  "2395": {
    "titleSlug": "find-subarrays-with-equal-sum",
    "title": "Find Subarrays With Equal Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 66.30661222449065
  },
  "2396": {
    "titleSlug": "strictly-palindromic-number",
    "title": "Strictly Palindromic Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Two Pointers",
      "Brainteaser"
    ],
    "acRate": 88.12908416123378
  },
  "2397": {
    "titleSlug": "maximum-rows-covered-by-columns",
    "title": "Maximum Rows Covered by Columns",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Backtracking",
      "Bit Manipulation",
      "Matrix",
      "Enumeration"
    ],
    "acRate": 56.6150178784267
  },
  "2398": {
    "titleSlug": "maximum-number-of-robots-within-budget",
    "title": "Maximum Number of Robots Within Budget",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Prefix Sum",
      "Monotonic Queue"
    ],
    "acRate": 36.9635423237038
  },
  "2399": {
    "titleSlug": "check-distances-between-same-letters",
    "title": "Check Distances Between Same Letters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 70.89495592556318
  },
  "2400": {
    "titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
    "title": "Number of Ways to Reach a Position After Exactly k Steps",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 36.163398889658566
  },
  "2401": {
    "titleSlug": "longest-nice-subarray",
    "title": "Longest Nice Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Sliding Window"
    ],
    "acRate": 64.84256575795419
  },
  "2402": {
    "titleSlug": "meeting-rooms-iii",
    "title": "Meeting Rooms III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 43.92833443928335
  },
  "2404": {
    "titleSlug": "most-frequent-even-element",
    "title": "Most Frequent Even Element",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 52.070772289369295
  },
  "2405": {
    "titleSlug": "optimal-partition-of-string",
    "title": "Optimal Partition of String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy"
    ],
    "acRate": 78.25791719247641
  },
  "2406": {
    "titleSlug": "divide-intervals-into-minimum-number-of-groups",
    "title": "Divide Intervals Into Minimum Number of Groups",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ],
    "acRate": 63.66382605776941
  },
  "2407": {
    "titleSlug": "longest-increasing-subsequence-ii",
    "title": "Longest Increasing Subsequence II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming",
      "Binary Indexed Tree",
      "Segment Tree",
      "Queue",
      "Monotonic Queue"
    ],
    "acRate": 25.486851631428465
  },
  "2409": {
    "titleSlug": "count-days-spent-together",
    "title": "Count Days Spent Together",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 46.632688986872765
  },
  "2410": {
    "titleSlug": "maximum-matching-of-players-with-trainers",
    "title": "Maximum Matching of Players With Trainers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 67.82239990308317
  },
  "2411": {
    "titleSlug": "smallest-subarrays-with-maximum-bitwise-or",
    "title": "Smallest Subarrays With Maximum Bitwise OR",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Bit Manipulation",
      "Sliding Window"
    ],
    "acRate": 45.29181752353367
  },
  "2412": {
    "titleSlug": "minimum-money-required-before-transactions",
    "title": "Minimum Money Required Before Transactions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 41.38354346383544
  },
  "2413": {
    "titleSlug": "smallest-even-multiple",
    "title": "Smallest Even Multiple",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Number Theory"
    ],
    "acRate": 88.11309376260226
  },
  "2414": {
    "titleSlug": "length-of-the-longest-alphabetical-continuous-substring",
    "title": "Length of the Longest Alphabetical Continuous Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 59.38693649121687
  },
  "2415": {
    "titleSlug": "reverse-odd-levels-of-binary-tree",
    "title": "Reverse Odd Levels of Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 86.64799537276629
  },
  "2416": {
    "titleSlug": "sum-of-prefix-scores-of-strings",
    "title": "Sum of Prefix Scores of Strings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Trie",
      "Counting"
    ],
    "acRate": 60.722884064588435
  },
  "2418": {
    "titleSlug": "sort-the-people",
    "title": "Sort the People",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 84.79861464607471
  },
  "2419": {
    "titleSlug": "longest-subarray-with-maximum-bitwise-and",
    "title": "Longest Subarray With Maximum Bitwise AND",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Brainteaser"
    ],
    "acRate": 61.81356449254979
  },
  "2420": {
    "titleSlug": "find-all-good-indices",
    "title": "Find All Good Indices",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 39.91869131739425
  },
  "2421": {
    "titleSlug": "number-of-good-paths",
    "title": "Number of Good Paths",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Union Find",
      "Graph",
      "Sorting"
    ],
    "acRate": 55.97660690059766
  },
  "2423": {
    "titleSlug": "remove-letter-to-equalize-frequency",
    "title": "Remove Letter To Equalize Frequency",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 18.26160766852054
  },
  "2424": {
    "titleSlug": "longest-uploaded-prefix",
    "title": "Longest Uploaded Prefix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Binary Search",
      "Union Find",
      "Design",
      "Binary Indexed Tree",
      "Segment Tree",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 53.89858405959189
  },
  "2425": {
    "titleSlug": "bitwise-xor-of-all-pairings",
    "title": "Bitwise XOR of All Pairings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Brainteaser"
    ],
    "acRate": 66.97094536971441
  },
  "2426": {
    "titleSlug": "number-of-pairs-satisfying-inequality",
    "title": "Number of Pairs Satisfying Inequality",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Merge Sort",
      "Ordered Set"
    ],
    "acRate": 45.51724137931035
  },
  "2427": {
    "titleSlug": "number-of-common-factors",
    "title": "Number of Common Factors",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration",
      "Number Theory"
    ],
    "acRate": 79.59034660537527
  },
  "2428": {
    "titleSlug": "maximum-sum-of-an-hourglass",
    "title": "Maximum Sum of an Hourglass",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 75.93333864923052
  },
  "2429": {
    "titleSlug": "minimize-xor",
    "title": "Minimize XOR",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 62.44845655705819
  },
  "2430": {
    "titleSlug": "maximum-deletions-on-a-string",
    "title": "Maximum Deletions on a String",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 34.64137780684543
  },
  "2432": {
    "titleSlug": "the-employee-that-worked-on-the-longest-task",
    "title": "The Employee That Worked on the Longest Task",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 50.663216600512484
  },
  "2433": {
    "titleSlug": "find-the-original-array-of-prefix-xor",
    "title": "Find The Original Array of Prefix Xor",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 88.12525395919165
  },
  "2434": {
    "titleSlug": "using-a-robot-to-print-the-lexicographically-smallest-string",
    "title": "Using a Robot to Print the Lexicographically Smallest String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Stack",
      "Greedy"
    ],
    "acRate": 62.57766448940577
  },
  "2435": {
    "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
    "title": "Paths in Matrix Whose Sum Is Divisible by K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 44.24492475033991
  },
  "2437": {
    "titleSlug": "number-of-valid-clock-times",
    "title": "Number of Valid Clock Times",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Enumeration"
    ],
    "acRate": 47.4794748740729
  },
  "2438": {
    "titleSlug": "range-product-queries-of-powers",
    "title": "Range Product Queries of Powers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 42.00258053034347
  },
  "2439": {
    "titleSlug": "minimize-maximum-of-array",
    "title": "Minimize Maximum of Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy",
      "Prefix Sum"
    ],
    "acRate": 46.40365515300173
  },
  "2440": {
    "titleSlug": "create-components-with-same-value",
    "title": "Create Components With Same Value",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Tree",
      "Depth-First Search",
      "Enumeration"
    ],
    "acRate": 52.038890477552194
  },
  "2441": {
    "titleSlug": "largest-positive-integer-that-exists-with-its-negative",
    "title": "Largest Positive Integer That Exists With Its Negative",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 74.67087198293065
  },
  "2442": {
    "titleSlug": "count-number-of-distinct-integers-after-reverse-operations",
    "title": "Count Number of Distinct Integers After Reverse Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting"
    ],
    "acRate": 80.42261803144977
  },
  "2443": {
    "titleSlug": "sum-of-number-and-its-reverse",
    "title": "Sum of Number and Its Reverse",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 48.32392581499827
  },
  "2444": {
    "titleSlug": "count-subarrays-with-fixed-bounds",
    "title": "Count Subarrays With Fixed Bounds",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Queue",
      "Sliding Window",
      "Monotonic Queue"
    ],
    "acRate": 69.4009111406531
  },
  "2446": {
    "titleSlug": "determine-if-two-events-have-conflict",
    "title": "Determine if Two Events Have Conflict",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 52.371807182638754
  },
  "2447": {
    "titleSlug": "number-of-subarrays-with-gcd-equal-to-k",
    "title": "Number of Subarrays With GCD Equal to K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 51.173052631578955
  },
  "2448": {
    "titleSlug": "minimum-cost-to-make-array-equal",
    "title": "Minimum Cost to Make Array Equal",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 46.35831665370543
  },
  "2449": {
    "titleSlug": "minimum-number-of-operations-to-make-arrays-similar",
    "title": "Minimum Number of Operations to Make Arrays Similar",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 60.55882236868069
  },
  "2451": {
    "titleSlug": "odd-string-difference",
    "title": "Odd String Difference",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 61.088017066934384
  },
  "2452": {
    "titleSlug": "words-within-two-edits-of-dictionary",
    "title": "Words Within Two Edits of Dictionary",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Trie"
    ],
    "acRate": 61.30115714647219
  },
  "2453": {
    "titleSlug": "destroy-sequential-targets",
    "title": "Destroy Sequential Targets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 40.68759574179287
  },
  "2454": {
    "titleSlug": "next-greater-element-iv",
    "title": "Next Greater Element IV",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Stack",
      "Sorting",
      "Heap (Priority Queue)",
      "Monotonic Stack"
    ],
    "acRate": 40.17818574514039
  },
  "2455": {
    "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
    "title": "Average Value of Even Numbers That Are Divisible by Three",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 61.77976400486103
  },
  "2456": {
    "titleSlug": "most-popular-video-creator",
    "title": "Most Popular Video Creator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 44.47712194788318
  },
  "2457": {
    "titleSlug": "minimum-addition-to-make-integer-beautiful",
    "title": "Minimum Addition to Make Integer Beautiful",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 38.08053646715134
  },
  "2458": {
    "titleSlug": "height-of-binary-tree-after-subtree-removal-queries",
    "title": "Height of Binary Tree After Subtree Removal Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 54.909845565048656
  },
  "2460": {
    "titleSlug": "apply-operations-to-an-array",
    "title": "Apply Operations to an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Simulation"
    ],
    "acRate": 74.83447947911333
  },
  "2461": {
    "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
    "title": "Maximum Sum of Distinct Subarrays With Length K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 42.642317731683505
  },
  "2462": {
    "titleSlug": "total-cost-to-hire-k-workers",
    "title": "Total Cost to Hire K Workers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 43.14936564262104
  },
  "2463": {
    "titleSlug": "minimum-total-distance-traveled",
    "title": "Minimum Total Distance Traveled",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 58.969196858413774
  },
  "2465": {
    "titleSlug": "number-of-distinct-averages",
    "title": "Number of Distinct Averages",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 58.46458108594032
  },
  "2466": {
    "titleSlug": "count-ways-to-build-good-strings",
    "title": "Count Ways To Build Good Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 59.20986957374814
  },
  "2467": {
    "titleSlug": "most-profitable-path-in-a-tree",
    "title": "Most Profitable Path in a Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 67.54901257668912
  },
  "2468": {
    "titleSlug": "split-message-based-on-limit",
    "title": "Split Message Based on Limit",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Binary Search",
      "Enumeration"
    ],
    "acRate": 42.49065702230259
  },
  "2469": {
    "titleSlug": "convert-the-temperature",
    "title": "Convert the Temperature",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 90.12385687017463
  },
  "2470": {
    "titleSlug": "number-of-subarrays-with-lcm-equal-to-k",
    "title": "Number of Subarrays With LCM Equal to K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 40.21147710282534
  },
  "2471": {
    "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
    "title": "Minimum Number of Operations to Sort a Binary Tree by Level",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 74.27010158959439
  },
  "2472": {
    "titleSlug": "maximum-number-of-non-overlapping-palindrome-substrings",
    "title": "Maximum Number of Non-overlapping Palindrome Substrings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 41.655229777500516
  },
  "2475": {
    "titleSlug": "number-of-unequal-triplets-in-array",
    "title": "Number of Unequal Triplets in Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 72.72371387302744
  },
  "2476": {
    "titleSlug": "closest-nodes-queries-in-a-binary-search-tree",
    "title": "Closest Nodes Queries in a Binary Search Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "acRate": 42.827495042961004
  },
  "2477": {
    "titleSlug": "minimum-fuel-cost-to-report-to-the-capital",
    "title": "Minimum Fuel Cost to Report to the Capital",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 64.3582390017495
  },
  "2478": {
    "titleSlug": "number-of-beautiful-partitions",
    "title": "Number of Beautiful Partitions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 32.07626783406736
  },
  "2481": {
    "titleSlug": "minimum-cuts-to-divide-a-circle",
    "title": "Minimum Cuts to Divide a Circle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Geometry"
    ],
    "acRate": 55.160118079167596
  },
  "2482": {
    "titleSlug": "difference-between-ones-and-zeros-in-row-and-column",
    "title": "Difference Between Ones and Zeros in Row and Column",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 84.29883498736362
  },
  "2483": {
    "titleSlug": "minimum-penalty-for-a-shop",
    "title": "Minimum Penalty for a Shop",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Prefix Sum"
    ],
    "acRate": 67.63603109282121
  },
  "2484": {
    "titleSlug": "count-palindromic-subsequences",
    "title": "Count Palindromic Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 39.39780932265828
  },
  "2485": {
    "titleSlug": "find-the-pivot-integer",
    "title": "Find the Pivot Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Prefix Sum"
    ],
    "acRate": 83.77308536324855
  },
  "2486": {
    "titleSlug": "append-characters-to-string-to-make-subsequence",
    "title": "Append Characters to String to Make Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 72.96624101815502
  },
  "2487": {
    "titleSlug": "remove-nodes-from-linked-list",
    "title": "Remove Nodes From Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Stack",
      "Recursion",
      "Monotonic Stack"
    ],
    "acRate": 74.3764367816092
  },
  "2488": {
    "titleSlug": "count-subarrays-with-median-k",
    "title": "Count Subarrays With Median K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 45.70913667829967
  },
  "2490": {
    "titleSlug": "circular-sentence",
    "title": "Circular Sentence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 70.40850370485316
  },
  "2491": {
    "titleSlug": "divide-players-into-teams-of-equal-skill",
    "title": "Divide Players Into Teams of Equal Skill",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 68.92681337773273
  },
  "2492": {
    "titleSlug": "minimum-score-of-a-path-between-two-cities",
    "title": "Minimum Score of a Path Between Two Cities",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 57.86843471009803
  },
  "2493": {
    "titleSlug": "divide-nodes-into-the-maximum-number-of-groups",
    "title": "Divide Nodes Into the Maximum Number of Groups",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 67.29908007695666
  },
  "2496": {
    "titleSlug": "maximum-value-of-a-string-in-an-array",
    "title": "Maximum Value of a String in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 73.45429330867907
  },
  "2497": {
    "titleSlug": "maximum-star-sum-of-a-graph",
    "title": "Maximum Star Sum of a Graph",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Graph",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 41.026113105649145
  },
  "2498": {
    "titleSlug": "frog-jump-ii",
    "title": "Frog Jump II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 62.25399913084867
  },
  "2499": {
    "titleSlug": "minimum-total-cost-to-make-arrays-unequal",
    "title": "Minimum Total Cost to Make Arrays Unequal",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Counting"
    ],
    "acRate": 40.57038391224863
  },
  "2500": {
    "titleSlug": "delete-greatest-value-in-each-row",
    "title": "Delete Greatest Value in Each Row",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix",
      "Simulation"
    ],
    "acRate": 79.12650337127032
  },
  "2501": {
    "titleSlug": "longest-square-streak-in-an-array",
    "title": "Longest Square Streak in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 53.0816783031897
  },
  "2502": {
    "titleSlug": "design-memory-allocator",
    "title": "Design Memory Allocator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design",
      "Simulation"
    ],
    "acRate": 48.58023921142225
  },
  "2503": {
    "titleSlug": "maximum-number-of-points-from-grid-queries",
    "title": "Maximum Number of Points From Grid Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Breadth-First Search",
      "Union Find",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 59.48130683731896
  },
  "2506": {
    "titleSlug": "count-pairs-of-similar-strings",
    "title": "Count Pairs Of Similar Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Counting"
    ],
    "acRate": 72.58029276818877
  },
  "2507": {
    "titleSlug": "smallest-value-after-replacing-with-sum-of-prime-factors",
    "title": "Smallest Value After Replacing With Sum of Prime Factors",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation",
      "Number Theory"
    ],
    "acRate": 49.13958929035612
  },
  "2508": {
    "titleSlug": "add-edges-to-make-degrees-of-all-nodes-even",
    "title": "Add Edges to Make Degrees of All Nodes Even",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Graph"
    ],
    "acRate": 33.568249258160236
  },
  "2509": {
    "titleSlug": "cycle-length-queries-in-a-tree",
    "title": "Cycle Length Queries in a Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 58.531661708457285
  },
  "2511": {
    "titleSlug": "maximum-enemy-forts-that-can-be-captured",
    "title": "Maximum Enemy Forts That Can Be Captured",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 40.15626239390815
  },
  "2512": {
    "titleSlug": "reward-top-k-students",
    "title": "Reward Top K Students",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 46.05260833465826
  },
  "2513": {
    "titleSlug": "minimize-the-maximum-of-two-arrays",
    "title": "Minimize the Maximum of Two Arrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Binary Search",
      "Number Theory"
    ],
    "acRate": 31.31389547722254
  },
  "2514": {
    "titleSlug": "count-anagrams",
    "title": "Count Anagrams",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Combinatorics",
      "Counting"
    ],
    "acRate": 35.33730767544821
  },
  "2515": {
    "titleSlug": "shortest-distance-to-target-string-in-a-circular-array",
    "title": "Shortest Distance to Target String in a Circular Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 50.18649269856999
  },
  "2516": {
    "titleSlug": "take-k-of-each-character-from-left-and-right",
    "title": "Take K of Each Character From Left and Right",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 51.591802160050825
  },
  "2517": {
    "titleSlug": "maximum-tastiness-of-candy-basket",
    "title": "Maximum Tastiness of Candy Basket",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 66.33002433299598
  },
  "2518": {
    "titleSlug": "number-of-great-partitions",
    "title": "Number of Great Partitions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 32.31169982818822
  },
  "2520": {
    "titleSlug": "count-the-digits-that-divide-a-number",
    "title": "Count the Digits That Divide a Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 85.78756473062973
  },
  "2521": {
    "titleSlug": "distinct-prime-factors-of-product-of-array",
    "title": "Distinct Prime Factors of Product of Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Number Theory"
    ],
    "acRate": 53.0558994635036
  },
  "2522": {
    "titleSlug": "partition-string-into-substrings-with-values-at-most-k",
    "title": "Partition String Into Substrings With Values at Most K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 46.61110058723243
  },
  "2523": {
    "titleSlug": "closest-prime-numbers-in-range",
    "title": "Closest Prime Numbers in Range",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Number Theory"
    ],
    "acRate": 51.54874882235345
  },
  "2525": {
    "titleSlug": "categorize-box-according-to-criteria",
    "title": "Categorize Box According to Criteria",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 37.727900492499586
  },
  "2526": {
    "titleSlug": "find-consecutive-integers-from-a-data-stream",
    "title": "Find Consecutive Integers from a Data Stream",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Design",
      "Queue",
      "Counting",
      "Data Stream"
    ],
    "acRate": 49.441109818092734
  },
  "2527": {
    "titleSlug": "find-xor-beauty-of-array",
    "title": "Find Xor-Beauty of Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 69.44386894367656
  },
  "2528": {
    "titleSlug": "maximize-the-minimum-powered-city",
    "title": "Maximize the Minimum Powered City",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Queue",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 33.249784893943364
  },
  "2529": {
    "titleSlug": "maximum-count-of-positive-integer-and-negative-integer",
    "title": "Maximum Count of Positive Integer and Negative Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Counting"
    ],
    "acRate": 74.46878422782038
  },
  "2530": {
    "titleSlug": "maximal-score-after-applying-k-operations",
    "title": "Maximal Score After Applying K Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 63.80710310076577
  },
  "2531": {
    "titleSlug": "make-number-of-distinct-characters-equal",
    "title": "Make Number of Distinct Characters Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 27.010537318149225
  },
  "2532": {
    "titleSlug": "time-to-cross-a-bridge",
    "title": "Time to Cross a Bridge",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 43.61425576519916
  },
  "2535": {
    "titleSlug": "difference-between-element-sum-and-digit-sum-of-an-array",
    "title": "Difference Between Element Sum and Digit Sum of an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 84.97942072782959
  },
  "2536": {
    "titleSlug": "increment-submatrices-by-one",
    "title": "Increment Submatrices by One",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 52.01662758473673
  },
  "2537": {
    "titleSlug": "count-the-number-of-good-subarrays",
    "title": "Count the Number of Good Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 66.00228485231646
  },
  "2538": {
    "titleSlug": "difference-between-maximum-and-minimum-price-sum",
    "title": "Difference Between Maximum and Minimum Price Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 31.94937227074236
  },
  "2540": {
    "titleSlug": "minimum-common-value",
    "title": "Minimum Common Value",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search"
    ],
    "acRate": 58.14310861991851
  },
  "2541": {
    "titleSlug": "minimum-operations-to-make-array-equal-ii",
    "title": "Minimum Operations to Make Array Equal II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy"
    ],
    "acRate": 32.465774033398525
  },
  "2542": {
    "titleSlug": "maximum-subsequence-score",
    "title": "Maximum Subsequence Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 54.2782866122405
  },
  "2543": {
    "titleSlug": "check-if-point-is-reachable",
    "title": "Check if Point Is Reachable",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Number Theory"
    ],
    "acRate": 43.56363636363636
  },
  "2544": {
    "titleSlug": "alternating-digit-sum",
    "title": "Alternating Digit Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 68.43457729498827
  },
  "2545": {
    "titleSlug": "sort-the-students-by-their-kth-score",
    "title": "Sort the Students by Their Kth Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Matrix"
    ],
    "acRate": 85.67744191637708
  },
  "2546": {
    "titleSlug": "apply-bitwise-operations-to-make-strings-equal",
    "title": "Apply Bitwise Operations to Make Strings Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Bit Manipulation"
    ],
    "acRate": 41.74916513525797
  },
  "2547": {
    "titleSlug": "minimum-cost-to-split-an-array",
    "title": "Minimum Cost to Split an Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming",
      "Counting"
    ],
    "acRate": 42.48516619620946
  },
  "2549": {
    "titleSlug": "count-distinct-numbers-on-board",
    "title": "Count Distinct Numbers on Board",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Simulation"
    ],
    "acRate": 61.315302556136785
  },
  "2550": {
    "titleSlug": "count-collisions-of-monkeys-on-a-polygon",
    "title": "Count Collisions of Monkeys on a Polygon",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Recursion"
    ],
    "acRate": 28.965574926214916
  },
  "2551": {
    "titleSlug": "put-marbles-in-bags",
    "title": "Put Marbles in Bags",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 72.38017434522703
  },
  "2552": {
    "titleSlug": "count-increasing-quadruplets",
    "title": "Count Increasing Quadruplets",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Binary Indexed Tree",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 33.92190770911077
  },
  "2553": {
    "titleSlug": "separate-the-digits-in-an-array",
    "title": "Separate the Digits in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 80.26798095692344
  },
  "2554": {
    "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-i",
    "title": "Maximum Number of Integers to Choose From a Range I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 67.93041426607238
  },
  "2555": {
    "titleSlug": "maximize-win-from-two-segments",
    "title": "Maximize Win From Two Segments",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window"
    ],
    "acRate": 35.565788765013195
  },
  "2556": {
    "titleSlug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
    "title": "Disconnect Path in a Binary Matrix by at Most One Flip",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 27.261607789490625
  },
  "2558": {
    "titleSlug": "take-gifts-from-the-richest-pile",
    "title": "Take Gifts From the Richest Pile",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 75.62062511007622
  },
  "2559": {
    "titleSlug": "count-vowel-strings-in-ranges",
    "title": "Count Vowel Strings in Ranges",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Prefix Sum"
    ],
    "acRate": 67.85851486134628
  },
  "2560": {
    "titleSlug": "house-robber-iv",
    "title": "House Robber IV",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 65.14488462426354
  },
  "2561": {
    "titleSlug": "rearranging-fruits",
    "title": "Rearranging Fruits",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy"
    ],
    "acRate": 35.284117104656524
  },
  "2562": {
    "titleSlug": "find-the-array-concatenation-value",
    "title": "Find the Array Concatenation Value",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Simulation"
    ],
    "acRate": 71.12379177826948
  },
  "2563": {
    "titleSlug": "count-the-number-of-fair-pairs",
    "title": "Count the Number of Fair Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 52.90176603002947
  },
  "2564": {
    "titleSlug": "substring-xor-queries",
    "title": "Substring XOR Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Bit Manipulation"
    ],
    "acRate": 34.610502019619155
  },
  "2565": {
    "titleSlug": "subsequence-with-the-minimum-score",
    "title": "Subsequence With the Minimum Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Binary Search"
    ],
    "acRate": 32.491606043648574
  },
  "2566": {
    "titleSlug": "maximum-difference-by-remapping-a-digit",
    "title": "Maximum Difference by Remapping a Digit",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 76.3277343560367
  },
  "2567": {
    "titleSlug": "minimum-score-by-changing-two-elements",
    "title": "Minimum Score by Changing Two Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 49.03214824181703
  },
  "2568": {
    "titleSlug": "minimum-impossible-or",
    "title": "Minimum Impossible OR",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Brainteaser"
    ],
    "acRate": 57.84948283520528
  },
  "2569": {
    "titleSlug": "handling-sum-queries-after-update",
    "title": "Handling Sum Queries After Update",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Segment Tree"
    ],
    "acRate": 29.329896907216497
  },
  "2570": {
    "titleSlug": "merge-two-2d-arrays-by-summing-values",
    "title": "Merge Two 2D Arrays by Summing Values",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers"
    ],
    "acRate": 81.96958484730064
  },
  "2571": {
    "titleSlug": "minimum-operations-to-reduce-an-integer-to-0",
    "title": "Minimum Operations to Reduce an Integer to 0",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 57.627927013138866
  },
  "2572": {
    "titleSlug": "count-the-number-of-square-free-subsets",
    "title": "Count the Number of Square-Free Subsets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 25.277430206559863
  },
  "2573": {
    "titleSlug": "find-the-string-with-lcp",
    "title": "Find the String with LCP",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Greedy",
      "Union Find",
      "Matrix"
    ],
    "acRate": 31.6270115509922
  },
  "2574": {
    "titleSlug": "left-and-right-sum-differences",
    "title": "Left and Right Sum Differences",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 87.51650845566675
  },
  "2575": {
    "titleSlug": "find-the-divisibility-array-of-a-string",
    "title": "Find the Divisibility Array of a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "String"
    ],
    "acRate": 34.78156408921635
  },
  "2576": {
    "titleSlug": "find-the-maximum-number-of-marked-indices",
    "title": "Find the Maximum Number of Marked Indices",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 40.141884412840035
  },
  "2577": {
    "titleSlug": "minimum-time-to-visit-a-cell-in-a-grid",
    "title": "Minimum Time to Visit a Cell In a Grid",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Matrix",
      "Shortest Path"
    ],
    "acRate": 56.76402429549155
  },
  "2578": {
    "titleSlug": "split-with-minimum-sum",
    "title": "Split With Minimum Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy",
      "Sorting"
    ],
    "acRate": 72.22283769882092
  },
  "2579": {
    "titleSlug": "count-total-number-of-colored-cells",
    "title": "Count Total Number of Colored Cells",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 66.20564539073561
  },
  "2580": {
    "titleSlug": "count-ways-to-group-overlapping-ranges",
    "title": "Count Ways to Group Overlapping Ranges",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 38.19731404958678
  },
  "2581": {
    "titleSlug": "count-number-of-possible-root-nodes",
    "title": "Count Number of Possible Root Nodes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 46.5991998117204
  },
  "2582": {
    "titleSlug": "pass-the-pillow",
    "title": "Pass the Pillow",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 56.54789423860159
  },
  "2583": {
    "titleSlug": "kth-largest-sum-in-a-binary-tree",
    "title": "Kth Largest Sum in a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Breadth-First Search",
      "Sorting",
      "Binary Tree"
    ],
    "acRate": 59.20195871298707
  },
  "2584": {
    "titleSlug": "split-the-array-to-make-coprime-products",
    "title": "Split the Array to Make Coprime Products",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Number Theory"
    ],
    "acRate": 28.055797733217087
  },
  "2585": {
    "titleSlug": "number-of-ways-to-earn-points",
    "title": "Number of Ways to Earn Points",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 58.67007385358457
  },
  "2586": {
    "titleSlug": "count-the-number-of-vowel-strings-in-range",
    "title": "Count the Number of Vowel Strings in Range",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Counting"
    ],
    "acRate": 73.55319947457309
  },
  "2587": {
    "titleSlug": "rearrange-array-to-maximize-prefix-score",
    "title": "Rearrange Array to Maximize Prefix Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 41.61189080357672
  },
  "2588": {
    "titleSlug": "count-the-number-of-beautiful-subarrays",
    "title": "Count the Number of Beautiful Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 52.03463404443001
  },
  "2589": {
    "titleSlug": "minimum-time-to-complete-all-tasks",
    "title": "Minimum Time to Complete All Tasks",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Stack",
      "Greedy",
      "Sorting"
    ],
    "acRate": 37.8675468612785
  },
  "2591": {
    "titleSlug": "distribute-money-to-maximum-children",
    "title": "Distribute Money to Maximum Children",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 19.539258266048716
  },
  "2592": {
    "titleSlug": "maximize-greatness-of-an-array",
    "title": "Maximize Greatness of an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ],
    "acRate": 58.85709269662921
  },
  "2593": {
    "titleSlug": "find-score-of-an-array-after-marking-all-elements",
    "title": "Find Score of an Array After Marking All Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 64.49295331076293
  },
  "2594": {
    "titleSlug": "minimum-time-to-repair-cars",
    "title": "Minimum Time to Repair Cars",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 59.89699641547526
  },
  "2595": {
    "titleSlug": "number-of-even-and-odd-bits",
    "title": "Number of Even and Odd Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 72.69154967274143
  },
  "2596": {
    "titleSlug": "check-knight-tour-configuration",
    "title": "Check Knight Tour Configuration",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix",
      "Simulation"
    ],
    "acRate": 58.04532092810868
  },
  "2597": {
    "titleSlug": "the-number-of-beautiful-subsets",
    "title": "The Number of Beautiful Subsets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Dynamic Programming",
      "Backtracking",
      "Sorting",
      "Combinatorics"
    ],
    "acRate": 50.79475083487339
  },
  "2598": {
    "titleSlug": "smallest-missing-non-negative-integer-after-operations",
    "title": "Smallest Missing Non-negative Integer After Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Greedy"
    ],
    "acRate": 39.94999077698756
  },
  "2600": {
    "titleSlug": "k-items-with-the-maximum-sum",
    "title": "K Items With the Maximum Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 60.343685067670016
  },
  "2601": {
    "titleSlug": "prime-subtraction-operation",
    "title": "Prime Subtraction Operation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Greedy",
      "Number Theory"
    ],
    "acRate": 55.57082732994616
  },
  "2602": {
    "titleSlug": "minimum-operations-to-make-all-array-elements-equal",
    "title": "Minimum Operations to Make All Array Elements Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 37.00361272724635
  },
  "2603": {
    "titleSlug": "collect-coins-in-a-tree",
    "title": "Collect Coins in a Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Graph",
      "Topological Sort"
    ],
    "acRate": 36.979740904079385
  },
  "2605": {
    "titleSlug": "form-smallest-number-from-two-digit-arrays",
    "title": "Form Smallest Number From Two Digit Arrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Enumeration"
    ],
    "acRate": 54.40131806731217
  },
  "2606": {
    "titleSlug": "find-the-substring-with-maximum-cost",
    "title": "Find the Substring With Maximum Cost",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 56.94262021916842
  },
  "2607": {
    "titleSlug": "make-k-subarray-sums-equal",
    "title": "Make K-Subarray Sums Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Sorting",
      "Number Theory"
    ],
    "acRate": 36.77701618783725
  },
  "2608": {
    "titleSlug": "shortest-cycle-in-a-graph",
    "title": "Shortest Cycle in a Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 37.59955012462763
  },
  "2609": {
    "titleSlug": "find-the-longest-balanced-substring-of-a-binary-string",
    "title": "Find the Longest Balanced Substring of a Binary String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 45.52259671597783
  },
  "2610": {
    "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
    "title": "Convert an Array Into a 2D Array With Conditions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 86.30755425943582
  },
  "2611": {
    "titleSlug": "mice-and-cheese",
    "title": "Mice and Cheese",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 47.405616779239246
  },
  "2612": {
    "titleSlug": "minimum-reverse-operations",
    "title": "Minimum Reverse Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Ordered Set"
    ],
    "acRate": 15.359335592184037
  },
  "2614": {
    "titleSlug": "prime-in-diagonal",
    "title": "Prime In Diagonal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Matrix",
      "Number Theory"
    ],
    "acRate": 36.317952017090796
  },
  "2615": {
    "titleSlug": "sum-of-distances",
    "title": "Sum of Distances",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 31.34526763559022
  },
  "2616": {
    "titleSlug": "minimize-the-maximum-difference-of-pairs",
    "title": "Minimize the Maximum Difference of Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 50.90782211507962
  },
  "2617": {
    "titleSlug": "minimum-number-of-visited-cells-in-a-grid",
    "title": "Minimum Number of Visited Cells in a Grid",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix",
      "Monotonic Stack"
    ],
    "acRate": 22.81326701275006
  },
  "2618": {
    "titleSlug": "check-if-object-instance-of-class",
    "title": "Check if Object Instance of Class",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 28.240644841716577
  },
  "2619": {
    "titleSlug": "array-prototype-last",
    "title": "Array Prototype Last",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 74.55999817339783
  },
  "2620": {
    "titleSlug": "counter",
    "title": "Counter",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 82.22331742384716
  },
  "2621": {
    "titleSlug": "sleep",
    "title": "Sleep",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 87.61329432673513
  },
  "2622": {
    "titleSlug": "cache-with-time-limit",
    "title": "Cache With Time Limit",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 75.76739900307514
  },
  "2623": {
    "titleSlug": "memoize",
    "title": "Memoize",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 64.16289408214038
  },
  "2624": {
    "titleSlug": "snail-traversal",
    "title": "Snail Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 67.23816292084925
  },
  "2625": {
    "titleSlug": "flatten-deeply-nested-array",
    "title": "Flatten Deeply Nested Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 64.56115725036067
  },
  "2626": {
    "titleSlug": "array-reduce-transformation",
    "title": "Array Reduce Transformation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 85.42804026165916
  },
  "2627": {
    "titleSlug": "debounce",
    "title": "Debounce",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 91.79720704310868
  },
  "2629": {
    "titleSlug": "function-composition",
    "title": "Function Composition",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 86.98996219528092
  },
  "2630": {
    "titleSlug": "memoize-ii",
    "title": "Memoize II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 37.26477286347836
  },
  "2631": {
    "titleSlug": "group-by",
    "title": "Group By",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 81.10107633304466
  },
  "2634": {
    "titleSlug": "filter-elements-from-array",
    "title": "Filter Elements from Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 85.46735059172079
  },
  "2635": {
    "titleSlug": "apply-transform-over-each-element-in-array",
    "title": "Apply Transform Over Each Element in Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 86.14800421258732
  },
  "2637": {
    "titleSlug": "promise-time-limit",
    "title": "Promise Time Limit",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 82.86152727860114
  },
  "2639": {
    "titleSlug": "find-the-width-of-columns-of-a-grid",
    "title": "Find the Width of Columns of a Grid",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 69.38183397149963
  },
  "2640": {
    "titleSlug": "find-the-score-of-all-prefixes-of-an-array",
    "title": "Find the Score of All Prefixes of an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 71.99663601294404
  },
  "2641": {
    "titleSlug": "cousins-in-binary-tree-ii",
    "title": "Cousins in Binary Tree II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "acRate": 75.43594996430456
  },
  "2642": {
    "titleSlug": "design-graph-with-shortest-path-calculator",
    "title": "Design Graph With Shortest Path Calculator",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Graph",
      "Design",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 64.14453528474641
  },
  "2643": {
    "titleSlug": "row-with-maximum-ones",
    "title": "Row With Maximum Ones",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 74.50076432193725
  },
  "2644": {
    "titleSlug": "find-the-maximum-divisibility-score",
    "title": "Find the Maximum Divisibility Score",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 50.50977747808496
  },
  "2645": {
    "titleSlug": "minimum-additions-to-make-valid-string",
    "title": "Minimum Additions to Make Valid String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Stack",
      "Greedy"
    ],
    "acRate": 50.31975521686799
  },
  "2646": {
    "titleSlug": "minimize-the-total-price-of-the-trips",
    "title": "Minimize the Total Price of the Trips",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Graph"
    ],
    "acRate": 46.19071547292335
  },
  "2648": {
    "titleSlug": "generate-fibonacci-sequence",
    "title": "Generate Fibonacci Sequence",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 83.73751485705945
  },
  "2649": {
    "titleSlug": "nested-array-generator",
    "title": "Nested Array Generator",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 79.92516837116487
  },
  "2650": {
    "titleSlug": "design-cancellable-function",
    "title": "Design Cancellable Function",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 52.73013375295044
  },
  "2651": {
    "titleSlug": "calculate-delayed-arrival-time",
    "title": "Calculate Delayed Arrival Time",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 76.44020782876896
  },
  "2652": {
    "titleSlug": "sum-multiples",
    "title": "Sum Multiples",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 85.28176557602825
  },
  "2653": {
    "titleSlug": "sliding-subarray-beauty",
    "title": "Sliding Subarray Beauty",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 34.29082136473294
  },
  "2654": {
    "titleSlug": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
    "title": "Minimum Number of Operations to Make All Array Elements Equal to 1",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 33.676525645825535
  },
  "2656": {
    "titleSlug": "maximum-sum-with-exactly-k-elements",
    "title": "Maximum Sum With Exactly K Elements ",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 79.83548685016875
  },
  "2657": {
    "titleSlug": "find-the-prefix-common-array-of-two-arrays",
    "title": "Find the Prefix Common Array of Two Arrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation"
    ],
    "acRate": 87.04076051671696
  },
  "2658": {
    "titleSlug": "maximum-number-of-fish-in-a-grid",
    "title": "Maximum Number of Fish in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "acRate": 70.31313617352038
  },
  "2659": {
    "titleSlug": "make-array-empty",
    "title": "Make Array Empty",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Binary Indexed Tree",
      "Segment Tree",
      "Sorting",
      "Ordered Set"
    ],
    "acRate": 25.519481805756396
  },
  "2660": {
    "titleSlug": "determine-the-winner-of-a-bowling-game",
    "title": "Determine the Winner of a Bowling Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 35.88550764072361
  },
  "2661": {
    "titleSlug": "first-completely-painted-row-or-column",
    "title": "First Completely Painted Row or Column",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "acRate": 63.92518353542852
  },
  "2662": {
    "titleSlug": "minimum-cost-of-a-path-with-special-roads",
    "title": "Minimum Cost of a Path With Special Roads",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 40.541972780922556
  },
  "2663": {
    "titleSlug": "lexicographically-smallest-beautiful-string",
    "title": "Lexicographically Smallest Beautiful String",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 36.98167791706847
  },
  "2665": {
    "titleSlug": "counter-ii",
    "title": "Counter II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 81.11526910604219
  },
  "2666": {
    "titleSlug": "allow-one-function-call",
    "title": "Allow One Function Call",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 86.70571025657216
  },
  "2667": {
    "titleSlug": "create-hello-world-function",
    "title": "Create Hello World Function",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 82.09894374599665
  },
  "2670": {
    "titleSlug": "find-the-distinct-difference-array",
    "title": "Find the Distinct Difference Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 76.15203222742606
  },
  "2671": {
    "titleSlug": "frequency-tracker",
    "title": "Frequency Tracker",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Design"
    ],
    "acRate": 29.958938175929674
  },
  "2672": {
    "titleSlug": "number-of-adjacent-elements-with-the-same-color",
    "title": "Number of Adjacent Elements With the Same Color",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 56.02120609675282
  },
  "2673": {
    "titleSlug": "make-costs-of-paths-equal-in-a-binary-tree",
    "title": "Make Costs of Paths Equal in a Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Tree",
      "Binary Tree"
    ],
    "acRate": 56.959274561356445
  },
  "2677": {
    "titleSlug": "chunk-array",
    "title": "Chunk Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 84.5006238330782
  },
  "2678": {
    "titleSlug": "number-of-senior-citizens",
    "title": "Number of Senior Citizens",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 81.29959488506377
  },
  "2679": {
    "titleSlug": "sum-in-a-matrix",
    "title": "Sum in a Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix",
      "Simulation"
    ],
    "acRate": 59.180040608572305
  },
  "2680": {
    "titleSlug": "maximum-or",
    "title": "Maximum OR",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 41.374747197323416
  },
  "2681": {
    "titleSlug": "power-of-heroes",
    "title": "Power of Heroes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 29.849670235774745
  },
  "2682": {
    "titleSlug": "find-the-losers-of-the-circular-game",
    "title": "Find the Losers of the Circular Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Simulation"
    ],
    "acRate": 48.97557192710353
  },
  "2683": {
    "titleSlug": "neighboring-bitwise-xor",
    "title": "Neighboring Bitwise XOR",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 79.7905428756029
  },
  "2684": {
    "titleSlug": "maximum-number-of-moves-in-a-grid",
    "title": "Maximum Number of Moves in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 58.84152866126029
  },
  "2685": {
    "titleSlug": "count-the-number-of-complete-components",
    "title": "Count the Number of Complete Components",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 77.73315386094552
  },
  "2693": {
    "titleSlug": "call-function-with-custom-context",
    "title": "Call Function with Custom Context",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 78.47093669011477
  },
  "2694": {
    "titleSlug": "event-emitter",
    "title": "Event Emitter",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 74.44251877527441
  },
  "2695": {
    "titleSlug": "array-wrapper",
    "title": "Array Wrapper",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 89.12184477471101
  },
  "2696": {
    "titleSlug": "minimum-string-length-after-removing-substrings",
    "title": "Minimum String Length After Removing Substrings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 77.0810598599984
  },
  "2697": {
    "titleSlug": "lexicographically-smallest-palindrome",
    "title": "Lexicographically Smallest Palindrome",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 79.52470902283704
  },
  "2698": {
    "titleSlug": "find-the-punishment-number-of-an-integer",
    "title": "Find the Punishment Number of an Integer",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Backtracking"
    ],
    "acRate": 81.83063406966626
  },
  "2699": {
    "titleSlug": "modify-graph-edge-weights",
    "title": "Modify Graph Edge Weights",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 56.04503430016664
  },
  "2703": {
    "titleSlug": "return-length-of-arguments-passed",
    "title": "Return Length of Arguments Passed",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 94.48240609190476
  },
  "2704": {
    "titleSlug": "to-be-or-not-to-be",
    "title": "To Be Or Not To Be",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 62.96003057193589
  },
  "2705": {
    "titleSlug": "compact-object",
    "title": "Compact Object",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 66.92042242530391
  },
  "2706": {
    "titleSlug": "buy-two-chocolates",
    "title": "Buy Two Chocolates",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 68.30501037573694
  },
  "2707": {
    "titleSlug": "extra-characters-in-a-string",
    "title": "Extra Characters in a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie"
    ],
    "acRate": 57.07698735463238
  },
  "2708": {
    "titleSlug": "maximum-strength-of-a-group",
    "title": "Maximum Strength of a Group",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Greedy",
      "Bit Manipulation",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 24.84452668625957
  },
  "2709": {
    "titleSlug": "greatest-common-divisor-traversal",
    "title": "Greatest Common Divisor Traversal",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Union Find",
      "Number Theory"
    ],
    "acRate": 41.75893955629639
  },
  "2710": {
    "titleSlug": "remove-trailing-zeros-from-a-string",
    "title": "Remove Trailing Zeros From a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 78.65789824314294
  },
  "2711": {
    "titleSlug": "difference-of-number-of-distinct-values-on-diagonals",
    "title": "Difference of Number of Distinct Values on Diagonals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "acRate": 67.81717888100867
  },
  "2712": {
    "titleSlug": "minimum-cost-to-make-all-characters-equal",
    "title": "Minimum Cost to Make All Characters Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 53.42323388507262
  },
  "2713": {
    "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
    "title": "Maximum Strictly Increasing Cells in a Matrix",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Dynamic Programming",
      "Memoization",
      "Sorting",
      "Matrix",
      "Ordered Set"
    ],
    "acRate": 30.674504333964332
  },
  "2715": {
    "titleSlug": "timeout-cancellation",
    "title": "Timeout Cancellation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 89.61875571328709
  },
  "2716": {
    "titleSlug": "minimize-string-length",
    "title": "Minimize String Length",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 77.33689218467312
  },
  "2717": {
    "titleSlug": "semi-ordered-permutation",
    "title": "Semi-Ordered Permutation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 63.34928058838231
  },
  "2718": {
    "titleSlug": "sum-of-matrix-after-queries",
    "title": "Sum of Matrix After Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 31.26358273828004
  },
  "2719": {
    "titleSlug": "count-of-integers",
    "title": "Count of Integers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 37.120744399364966
  },
  "2721": {
    "titleSlug": "execute-asynchronous-functions-in-parallel",
    "title": "Execute Asynchronous Functions in Parallel",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 77.76262891102954
  },
  "2722": {
    "titleSlug": "join-two-arrays-by-id",
    "title": "Join Two Arrays by ID",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 56.19199568549021
  },
  "2723": {
    "titleSlug": "add-two-promises",
    "title": "Add Two Promises",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 91.78524651372287
  },
  "2724": {
    "titleSlug": "sort-by",
    "title": "Sort By",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 83.17296736130454
  },
  "2725": {
    "titleSlug": "interval-cancellation",
    "title": "Interval Cancellation",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 84.035528330781
  },
  "2726": {
    "titleSlug": "calculator-with-method-chaining",
    "title": "Calculator with Method Chaining",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 77.50854408749146
  },
  "2727": {
    "titleSlug": "is-object-empty",
    "title": "Is Object Empty",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 81.5146745822698
  },
  "2729": {
    "titleSlug": "check-if-the-number-is-fascinating",
    "title": "Check if The Number is Fascinating",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math"
    ],
    "acRate": 52.366185012721424
  },
  "2730": {
    "titleSlug": "find-the-longest-semi-repetitive-substring",
    "title": "Find the Longest Semi-Repetitive Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window"
    ],
    "acRate": 37.33049822381238
  },
  "2731": {
    "titleSlug": "movement-of-robots",
    "title": "Movement of Robots",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Brainteaser",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 27.150641294324757
  },
  "2732": {
    "titleSlug": "find-a-good-subset-of-the-matrix",
    "title": "Find a Good Subset of the Matrix",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Matrix"
    ],
    "acRate": 46.035334007495095
  },
  "2733": {
    "titleSlug": "neither-minimum-nor-maximum",
    "title": "Neither Minimum nor Maximum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 75.99177481619431
  },
  "2734": {
    "titleSlug": "lexicographically-smallest-string-after-substring-operation",
    "title": "Lexicographically Smallest String After Substring Operation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 32.56808623576008
  },
  "2735": {
    "titleSlug": "collecting-chocolates",
    "title": "Collecting Chocolates",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 33.754854368932044
  },
  "2736": {
    "titleSlug": "maximum-sum-queries",
    "title": "Maximum Sum Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Stack",
      "Binary Indexed Tree",
      "Segment Tree",
      "Sorting",
      "Monotonic Stack"
    ],
    "acRate": 28.25342465753425
  },
  "2739": {
    "titleSlug": "total-distance-traveled",
    "title": "Total Distance Traveled",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 40.225474092877405
  },
  "2740": {
    "titleSlug": "find-the-value-of-the-partition",
    "title": "Find the Value of the Partition",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 64.38075053405325
  },
  "2741": {
    "titleSlug": "special-permutations",
    "title": "Special Permutations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 28.622483838755453
  },
  "2742": {
    "titleSlug": "painting-the-walls",
    "title": "Painting the Walls",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 48.57970242652199
  },
  "2744": {
    "titleSlug": "find-maximum-number-of-string-pairs",
    "title": "Find Maximum Number of String Pairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Simulation"
    ],
    "acRate": 81.66025748202642
  },
  "2745": {
    "titleSlug": "construct-the-longest-new-string",
    "title": "Construct the Longest New String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Greedy",
      "Brainteaser"
    ],
    "acRate": 53.88234769422888
  },
  "2746": {
    "titleSlug": "decremental-string-concatenation",
    "title": "Decremental String Concatenation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 26.405076061273796
  },
  "2747": {
    "titleSlug": "count-zero-request-servers",
    "title": "Count Zero Request Servers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Sorting"
    ],
    "acRate": 34.284784377542714
  },
  "2748": {
    "titleSlug": "number-of-beautiful-pairs",
    "title": "Number of Beautiful Pairs",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting",
      "Number Theory"
    ],
    "acRate": 50.983947393869066
  },
  "2749": {
    "titleSlug": "minimum-operations-to-make-the-integer-zero",
    "title": "Minimum Operations to Make the Integer Zero",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation",
      "Brainteaser",
      "Enumeration"
    ],
    "acRate": 30.26440677966102
  },
  "2750": {
    "titleSlug": "ways-to-split-array-into-good-subarrays",
    "title": "Ways to Split Array Into Good Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 33.94303455723542
  },
  "2751": {
    "titleSlug": "robot-collisions",
    "title": "Robot Collisions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Sorting",
      "Simulation"
    ],
    "acRate": 56.08504940210408
  },
  "2760": {
    "titleSlug": "longest-even-odd-subarray-with-threshold",
    "title": "Longest Even Odd Subarray With Threshold",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 30.40113697409848
  },
  "2761": {
    "titleSlug": "prime-pairs-with-target-sum",
    "title": "Prime Pairs With Target Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Enumeration",
      "Number Theory"
    ],
    "acRate": 35.783060711074285
  },
  "2762": {
    "titleSlug": "continuous-subarrays",
    "title": "Continuous Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Ordered Set",
      "Monotonic Queue"
    ],
    "acRate": 57.98157561995201
  },
  "2763": {
    "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
    "title": "Sum of Imbalance Numbers of All Subarrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Ordered Set"
    ],
    "acRate": 42.29382288203063
  },
  "2765": {
    "titleSlug": "longest-alternating-subarray",
    "title": "Longest Alternating Subarray",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 34.53764088544985
  },
  "2766": {
    "titleSlug": "relocate-marbles",
    "title": "Relocate Marbles",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Simulation"
    ],
    "acRate": 50.19867835701637
  },
  "2767": {
    "titleSlug": "partition-string-into-minimum-beautiful-substrings",
    "title": "Partition String Into Minimum Beautiful Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking"
    ],
    "acRate": 52.757793764988016
  },
  "2768": {
    "titleSlug": "number-of-black-blocks",
    "title": "Number of Black Blocks",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Enumeration"
    ],
    "acRate": 38.82398064554199
  },
  "2769": {
    "titleSlug": "find-the-maximum-achievable-number",
    "title": "Find the Maximum Achievable Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 90.9245122985581
  },
  "2770": {
    "titleSlug": "maximum-number-of-jumps-to-reach-the-last-index",
    "title": "Maximum Number of Jumps to Reach the Last Index",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 31.463610975840034
  },
  "2771": {
    "titleSlug": "longest-non-decreasing-subarray-from-two-arrays",
    "title": "Longest Non-decreasing Subarray From Two Arrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 29.886092300465812
  },
  "2772": {
    "titleSlug": "apply-operations-to-make-all-array-elements-equal-to-zero",
    "title": "Apply Operations to Make All Array Elements Equal to Zero",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 32.74965080264783
  },
  "2778": {
    "titleSlug": "sum-of-squares-of-special-elements",
    "title": "Sum of Squares of Special Elements ",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 81.15417711446469
  },
  "2779": {
    "titleSlug": "maximum-beauty-of-an-array-after-applying-operation",
    "title": "Maximum Beauty of an Array After Applying Operation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Sorting"
    ],
    "acRate": 58.10720711669666
  },
  "2780": {
    "titleSlug": "minimum-index-of-a-valid-split",
    "title": "Minimum Index of a Valid Split",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 75.55359052833346
  },
  "2781": {
    "titleSlug": "length-of-the-longest-valid-substring",
    "title": "Length of the Longest Valid Substring",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 37.75356560291104
  },
  "2784": {
    "titleSlug": "check-if-array-is-good",
    "title": "Check if Array is Good",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 48.41664270752044
  },
  "2785": {
    "titleSlug": "sort-vowels-in-a-string",
    "title": "Sort Vowels in a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sorting"
    ],
    "acRate": 79.45309670409272
  },
  "2786": {
    "titleSlug": "visit-array-positions-to-maximize-score",
    "title": "Visit Array Positions to Maximize Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 36.617723661935145
  },
  "2787": {
    "titleSlug": "ways-to-express-an-integer-as-sum-of-powers",
    "title": "Ways to Express an Integer as Sum of Powers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 33.90440541318745
  },
  "2788": {
    "titleSlug": "split-strings-by-separator",
    "title": "Split Strings by Separator",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 75.02282565496203
  },
  "2789": {
    "titleSlug": "largest-element-in-an-array-after-merge-operations",
    "title": "Largest Element in an Array after Merge Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 46.77335663762733
  },
  "2790": {
    "titleSlug": "maximum-number-of-groups-with-increasing-length",
    "title": "Maximum Number of Groups With Increasing Length",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 22.19314685809258
  },
  "2791": {
    "titleSlug": "count-paths-that-can-form-a-palindrome-in-a-tree",
    "title": "Count Paths That Can Form a Palindrome in a Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Bit Manipulation",
      "Tree",
      "Depth-First Search",
      "Bitmask"
    ],
    "acRate": 45.532683674586664
  },
  "2798": {
    "titleSlug": "number-of-employees-who-met-the-target",
    "title": "Number of Employees Who Met the Target",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 87.62506046180087
  },
  "2799": {
    "titleSlug": "count-complete-subarrays-in-an-array",
    "title": "Count Complete Subarrays in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 75.83335342478964
  },
  "2800": {
    "titleSlug": "shortest-string-that-contains-three-strings",
    "title": "Shortest String That Contains Three Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Enumeration"
    ],
    "acRate": 30.795212948357452
  },
  "2801": {
    "titleSlug": "count-stepping-numbers-in-range",
    "title": "Count Stepping Numbers in Range",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 26.104250111259457
  },
  "2806": {
    "titleSlug": "account-balance-after-rounded-purchase",
    "title": "Account Balance After Rounded Purchase",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 55.148577622349016
  },
  "2807": {
    "titleSlug": "insert-greatest-common-divisors-in-linked-list",
    "title": "Insert Greatest Common Divisors in Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Math",
      "Number Theory"
    ],
    "acRate": 91.49929308789156
  },
  "2808": {
    "titleSlug": "minimum-seconds-to-equalize-a-circular-array",
    "title": "Minimum Seconds to Equalize a Circular Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 27.576178834507775
  },
  "2809": {
    "titleSlug": "minimum-time-to-make-array-sum-at-most-x",
    "title": "Minimum Time to Make Array Sum At Most x",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 25.429229973187827
  },
  "2810": {
    "titleSlug": "faulty-keyboard",
    "title": "Faulty Keyboard",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 78.96991485335856
  },
  "2811": {
    "titleSlug": "check-if-it-is-possible-to-split-array",
    "title": "Check if it is Possible to Split Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 33.96454256922107
  },
  "2812": {
    "titleSlug": "find-the-safest-path-in-a-grid",
    "title": "Find the Safest Path in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 48.420746001581335
  },
  "2813": {
    "titleSlug": "maximum-elegance-of-a-k-length-subsequence",
    "title": "Maximum Elegance of a K-Length Subsequence",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Stack",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 28.026382916697035
  },
  "2815": {
    "titleSlug": "max-pair-sum-in-an-array",
    "title": "Max Pair Sum in an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 59.22632086217471
  },
  "2816": {
    "titleSlug": "double-a-number-represented-as-a-linked-list",
    "title": "Double a Number Represented as a Linked List",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Linked List",
      "Math",
      "Stack"
    ],
    "acRate": 61.21470100347142
  },
  "2817": {
    "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
    "title": "Minimum Absolute Difference Between Elements With Constraint",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Ordered Set"
    ],
    "acRate": 34.27702034321104
  },
  "2818": {
    "titleSlug": "apply-operations-to-maximize-score",
    "title": "Apply Operations to Maximize Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Stack",
      "Greedy",
      "Sorting",
      "Monotonic Stack",
      "Number Theory"
    ],
    "acRate": 54.03017366556311
  },
  "2824": {
    "titleSlug": "count-pairs-whose-sum-is-less-than-target",
    "title": "Count Pairs Whose Sum is Less than Target",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 87.49801139075376
  },
  "2825": {
    "titleSlug": "make-string-a-subsequence-using-cyclic-increments",
    "title": "Make String a Subsequence Using Cyclic Increments",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String"
    ],
    "acRate": 65.61048331301683
  },
  "2826": {
    "titleSlug": "sorting-three-groups",
    "title": "Sorting Three Groups",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming"
    ],
    "acRate": 41.93899393506957
  },
  "2827": {
    "titleSlug": "number-of-beautiful-integers-in-the-range",
    "title": "Number of Beautiful Integers in the Range",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 19.75130033412559
  },
  "2828": {
    "titleSlug": "check-if-a-string-is-an-acronym-of-words",
    "title": "Check if a String Is an Acronym of Words",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 82.59193924323253
  },
  "2829": {
    "titleSlug": "determine-the-minimum-sum-of-a-k-avoiding-array",
    "title": "Determine the Minimum Sum of a k-avoiding Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 59.96568982341276
  },
  "2830": {
    "titleSlug": "maximize-the-profit-as-the-salesman",
    "title": "Maximize the Profit as the Salesman",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 37.27261829842069
  },
  "2831": {
    "titleSlug": "find-the-longest-equal-subarray",
    "title": "Find the Longest Equal Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Sliding Window"
    ],
    "acRate": 36.352970753373
  },
  "2833": {
    "titleSlug": "furthest-point-from-origin",
    "title": "Furthest Point From Origin",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Counting"
    ],
    "acRate": 64.516689645584
  },
  "2834": {
    "titleSlug": "find-the-minimum-possible-sum-of-a-beautiful-array",
    "title": "Find the Minimum Possible Sum of a Beautiful Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy"
    ],
    "acRate": 35.88507520246819
  },
  "2835": {
    "titleSlug": "minimum-operations-to-form-subsequence-with-target-sum",
    "title": "Minimum Operations to Form Subsequence With Target Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 31.600236546422234
  },
  "2836": {
    "titleSlug": "maximize-value-of-function-in-a-ball-passing-game",
    "title": "Maximize Value of Function in a Ball Passing Game",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 29.07970582389187
  },
  "2839": {
    "titleSlug": "check-if-strings-can-be-made-equal-with-operations-i",
    "title": "Check if Strings Can be Made Equal With Operations I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 47.13250275560306
  },
  "2840": {
    "titleSlug": "check-if-strings-can-be-made-equal-with-operations-ii",
    "title": "Check if Strings Can be Made Equal With Operations II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 55.291515957945236
  },
  "2841": {
    "titleSlug": "maximum-sum-of-almost-unique-subarray",
    "title": "Maximum Sum of Almost Unique Subarray",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 39.463006240530056
  },
  "2842": {
    "titleSlug": "count-k-subsequences-of-a-string-with-maximum-beauty",
    "title": "Count K-Subsequences of a String With Maximum Beauty",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Greedy",
      "Combinatorics"
    ],
    "acRate": 29.703221979791135
  },
  "2843": {
    "titleSlug": "count-symmetric-integers",
    "title": "  Count Symmetric Integers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 83.15047521847292
  },
  "2844": {
    "titleSlug": "minimum-operations-to-make-a-special-number",
    "title": "Minimum Operations to Make a Special Number",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Greedy",
      "Enumeration"
    ],
    "acRate": 38.12162931244749
  },
  "2845": {
    "titleSlug": "count-of-interesting-subarrays",
    "title": "Count of Interesting Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 58.04561623770663
  },
  "2846": {
    "titleSlug": "minimum-edge-weight-equilibrium-queries-in-a-tree",
    "title": "Minimum Edge Weight Equilibrium Queries in a Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Graph",
      "Strongly Connected Component"
    ],
    "acRate": 43.28677074774034
  },
  "2848": {
    "titleSlug": "points-that-intersect-with-cars",
    "title": "Points That Intersect With Cars",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 72.8941937642925
  },
  "2849": {
    "titleSlug": "determine-if-a-cell-is-reachable-at-a-given-time",
    "title": "Determine if a Cell Is Reachable at a Given Time",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 37.13358846686693
  },
  "2850": {
    "titleSlug": "minimum-moves-to-spread-stones-over-grid",
    "title": "Minimum Moves to Spread Stones Over Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 44.35984805256207
  },
  "2851": {
    "titleSlug": "string-transformation",
    "title": "String Transformation",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming",
      "String Matching"
    ],
    "acRate": 25.437960871233113
  },
  "2855": {
    "titleSlug": "minimum-right-shifts-to-sort-the-array",
    "title": "Minimum Right Shifts to Sort the Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 56.77713005772047
  },
  "2856": {
    "titleSlug": "minimum-array-length-after-pair-removals",
    "title": "Minimum Array Length After Pair Removals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Counting"
    ],
    "acRate": 25.342562384269463
  },
  "2857": {
    "titleSlug": "count-pairs-of-points-with-distance-k",
    "title": "Count Pairs of Points With Distance k",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation"
    ],
    "acRate": 32.065301490689635
  },
  "2858": {
    "titleSlug": "minimum-edge-reversals-so-every-node-is-reachable",
    "title": "Minimum Edge Reversals So Every Node Is Reachable",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 55.329874706343
  },
  "2859": {
    "titleSlug": "sum-of-values-at-indices-with-k-set-bits",
    "title": "Sum of Values at Indices With K Set Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 85.75086340359653
  },
  "2860": {
    "titleSlug": "happy-students",
    "title": "Happy Students",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 50.11878464552161
  },
  "2861": {
    "titleSlug": "maximum-number-of-alloys",
    "title": "Maximum Number of Alloys",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 39.00165074050824
  },
  "2862": {
    "titleSlug": "maximum-element-sum-of-a-complete-subset-of-indices",
    "title": "Maximum Element-Sum of a Complete Subset of Indices",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 41.673848510964284
  },
  "2864": {
    "titleSlug": "maximum-odd-binary-number",
    "title": "Maximum Odd Binary Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Greedy"
    ],
    "acRate": 82.7424691836461
  },
  "2865": {
    "titleSlug": "beautiful-towers-i",
    "title": "Beautiful Towers I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 43.430693856314946
  },
  "2866": {
    "titleSlug": "beautiful-towers-ii",
    "title": "Beautiful Towers II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 34.708327919968816
  },
  "2867": {
    "titleSlug": "count-valid-paths-in-a-tree",
    "title": "Count Valid Paths in a Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Number Theory"
    ],
    "acRate": 34.506866416978774
  },
  "2869": {
    "titleSlug": "minimum-operations-to-collect-elements",
    "title": "Minimum Operations to Collect Elements",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation"
    ],
    "acRate": 61.220046613540255
  },
  "2870": {
    "titleSlug": "minimum-number-of-operations-to-make-array-empty",
    "title": "Minimum Number of Operations to Make Array Empty",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Counting"
    ],
    "acRate": 61.86295986083371
  },
  "2871": {
    "titleSlug": "split-array-into-maximum-number-of-subarrays",
    "title": "Split Array Into Maximum Number of Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 41.5742073255652
  },
  "2872": {
    "titleSlug": "maximum-number-of-k-divisible-components",
    "title": "Maximum Number of K-Divisible Components",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 69.72120581422672
  },
  "2873": {
    "titleSlug": "maximum-value-of-an-ordered-triplet-i",
    "title": "Maximum Value of an Ordered Triplet I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 58.28951396918723
  },
  "2874": {
    "titleSlug": "maximum-value-of-an-ordered-triplet-ii",
    "title": "Maximum Value of an Ordered Triplet II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 56.63076075420905
  },
  "2875": {
    "titleSlug": "minimum-size-subarray-in-infinite-array",
    "title": "Minimum Size Subarray in Infinite Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 31.278285956492606
  },
  "2876": {
    "titleSlug": "count-visited-nodes-in-a-directed-graph",
    "title": "Count Visited Nodes in a Directed Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Graph",
      "Memoization"
    ],
    "acRate": 29.07898714162811
  },
  "2877": {
    "titleSlug": "create-a-dataframe-from-list",
    "title": "Create a DataFrame from List",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 81.44868250507594
  },
  "2878": {
    "titleSlug": "get-the-size-of-a-dataframe",
    "title": "Get the Size of a DataFrame",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 85.21673892136575
  },
  "2879": {
    "titleSlug": "display-the-first-three-rows",
    "title": "Display the First Three Rows",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 93.10346638655463
  },
  "2880": {
    "titleSlug": "select-data",
    "title": "Select Data",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 79.24528301886792
  },
  "2881": {
    "titleSlug": "create-a-new-column",
    "title": "Create a New Column",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 90.29984168577356
  },
  "2882": {
    "titleSlug": "drop-duplicate-rows",
    "title": "Drop Duplicate Rows",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 85.51115434407879
  },
  "2883": {
    "titleSlug": "drop-missing-data",
    "title": "Drop Missing Data",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 64.41863832498335
  },
  "2884": {
    "titleSlug": "modify-columns",
    "title": "Modify Columns",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 92.5522910455159
  },
  "2885": {
    "titleSlug": "rename-columns",
    "title": "Rename Columns",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 85.60952806796472
  },
  "2886": {
    "titleSlug": "change-data-type",
    "title": "Change Data Type",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 87.50923496293277
  },
  "2887": {
    "titleSlug": "fill-missing-data",
    "title": "Fill Missing Data",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 72.34519925211717
  },
  "2888": {
    "titleSlug": "reshape-data-concatenate",
    "title": "Reshape Data: Concatenate",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 90.73111177472903
  },
  "2889": {
    "titleSlug": "reshape-data-pivot",
    "title": "Reshape Data: Pivot",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 83.61760712851598
  },
  "2890": {
    "titleSlug": "reshape-data-melt",
    "title": "Reshape Data: Melt",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 86.24955593170752
  },
  "2891": {
    "titleSlug": "method-chaining",
    "title": "Method Chaining",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 76.60873775960401
  },
  "2894": {
    "titleSlug": "divisible-and-non-divisible-sums-difference",
    "title": "Divisible and Non-divisible Sums Difference",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 91.25320927026794
  },
  "2895": {
    "titleSlug": "minimum-processing-time",
    "title": "Minimum Processing Time",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 69.32493280145184
  },
  "2896": {
    "titleSlug": "apply-operations-to-make-two-strings-equal",
    "title": "Apply Operations to Make Two Strings Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 27.228261907946273
  },
  "2897": {
    "titleSlug": "apply-operations-on-array-to-maximize-sum-of-squares",
    "title": "Apply Operations on Array to Maximize Sum of Squares",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 43.28782390638061
  },
  "2899": {
    "titleSlug": "last-visited-integers",
    "title": "Last Visited Integers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 61.12855799811974
  },
  "2900": {
    "titleSlug": "longest-unequal-adjacent-groups-subsequence-i",
    "title": "Longest Unequal Adjacent Groups Subsequence I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 67.48701593633366
  },
  "2901": {
    "titleSlug": "longest-unequal-adjacent-groups-subsequence-ii",
    "title": "Longest Unequal Adjacent Groups Subsequence II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 51.37099584930769
  },
  "2902": {
    "titleSlug": "count-of-sub-multisets-with-bounded-sum",
    "title": "Count of Sub-Multisets With Bounded Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming",
      "Sliding Window"
    ],
    "acRate": 20.63262684649968
  },
  "2903": {
    "titleSlug": "find-indices-with-index-and-value-difference-i",
    "title": "Find Indices With Index and Value Difference I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 60.301838084718206
  },
  "2904": {
    "titleSlug": "shortest-and-lexicographically-smallest-beautiful-string",
    "title": "Shortest and Lexicographically Smallest Beautiful String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window"
    ],
    "acRate": 39.75985591354813
  },
  "2905": {
    "titleSlug": "find-indices-with-index-and-value-difference-ii",
    "title": "Find Indices With Index and Value Difference II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 31.929406007218446
  },
  "2906": {
    "titleSlug": "construct-product-matrix",
    "title": "Construct Product Matrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 31.069397279109985
  },
  "2908": {
    "titleSlug": "minimum-sum-of-mountain-triplets-i",
    "title": "Minimum Sum of Mountain Triplets I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 66.00383582662064
  },
  "2909": {
    "titleSlug": "minimum-sum-of-mountain-triplets-ii",
    "title": "Minimum Sum of Mountain Triplets II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 53.745784264941676
  },
  "2910": {
    "titleSlug": "minimum-number-of-groups-to-create-a-valid-assignment",
    "title": "Minimum Number of Groups to Create a Valid Assignment",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy"
    ],
    "acRate": 24.032124159197572
  },
  "2911": {
    "titleSlug": "minimum-changes-to-make-k-semi-palindromes",
    "title": "Minimum Changes to Make K Semi-palindromes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 35.003022061045634
  },
  "2913": {
    "titleSlug": "subarrays-distinct-element-sum-of-squares-i",
    "title": "Subarrays Distinct Element Sum of Squares I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 79.6259552482172
  },
  "2914": {
    "titleSlug": "minimum-number-of-changes-to-make-binary-string-beautiful",
    "title": "Minimum Number of Changes to Make Binary String Beautiful",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 76.51567081762444
  },
  "2915": {
    "titleSlug": "length-of-the-longest-subsequence-that-sums-to-target",
    "title": "Length of the Longest Subsequence That Sums to Target",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 37.415563870125304
  },
  "2916": {
    "titleSlug": "subarrays-distinct-element-sum-of-squares-ii",
    "title": "Subarrays Distinct Element Sum of Squares II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 20.971538626150224
  },
  "2917": {
    "titleSlug": "find-the-k-or-of-an-array",
    "title": "Find the K-or of an Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 72.15028269195696
  },
  "2918": {
    "titleSlug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
    "title": "Minimum Equal Sum of Two Arrays After Replacing Zeros",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 50.170203301529384
  },
  "2919": {
    "titleSlug": "minimum-increment-operations-to-make-array-beautiful",
    "title": "Minimum Increment Operations to Make Array Beautiful",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 33.98934341698178
  },
  "2920": {
    "titleSlug": "maximum-points-after-collecting-coins-from-all-nodes",
    "title": "Maximum Points After Collecting Coins From All Nodes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Tree",
      "Depth-First Search",
      "Memoization"
    ],
    "acRate": 35.87295621123849
  },
  "2923": {
    "titleSlug": "find-champion-i",
    "title": "Find Champion I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 72.49770362450873
  },
  "2924": {
    "titleSlug": "find-champion-ii",
    "title": "Find Champion II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Graph"
    ],
    "acRate": 70.05075863582736
  },
  "2925": {
    "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
    "title": "Maximum Score After Applying Operations on a Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 46.28411559867853
  },
  "2926": {
    "titleSlug": "maximum-balanced-subsequence-sum",
    "title": "Maximum Balanced Subsequence Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 25.054775497608397
  },
  "2928": {
    "titleSlug": "distribute-candies-among-children-i",
    "title": "Distribute Candies Among Children I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Combinatorics",
      "Enumeration"
    ],
    "acRate": 75.08896073527318
  },
  "2929": {
    "titleSlug": "distribute-candies-among-children-ii",
    "title": "Distribute Candies Among Children II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Combinatorics",
      "Enumeration"
    ],
    "acRate": 55.97068037008187
  },
  "2930": {
    "titleSlug": "number-of-strings-which-can-be-rearranged-to-contain-substring",
    "title": "Number of Strings Which Can Be Rearranged to Contain Substring",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 55.41579817436929
  },
  "2931": {
    "titleSlug": "maximum-spending-after-buying-items",
    "title": "Maximum Spending After Buying Items",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 60.10094417613018
  },
  "2932": {
    "titleSlug": "maximum-strong-pair-xor-i",
    "title": "Maximum Strong Pair XOR I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Trie",
      "Sliding Window"
    ],
    "acRate": 74.95450512099382
  },
  "2933": {
    "titleSlug": "high-access-employees",
    "title": "High-Access Employees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 46.26177877357741
  },
  "2934": {
    "titleSlug": "minimum-operations-to-maximize-last-elements-in-arrays",
    "title": "Minimum Operations to Maximize Last Elements in Arrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 43.24559766038206
  },
  "2935": {
    "titleSlug": "maximum-strong-pair-xor-ii",
    "title": "Maximum Strong Pair XOR II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Trie",
      "Sliding Window"
    ],
    "acRate": 30.885870666936952
  },
  "2937": {
    "titleSlug": "make-three-strings-equal",
    "title": "Make Three Strings Equal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 43.31546876147126
  },
  "2938": {
    "titleSlug": "separate-black-and-white-balls",
    "title": "Separate Black and White Balls",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "acRate": 64.05175328753023
  },
  "2939": {
    "titleSlug": "maximum-xor-product",
    "title": "Maximum Xor Product",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 27.12542136464024
  },
  "2940": {
    "titleSlug": "find-building-where-alice-and-bob-can-meet",
    "title": "Find Building Where Alice and Bob Can Meet",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Stack",
      "Binary Indexed Tree",
      "Segment Tree",
      "Heap (Priority Queue)",
      "Monotonic Stack"
    ],
    "acRate": 52.21553873585925
  },
  "2942": {
    "titleSlug": "find-words-containing-character",
    "title": "Find Words Containing Character",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 90.58847846975486
  },
  "2943": {
    "titleSlug": "maximize-area-of-square-hole-in-grid",
    "title": "Maximize Area of Square Hole in Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 37.042720521743895
  },
  "2944": {
    "titleSlug": "minimum-number-of-coins-for-fruits",
    "title": "Minimum Number of Coins for Fruits",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Queue",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "acRate": 46.974223580907385
  },
  "2945": {
    "titleSlug": "find-maximum-non-decreasing-array-length",
    "title": "Find Maximum Non-decreasing Array Length",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Stack",
      "Queue",
      "Monotonic Stack",
      "Monotonic Queue"
    ],
    "acRate": 17.05711029504875
  },
  "2946": {
    "titleSlug": "matrix-similarity-after-cyclic-shifts",
    "title": "Matrix Similarity After Cyclic Shifts",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Matrix",
      "Simulation"
    ],
    "acRate": 58.32914678054091
  },
  "2947": {
    "titleSlug": "count-beautiful-substrings-i",
    "title": "Count Beautiful Substrings I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Enumeration",
      "Number Theory",
      "Prefix Sum"
    ],
    "acRate": 59.676072800133575
  },
  "2948": {
    "titleSlug": "make-lexicographically-smallest-array-by-swapping-elements",
    "title": "Make Lexicographically Smallest Array by Swapping Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Union Find",
      "Sorting"
    ],
    "acRate": 60.2126316045125
  },
  "2949": {
    "titleSlug": "count-beautiful-substrings-ii",
    "title": "Count Beautiful Substrings II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Number Theory",
      "Prefix Sum"
    ],
    "acRate": 24.88562894627396
  },
  "2951": {
    "titleSlug": "find-the-peaks",
    "title": "Find the Peaks",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 74.2819060313229
  },
  "2952": {
    "titleSlug": "minimum-number-of-coins-to-be-added",
    "title": "Minimum Number of Coins to be Added",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 56.88043299983598
  },
  "2953": {
    "titleSlug": "count-complete-substrings",
    "title": "Count Complete Substrings",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 28.754146370618294
  },
  "2954": {
    "titleSlug": "count-the-number-of-infection-sequences",
    "title": "Count the Number of Infection Sequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Combinatorics"
    ],
    "acRate": 33.60662391427876
  },
  "2956": {
    "titleSlug": "find-common-elements-between-two-arrays",
    "title": "Find Common Elements Between Two Arrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 83.7804080756433
  },
  "2957": {
    "titleSlug": "remove-adjacent-almost-equal-characters",
    "title": "Remove Adjacent Almost-Equal Characters",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 51.90867142086655
  },
  "2958": {
    "titleSlug": "length-of-longest-subarray-with-at-most-k-frequency",
    "title": "Length of Longest Subarray With at Most K Frequency",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "acRate": 55.8428558974243
  },
  "2959": {
    "titleSlug": "number-of-possible-sets-of-closing-branches",
    "title": "Number of Possible Sets of Closing Branches",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation",
      "Graph",
      "Heap (Priority Queue)",
      "Enumeration",
      "Shortest Path"
    ],
    "acRate": 48.629288522647705
  },
  "2960": {
    "titleSlug": "count-tested-devices-after-test-operations",
    "title": "Count Tested Devices After Test Operations",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation",
      "Counting"
    ],
    "acRate": 78.43034351145039
  },
  "2961": {
    "titleSlug": "double-modular-exponentiation",
    "title": "Double Modular Exponentiation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Simulation"
    ],
    "acRate": 47.16759085650457
  },
  "2962": {
    "titleSlug": "count-subarrays-where-max-element-appears-at-least-k-times",
    "title": "Count Subarrays Where Max Element Appears at Least K Times",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 62.49853712645842
  },
  "2963": {
    "titleSlug": "count-the-number-of-good-partitions",
    "title": "Count the Number of Good Partitions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Combinatorics"
    ],
    "acRate": 47.22983311390243
  },
  "2965": {
    "titleSlug": "find-missing-and-repeated-values",
    "title": "Find Missing and Repeated Values",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Matrix"
    ],
    "acRate": 83.47182063572876
  },
  "2966": {
    "titleSlug": "divide-array-into-arrays-with-max-difference",
    "title": "Divide Array Into Arrays With Max Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 78.66601445479043
  },
  "2967": {
    "titleSlug": "minimum-cost-to-make-array-equalindromic",
    "title": "Minimum Cost to Make Array Equalindromic",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 22.569881546418333
  },
  "2968": {
    "titleSlug": "apply-operations-to-maximize-frequency-score",
    "title": "Apply Operations to Maximize Frequency Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 36.49922549236557
  },
  "2970": {
    "titleSlug": "count-the-number-of-incremovable-subarrays-i",
    "title": "Count the Number of Incremovable Subarrays I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Enumeration"
    ],
    "acRate": 54.917463430579396
  },
  "2971": {
    "titleSlug": "find-polygon-with-the-largest-perimeter",
    "title": "Find Polygon With the Largest Perimeter",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 65.36795732966915
  },
  "2972": {
    "titleSlug": "count-the-number-of-incremovable-subarrays-ii",
    "title": "Count the Number of Incremovable Subarrays II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Binary Search"
    ],
    "acRate": 39.1317865609576
  },
  "2973": {
    "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
    "title": "Find Number of Coins to Place in Tree Nodes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 36.46466462866391
  },
  "2974": {
    "titleSlug": "minimum-number-game",
    "title": "Minimum Number Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 84.90039638542866
  },
  "2975": {
    "titleSlug": "maximum-square-area-by-removing-fences-from-a-field",
    "title": "Maximum Square Area by Removing Fences From a Field",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Enumeration"
    ],
    "acRate": 24.17090362837994
  },
  "2976": {
    "titleSlug": "minimum-cost-to-convert-string-i",
    "title": "Minimum Cost to Convert String I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Graph",
      "Shortest Path"
    ],
    "acRate": 57.52196359025451
  },
  "2977": {
    "titleSlug": "minimum-cost-to-convert-string-ii",
    "title": "Minimum Cost to Convert String II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Graph",
      "Trie",
      "Shortest Path"
    ],
    "acRate": 25.59414990859232
  },
  "2980": {
    "titleSlug": "check-if-bitwise-or-has-trailing-zeros",
    "title": "Check if Bitwise OR Has Trailing Zeros",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 69.9127955726983
  },
  "2981": {
    "titleSlug": "find-longest-special-substring-that-occurs-thrice-i",
    "title": "Find Longest Special Substring That Occurs Thrice I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Binary Search",
      "Sliding Window",
      "Counting"
    ],
    "acRate": 61.883501546396744
  },
  "2982": {
    "titleSlug": "find-longest-special-substring-that-occurs-thrice-ii",
    "title": "Find Longest Special Substring That Occurs Thrice II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Binary Search",
      "Sliding Window",
      "Counting"
    ],
    "acRate": 38.477820970232706
  },
  "2983": {
    "titleSlug": "palindrome-rearrangement-queries",
    "title": "Palindrome Rearrangement Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Prefix Sum"
    ],
    "acRate": 23.269313901068365
  },
  "2996": {
    "titleSlug": "smallest-missing-integer-greater-than-sequential-prefix-sum",
    "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 33.807367538997035
  },
  "2997": {
    "titleSlug": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
    "title": "Minimum Number of Operations to Make Array XOR Equal to K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 85.36685932538104
  },
  "2998": {
    "titleSlug": "minimum-number-of-operations-to-make-x-and-y-equal",
    "title": "Minimum Number of Operations to Make X and Y Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Breadth-First Search",
      "Memoization"
    ],
    "acRate": 47.50835583586684
  },
  "2999": {
    "titleSlug": "count-the-number-of-powerful-integers",
    "title": "Count the Number of Powerful Integers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 46.49247793342092
  },
  "3000": {
    "titleSlug": "maximum-area-of-longest-diagonal-rectangle",
    "title": "Maximum Area of Longest Diagonal Rectangle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 36.59214779812523
  },
  "3001": {
    "titleSlug": "minimum-moves-to-capture-the-queen",
    "title": "Minimum Moves to Capture The Queen",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 21.477713686418458
  },
  "3002": {
    "titleSlug": "maximum-size-of-a-set-after-removals",
    "title": "Maximum Size of a Set After Removals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy"
    ],
    "acRate": 44.87941450955352
  },
  "3003": {
    "titleSlug": "maximize-the-number-of-partitions-after-operations",
    "title": "Maximize the Number of Partitions After Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 27.646515311510033
  },
  "3005": {
    "titleSlug": "count-elements-with-maximum-frequency",
    "title": "Count Elements With Maximum Frequency",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 77.90299859126584
  },
  "3006": {
    "titleSlug": "find-beautiful-indices-in-the-given-array-i",
    "title": "Find Beautiful Indices in the Given Array I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Binary Search",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 38.512626290030276
  },
  "3007": {
    "titleSlug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
    "title": "Maximum Number That Sum of the Prices Is Less Than or Equal to K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 37.17995069843879
  },
  "3008": {
    "titleSlug": "find-beautiful-indices-in-the-given-array-ii",
    "title": "Find Beautiful Indices in the Given Array II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Binary Search",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 26.556894819916778
  },
  "3010": {
    "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-i",
    "title": "Divide an Array Into Subarrays With Minimum Cost I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 65.85202432201544
  },
  "3011": {
    "titleSlug": "find-if-array-can-be-sorted",
    "title": "Find if Array Can Be Sorted",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Sorting"
    ],
    "acRate": 66.53580737755254
  },
  "3012": {
    "titleSlug": "minimize-length-of-array-using-operations",
    "title": "Minimize Length of Array Using Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Number Theory"
    ],
    "acRate": 34.92727591343205
  },
  "3013": {
    "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-ii",
    "title": "Divide an Array Into Subarrays With Minimum Cost II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Heap (Priority Queue)"
    ],
    "acRate": 30.478648521820737
  },
  "3014": {
    "titleSlug": "minimum-number-of-pushes-to-type-word-i",
    "title": "Minimum Number of Pushes to Type Word I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Greedy"
    ],
    "acRate": 66.29316939116639
  },
  "3015": {
    "titleSlug": "count-the-number-of-houses-at-a-certain-distance-i",
    "title": "Count the Number of Houses at a Certain Distance I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Breadth-First Search",
      "Graph",
      "Prefix Sum"
    ],
    "acRate": 55.339058197601155
  },
  "3016": {
    "titleSlug": "minimum-number-of-pushes-to-type-word-ii",
    "title": "Minimum Number of Pushes to Type Word II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Counting"
    ],
    "acRate": 79.8974953047935
  },
  "3017": {
    "titleSlug": "count-the-number-of-houses-at-a-certain-distance-ii",
    "title": "Count the Number of Houses at a Certain Distance II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Graph",
      "Prefix Sum"
    ],
    "acRate": 22.21764463539521
  },
  "3019": {
    "titleSlug": "number-of-changing-keys",
    "title": "Number of Changing Keys",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 79.74472405540648
  },
  "3020": {
    "titleSlug": "find-the-maximum-number-of-elements-in-subset",
    "title": "Find the Maximum Number of Elements in Subset",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Enumeration"
    ],
    "acRate": 26.369641238181586
  },
  "3021": {
    "titleSlug": "alice-and-bob-playing-flower-game",
    "title": "Alice and Bob Playing Flower Game",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 45.803521433459835
  },
  "3022": {
    "titleSlug": "minimize-or-of-remaining-elements-using-operations",
    "title": "Minimize OR of Remaining Elements Using Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Bit Manipulation"
    ],
    "acRate": 28.43294405007251
  },
  "3024": {
    "titleSlug": "type-of-triangle",
    "title": "Type of Triangle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting"
    ],
    "acRate": 44.73543496644501
  },
  "3025": {
    "titleSlug": "find-the-number-of-ways-to-place-people-i",
    "title": "Find the Number of Ways to Place People I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 40.89933545367569
  },
  "3026": {
    "titleSlug": "maximum-good-subarray-sum",
    "title": "Maximum Good Subarray Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 20.330908679757282
  },
  "3027": {
    "titleSlug": "find-the-number-of-ways-to-place-people-ii",
    "title": "Find the Number of Ways to Place People II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 45.83067856005097
  },
  "3028": {
    "titleSlug": "ant-on-the-boundary",
    "title": "Ant on the Boundary",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation",
      "Prefix Sum"
    ],
    "acRate": 73.78228141285467
  },
  "3029": {
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-i",
    "title": "Minimum Time to Revert Word to Initial State I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 41.34763772939405
  },
  "3030": {
    "titleSlug": "find-the-grid-of-region-average",
    "title": "Find the Grid of Region Average",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 42.33643434497484
  },
  "3031": {
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-ii",
    "title": "Minimum Time to Revert Word to Initial State II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 34.430218731852996
  },
  "3033": {
    "titleSlug": "modify-the-matrix",
    "title": "Modify the Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 68.37967090864878
  },
  "3034": {
    "titleSlug": "number-of-subarrays-that-match-a-pattern-i",
    "title": "Number of Subarrays That Match a Pattern I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 66.98691082597202
  },
  "3035": {
    "titleSlug": "maximum-palindromes-after-operations",
    "title": "Maximum Palindromes After Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Counting"
    ],
    "acRate": 43.1375994778199
  },
  "3036": {
    "titleSlug": "number-of-subarrays-that-match-a-pattern-ii",
    "title": "Number of Subarrays That Match a Pattern II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 32.32425585813806
  },
  "3038": {
    "titleSlug": "maximum-number-of-operations-with-the-same-score-i",
    "title": "Maximum Number of Operations With the Same Score I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 51.97989026137254
  },
  "3039": {
    "titleSlug": "apply-operations-to-make-string-empty",
    "title": "Apply Operations to Make String Empty",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ],
    "acRate": 56.2603993344426
  },
  "3040": {
    "titleSlug": "maximum-number-of-operations-with-the-same-score-ii",
    "title": "Maximum Number of Operations With the Same Score II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Memoization"
    ],
    "acRate": 33.136775492593124
  },
  "3041": {
    "titleSlug": "maximize-consecutive-elements-in-an-array-after-modification",
    "title": "Maximize Consecutive Elements in an Array After Modification",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 32.57254011995461
  },
  "3042": {
    "titleSlug": "count-prefix-and-suffix-pairs-i",
    "title": "Count Prefix and Suffix Pairs I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Trie",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 77.69299474875649
  },
  "3043": {
    "titleSlug": "find-the-length-of-the-longest-common-prefix",
    "title": "Find the Length of the Longest Common Prefix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie"
    ],
    "acRate": 56.42290818658518
  },
  "3044": {
    "titleSlug": "most-frequent-prime",
    "title": "Most Frequent Prime",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Matrix",
      "Counting",
      "Enumeration",
      "Number Theory"
    ],
    "acRate": 45.020784384601484
  },
  "3045": {
    "titleSlug": "count-prefix-and-suffix-pairs-ii",
    "title": "Count Prefix and Suffix Pairs II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Trie",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 27.308580223162753
  },
  "3046": {
    "titleSlug": "split-the-array",
    "title": "Split the Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 59.38719767011038
  },
  "3047": {
    "titleSlug": "find-the-largest-area-of-square-inside-two-rectangles",
    "title": "Find the Largest Area of Square Inside Two Rectangles",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry"
    ],
    "acRate": 45.12398416336737
  },
  "3048": {
    "titleSlug": "earliest-second-to-mark-indices-i",
    "title": "Earliest Second to Mark Indices I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 34.76750307071416
  },
  "3049": {
    "titleSlug": "earliest-second-to-mark-indices-ii",
    "title": "Earliest Second to Mark Indices II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 19.934197793690732
  },
  "3065": {
    "titleSlug": "minimum-operations-to-exceed-threshold-value-i",
    "title": "Minimum Operations to Exceed Threshold Value I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 86.03070305254641
  },
  "3066": {
    "titleSlug": "minimum-operations-to-exceed-threshold-value-ii",
    "title": "Minimum Operations to Exceed Threshold Value II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 45.76528852313606
  },
  "3067": {
    "titleSlug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
    "title": "Count Pairs of Connectable Servers in a Weighted Tree Network",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 54.2938227922748
  },
  "3068": {
    "titleSlug": "find-the-maximum-sum-of-node-values",
    "title": "Find the Maximum Sum of Node Values",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Bit Manipulation",
      "Tree",
      "Sorting"
    ],
    "acRate": 69.77086582961395
  },
  "3069": {
    "titleSlug": "distribute-elements-into-two-arrays-i",
    "title": "Distribute Elements Into Two Arrays I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 73.02476455275246
  },
  "3070": {
    "titleSlug": "count-submatrices-with-top-left-element-and-sum-less-than-k",
    "title": "Count Submatrices with Top-Left Element and Sum Less Than k",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 57.32596378620389
  },
  "3071": {
    "titleSlug": "minimum-operations-to-write-the-letter-y-on-a-grid",
    "title": "Minimum Operations to Write the Letter Y on a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix",
      "Counting"
    ],
    "acRate": 62.1676496180992
  },
  "3072": {
    "titleSlug": "distribute-elements-into-two-arrays-ii",
    "title": "Distribute Elements Into Two Arrays II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Indexed Tree",
      "Segment Tree",
      "Simulation"
    ],
    "acRate": 29.44960686204432
  },
  "3074": {
    "titleSlug": "apple-redistribution-into-boxes",
    "title": "Apple Redistribution into Boxes",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 68.29924144571523
  },
  "3075": {
    "titleSlug": "maximize-happiness-of-selected-children",
    "title": "Maximize Happiness of Selected Children",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 54.840885270305165
  },
  "3076": {
    "titleSlug": "shortest-uncommon-substring-in-an-array",
    "title": "Shortest Uncommon Substring in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Trie"
    ],
    "acRate": 48.3808487138032
  },
  "3077": {
    "titleSlug": "maximum-strength-of-k-disjoint-subarrays",
    "title": "Maximum Strength of K Disjoint Subarrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 26.86796498123995
  },
  "3079": {
    "titleSlug": "find-the-sum-of-encrypted-integers",
    "title": "Find the Sum of Encrypted Integers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 73.7248344592335
  },
  "3080": {
    "titleSlug": "mark-elements-on-array-by-performing-queries",
    "title": "Mark Elements on Array by Performing Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 47.771399234574815
  },
  "3081": {
    "titleSlug": "replace-question-marks-in-string-to-minimize-its-value",
    "title": "Replace Question Marks in String to Minimize Its Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ],
    "acRate": 27.967994372636944
  },
  "3082": {
    "titleSlug": "find-the-sum-of-the-power-of-all-subsequences",
    "title": "Find the Sum of the Power of All Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 36.808242220353236
  },
  "3083": {
    "titleSlug": "existence-of-a-substring-in-a-string-and-its-reverse",
    "title": "Existence of a Substring in a String and Its Reverse",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 65.72683858643744
  },
  "3084": {
    "titleSlug": "count-substrings-starting-and-ending-with-given-character",
    "title": "Count Substrings Starting and Ending with Given Character",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Counting"
    ],
    "acRate": 49.02607236888091
  },
  "3085": {
    "titleSlug": "minimum-deletions-to-make-string-k-special",
    "title": "Minimum Deletions to Make String K-Special",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Counting"
    ],
    "acRate": 67.09562775873627
  },
  "3086": {
    "titleSlug": "minimum-moves-to-pick-k-ones",
    "title": "Minimum Moves to Pick K Ones",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 20.527503992070923
  },
  "3090": {
    "titleSlug": "maximum-length-substring-with-two-occurrences",
    "title": "Maximum Length Substring With Two Occurrences",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 63.712780797537164
  },
  "3091": {
    "titleSlug": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
    "title": "Apply Operations to Make Sum of Array Greater Than or Equal to k",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Greedy",
      "Enumeration"
    ],
    "acRate": 43.44805855139718
  },
  "3092": {
    "titleSlug": "most-frequent-ids",
    "title": "Most Frequent IDs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 41.69288224147764
  },
  "3093": {
    "titleSlug": "longest-common-suffix-queries",
    "title": "Longest Common Suffix Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Trie"
    ],
    "acRate": 36.544791911591815
  },
  "3095": {
    "titleSlug": "shortest-subarray-with-or-at-least-k-i",
    "title": "Shortest Subarray With OR at Least K I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Sliding Window"
    ],
    "acRate": 42.90945857634308
  },
  "3096": {
    "title": "Minimum Levels to Gain More Points",
    "signature": "int MinimumLevels(std::vector<int>& possible)",
    "difficulty": "Medium",
    "topics": [
      "Array",
      "Prefix Sum"
    ],
    "companies": [],
    "created": "2025-07-07T19:04:14.787040",
    "filename": "3096_Minimum_Levels_To_Gain_More_Points.h"
  },
  "3097": {
    "titleSlug": "shortest-subarray-with-or-at-least-k-ii",
    "title": "Shortest Subarray With OR at Least K II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Sliding Window"
    ],
    "acRate": 50.24168384326634
  },
  "3098": {
    "titleSlug": "find-the-sum-of-subsequence-powers",
    "title": "Find the Sum of Subsequence Powers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 23.615375646158032
  },
  "3099": {
    "titleSlug": "harshad-number",
    "title": "Harshad Number",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 83.1870883779627
  },
  "3100": {
    "titleSlug": "water-bottles-ii",
    "title": "Water Bottles II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 62.2456277225148
  },
  "3101": {
    "titleSlug": "count-alternating-subarrays",
    "title": "Count Alternating Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 56.34839387986609
  },
  "3102": {
    "titleSlug": "minimize-manhattan-distances",
    "title": "Minimize Manhattan Distances",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Geometry",
      "Sorting",
      "Ordered Set"
    ],
    "acRate": 31.571595634095633
  },
  "3105": {
    "titleSlug": "longest-strictly-increasing-or-strictly-decreasing-subarray",
    "title": "Longest Strictly Increasing or Strictly Decreasing Subarray",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 65.02204865652678
  },
  "3106": {
    "titleSlug": "lexicographically-smallest-string-after-operations-with-constraint",
    "title": "Lexicographically Smallest String After Operations With Constraint",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 62.33275617818354
  },
  "3107": {
    "titleSlug": "minimum-operations-to-make-median-of-array-equal-to-k",
    "title": "Minimum Operations to Make Median of Array Equal to K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 46.77724332393432
  },
  "3108": {
    "titleSlug": "minimum-cost-walk-in-weighted-graph",
    "title": "Minimum Cost Walk in Weighted Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Union Find",
      "Graph"
    ],
    "acRate": 68.45916102950542
  },
  "3110": {
    "titleSlug": "score-of-a-string",
    "title": "Score of a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 91.82596525481134
  },
  "3111": {
    "titleSlug": "minimum-rectangles-to-cover-points",
    "title": "Minimum Rectangles to Cover Points",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 62.493758322237014
  },
  "3112": {
    "titleSlug": "minimum-time-to-visit-disappearing-nodes",
    "title": "Minimum Time to Visit Disappearing Nodes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 35.78646416361601
  },
  "3113": {
    "titleSlug": "find-the-number-of-subarrays-where-boundary-elements-are-maximum",
    "title": "Find the Number of Subarrays Where Boundary Elements Are Maximum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 31.108750241452576
  },
  "3114": {
    "titleSlug": "latest-time-you-can-obtain-after-replacing-characters",
    "title": "Latest Time You Can Obtain After Replacing Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Enumeration"
    ],
    "acRate": 34.48489306731735
  },
  "3115": {
    "titleSlug": "maximum-prime-difference",
    "title": "Maximum Prime Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 57.46963952965367
  },
  "3116": {
    "titleSlug": "kth-smallest-amount-with-single-denomination-combination",
    "title": "Kth Smallest Amount With Single Denomination Combination",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Bit Manipulation",
      "Combinatorics",
      "Number Theory"
    ],
    "acRate": 18.56134849078793
  },
  "3117": {
    "titleSlug": "minimum-sum-of-values-by-dividing-array",
    "title": "Minimum Sum of Values by Dividing Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Bit Manipulation",
      "Segment Tree",
      "Queue"
    ],
    "acRate": 26.912018401380106
  },
  "3120": {
    "titleSlug": "count-the-number-of-special-characters-i",
    "title": "Count the Number of Special Characters I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 65.49328285859379
  },
  "3121": {
    "titleSlug": "count-the-number-of-special-characters-ii",
    "title": "Count the Number of Special Characters II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 42.168107014801876
  },
  "3122": {
    "titleSlug": "minimum-number-of-operations-to-satisfy-conditions",
    "title": "Minimum Number of Operations to Satisfy Conditions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 40.742142232102736
  },
  "3123": {
    "titleSlug": "find-edges-in-shortest-paths",
    "title": "Find Edges in Shortest Paths",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "acRate": 45.62691485056939
  },
  "3127": {
    "titleSlug": "make-a-square-with-the-same-color",
    "title": "Make a Square with the Same Color",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Enumeration"
    ],
    "acRate": 51.94299430950263
  },
  "3128": {
    "titleSlug": "right-triangles",
    "title": "Right Triangles",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Combinatorics",
      "Counting"
    ],
    "acRate": 47.16749846773487
  },
  "3129": {
    "titleSlug": "find-all-possible-stable-binary-arrays-i",
    "title": "Find All Possible Stable Binary Arrays I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 26.275965245411125
  },
  "3130": {
    "titleSlug": "find-all-possible-stable-binary-arrays-ii",
    "title": "Find All Possible Stable Binary Arrays II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 26.044577738395475
  },
  "3131": {
    "titleSlug": "find-the-integer-added-to-array-i",
    "title": "Find the Integer Added to Array I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 82.07853355275188
  },
  "3132": {
    "titleSlug": "find-the-integer-added-to-array-ii",
    "title": "Find the Integer Added to Array II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 31.948750563107826
  },
  "3133": {
    "titleSlug": "minimum-array-end",
    "title": "Minimum Array End",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 55.503438344585774
  },
  "3134": {
    "titleSlug": "find-the-median-of-the-uniqueness-array",
    "title": "Find the Median of the Uniqueness Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Sliding Window"
    ],
    "acRate": 28.13067837674137
  },
  "3136": {
    "titleSlug": "valid-word",
    "title": "Valid Word",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 38.79841758498899
  },
  "3137": {
    "titleSlug": "minimum-number-of-operations-to-make-word-k-periodic",
    "title": "Minimum Number of Operations to Make Word K-Periodic",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 59.80624084713304
  },
  "3138": {
    "titleSlug": "minimum-length-of-anagram-concatenation",
    "title": "Minimum Length of Anagram Concatenation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 39.73650278944479
  },
  "3139": {
    "titleSlug": "minimum-cost-to-equalize-array",
    "title": "Minimum Cost to Equalize Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Enumeration"
    ],
    "acRate": 17.646501043049497
  },
  "3142": {
    "titleSlug": "check-if-grid-satisfies-conditions",
    "title": "Check if Grid Satisfies Conditions",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 43.87544386779568
  },
  "3143": {
    "titleSlug": "maximum-points-inside-the-square",
    "title": "Maximum Points Inside the Square",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 38.27249799605075
  },
  "3144": {
    "titleSlug": "minimum-substring-partition-of-equal-character-frequency",
    "title": "Minimum Substring Partition of Equal Character Frequency",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Counting"
    ],
    "acRate": 39.06709078988903
  },
  "3145": {
    "titleSlug": "find-products-of-elements-of-big-array",
    "title": "Find Products of Elements of Big Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Bit Manipulation"
    ],
    "acRate": 21.8826192964124
  },
  "3146": {
    "titleSlug": "permutation-difference-between-two-strings",
    "title": "Permutation Difference between Two Strings",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String"
    ],
    "acRate": 87.23283278804657
  },
  "3147": {
    "titleSlug": "taking-maximum-energy-from-the-mystic-dungeon",
    "title": "Taking Maximum Energy From the Mystic Dungeon",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 41.19296198099684
  },
  "3148": {
    "titleSlug": "maximum-difference-score-in-a-grid",
    "title": "Maximum Difference Score in a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 46.770310707134335
  },
  "3149": {
    "titleSlug": "find-the-minimum-cost-array-permutation",
    "title": "Find the Minimum Cost Array Permutation",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 23.783243351329734
  },
  "3151": {
    "titleSlug": "special-array-i",
    "title": "Special Array I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 81.68469476150806
  },
  "3152": {
    "titleSlug": "special-array-ii",
    "title": "Special Array II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Prefix Sum"
    ],
    "acRate": 45.69161997530898
  },
  "3153": {
    "titleSlug": "sum-of-digit-differences-of-all-pairs",
    "title": "Sum of Digit Differences of All Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting"
    ],
    "acRate": 42.53198311164725
  },
  "3154": {
    "titleSlug": "find-number-of-ways-to-reach-the-k-th-stair",
    "title": "Find Number of Ways to Reach the K-th Stair",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Memoization",
      "Combinatorics"
    ],
    "acRate": 36.30588297062452
  },
  "3158": {
    "titleSlug": "find-the-xor-of-numbers-which-appear-twice",
    "title": "Find the XOR of Numbers Which Appear Twice",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation"
    ],
    "acRate": 77.77942411221416
  },
  "3159": {
    "titleSlug": "find-occurrences-of-an-element-in-an-array",
    "title": "Find Occurrences of an Element in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 72.65973254086181
  },
  "3160": {
    "titleSlug": "find-the-number-of-distinct-colors-among-the-balls",
    "title": "Find the Number of Distinct Colors Among the Balls",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Simulation"
    ],
    "acRate": 54.18645249122258
  },
  "3161": {
    "titleSlug": "block-placement-queries",
    "title": "Block Placement Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 16.94237473511518
  },
  "3162": {
    "titleSlug": "find-the-number-of-good-pairs-i",
    "title": "Find the Number of Good Pairs I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 85.70230043398553
  },
  "3163": {
    "titleSlug": "string-compression-iii",
    "title": "String Compression III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 66.83736315447109
  },
  "3164": {
    "titleSlug": "find-the-number-of-good-pairs-ii",
    "title": "Find the Number of Good Pairs II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 26.132868182159203
  },
  "3165": {
    "titleSlug": "maximum-sum-of-subsequence-with-non-adjacent-elements",
    "title": "Maximum Sum of Subsequence With Non-adjacent Elements",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming",
      "Segment Tree"
    ],
    "acRate": 15.268452730156662
  },
  "3168": {
    "titleSlug": "minimum-number-of-chairs-in-a-waiting-room",
    "title": "Minimum Number of Chairs in a Waiting Room",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 78.41266319020674
  },
  "3169": {
    "titleSlug": "count-days-without-meetings",
    "title": "Count Days Without Meetings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 47.90610468648177
  },
  "3170": {
    "titleSlug": "lexicographically-minimum-string-after-removing-stars",
    "title": "Lexicographically Minimum String After Removing Stars",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Stack",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 50.96045044923204
  },
  "3171": {
    "titleSlug": "find-subarray-with-bitwise-or-closest-to-k",
    "title": "Find Subarray With Bitwise OR Closest to K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Bit Manipulation",
      "Segment Tree"
    ],
    "acRate": 29.7383739525363
  },
  "3174": {
    "titleSlug": "clear-digits",
    "title": "Clear Digits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 82.55260010776287
  },
  "3175": {
    "titleSlug": "find-the-first-player-to-win-k-games-in-a-row",
    "title": "Find The First Player to win K Games in a Row",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 39.452811069569165
  },
  "3176": {
    "titleSlug": "find-the-maximum-length-of-a-good-subsequence-i",
    "title": "Find the Maximum Length of a Good Subsequence I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ],
    "acRate": 31.634241245136185
  },
  "3177": {
    "titleSlug": "find-the-maximum-length-of-a-good-subsequence-ii",
    "title": "Find the Maximum Length of a Good Subsequence II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ],
    "acRate": 24.003691100986217
  },
  "3178": {
    "titleSlug": "find-the-child-who-has-the-ball-after-k-seconds",
    "title": "Find the Child Who Has the Ball After K Seconds",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 61.57117556149673
  },
  "3179": {
    "titleSlug": "find-the-n-th-value-after-k-seconds",
    "title": "Find the N-th Value After K Seconds",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Simulation",
      "Combinatorics",
      "Prefix Sum"
    ],
    "acRate": 53.65022010738186
  },
  "3180": {
    "titleSlug": "maximum-total-reward-using-operations-i",
    "title": "Maximum Total Reward Using Operations I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 30.019704744944733
  },
  "3181": {
    "titleSlug": "maximum-total-reward-using-operations-ii",
    "title": "Maximum Total Reward Using Operations II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 20.693703308431164
  },
  "3184": {
    "titleSlug": "count-pairs-that-form-a-complete-day-i",
    "title": "Count Pairs That Form a Complete Day I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 77.58434304761047
  },
  "3185": {
    "titleSlug": "count-pairs-that-form-a-complete-day-ii",
    "title": "Count Pairs That Form a Complete Day II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 43.0252229348065
  },
  "3186": {
    "titleSlug": "maximum-total-damage-with-spell-casting",
    "title": "Maximum Total Damage With Spell Casting",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Dynamic Programming",
      "Sorting",
      "Counting"
    ],
    "acRate": 27.824489114093215
  },
  "3187": {
    "titleSlug": "peaks-in-array",
    "title": "Peaks in Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 25.872201145577623
  },
  "3190": {
    "titleSlug": "find-minimum-operations-to-make-all-elements-divisible-by-three",
    "title": "Find Minimum Operations to Make All Elements Divisible by Three",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 88.84830028427545
  },
  "3191": {
    "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-i",
    "title": "Minimum Operations to Make Binary Array Elements Equal to One I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Queue",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 80.51924040855567
  },
  "3192": {
    "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
    "title": "Minimum Operations to Make Binary Array Elements Equal to One II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 64.07694269140052
  },
  "3193": {
    "titleSlug": "count-the-number-of-inversions",
    "title": "Count the Number of Inversions",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 27.9605823984724
  },
  "3194": {
    "titleSlug": "minimum-average-of-smallest-and-largest-elements",
    "title": "Minimum Average of Smallest and Largest Elements",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "acRate": 84.83332562762958
  },
  "3195": {
    "titleSlug": "find-the-minimum-area-to-cover-all-ones-i",
    "title": "Find the Minimum Area to Cover All Ones I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix"
    ],
    "acRate": 68.947773018936
  },
  "3196": {
    "titleSlug": "maximize-total-cost-of-alternating-subarrays",
    "title": "Maximize Total Cost of Alternating Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 28.754279630772206
  },
  "3197": {
    "titleSlug": "find-the-minimum-area-to-cover-all-ones-ii",
    "title": "Find the Minimum Area to Cover All Ones II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Enumeration"
    ],
    "acRate": 28.806962538515595
  },
  "3200": {
    "titleSlug": "maximum-height-of-a-triangle",
    "title": "Maximum Height of a Triangle",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Enumeration"
    ],
    "acRate": 43.36139387141075
  },
  "3201": {
    "titleSlug": "find-the-maximum-length-of-valid-subsequence-i",
    "title": "Find the Maximum Length of Valid Subsequence I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 37.753723003352654
  },
  "3202": {
    "titleSlug": "find-the-maximum-length-of-valid-subsequence-ii",
    "title": "Find the Maximum Length of Valid Subsequence II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 39.637372950737834
  },
  "3203": {
    "titleSlug": "find-minimum-diameter-after-merging-two-trees",
    "title": "Find Minimum Diameter After Merging Two Trees",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 57.33745847618034
  },
  "3206": {
    "titleSlug": "alternating-groups-i",
    "title": "Alternating Groups I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 67.77867842893687
  },
  "3207": {
    "titleSlug": "maximum-points-after-enemy-battles",
    "title": "Maximum Points After Enemy Battles",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 32.467651018964375
  },
  "3208": {
    "titleSlug": "alternating-groups-ii",
    "title": "Alternating Groups II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 59.879012433085144
  },
  "3209": {
    "titleSlug": "number-of-subarrays-with-and-value-of-k",
    "title": "Number of Subarrays With AND Value of K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Bit Manipulation",
      "Segment Tree"
    ],
    "acRate": 33.99935632677144
  },
  "3210": {
    "titleSlug": "find-the-encrypted-string",
    "title": "Find the Encrypted String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 67.89544526941947
  },
  "3211": {
    "titleSlug": "generate-binary-strings-without-adjacent-zeros",
    "title": "Generate Binary Strings Without Adjacent Zeros",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Backtracking",
      "Bit Manipulation"
    ],
    "acRate": 87.30861806218222
  },
  "3212": {
    "titleSlug": "count-submatrices-with-equal-frequency-of-x-and-y",
    "title": "Count Submatrices With Equal Frequency of X and Y",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 50.600457684440755
  },
  "3213": {
    "titleSlug": "construct-string-with-minimum-cost",
    "title": "Construct String with Minimum Cost",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Dynamic Programming",
      "Suffix Array"
    ],
    "acRate": 19.156829679595276
  },
  "3216": {
    "titleSlug": "lexicographically-smallest-string-after-a-swap",
    "title": "Lexicographically Smallest String After a Swap",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy"
    ],
    "acRate": 53.734856206197264
  },
  "3217": {
    "titleSlug": "delete-nodes-from-linked-list-present-in-array",
    "title": "Delete Nodes From Linked List Present in Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Linked List"
    ],
    "acRate": 67.63538006032265
  },
  "3218": {
    "titleSlug": "minimum-cost-for-cutting-cake-i",
    "title": "Minimum Cost for Cutting Cake I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 57.65188669802822
  },
  "3219": {
    "titleSlug": "minimum-cost-for-cutting-cake-ii",
    "title": "Minimum Cost for Cutting Cake II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 54.66495594073787
  },
  "3220": {
    "titleSlug": "odd-and-even-transactions",
    "title": "Odd and Even Transactions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 69.19217081850533
  },
  "3222": {
    "titleSlug": "find-the-winning-player-in-coin-game",
    "title": "Find the Winning Player in Coin Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation",
      "Game Theory"
    ],
    "acRate": 51.89131196821789
  },
  "3223": {
    "titleSlug": "minimum-length-of-string-after-operations",
    "title": "Minimum Length of String After Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 74.92697791180511
  },
  "3224": {
    "titleSlug": "minimum-array-changes-to-make-differences-equal",
    "title": "Minimum Array Changes to Make Differences Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 23.40281559967652
  },
  "3225": {
    "titleSlug": "maximum-score-from-grid-operations",
    "title": "Maximum Score From Grid Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix",
      "Prefix Sum"
    ],
    "acRate": 24.389305635699174
  },
  "3226": {
    "titleSlug": "number-of-bit-changes-to-make-two-integers-equal",
    "title": "Number of Bit Changes to Make Two Integers Equal",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Bit Manipulation"
    ],
    "acRate": 62.68001755295807
  },
  "3227": {
    "titleSlug": "vowels-game-in-a-string",
    "title": "Vowels Game in a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Brainteaser",
      "Game Theory"
    ],
    "acRate": 62.301822867650245
  },
  "3228": {
    "titleSlug": "maximum-number-of-operations-to-move-ones-to-the-end",
    "title": "Maximum Number of Operations to Move Ones to the End",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "Counting"
    ],
    "acRate": 52.93416689693286
  },
  "3229": {
    "titleSlug": "minimum-operations-to-make-array-equal-to-target",
    "title": "Minimum Operations to Make Array Equal to Target",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 38.80742913000977
  },
  "3232": {
    "titleSlug": "find-if-digit-game-can-be-won",
    "title": "Find if Digit Game Can Be Won",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 81.26305143788218
  },
  "3233": {
    "titleSlug": "find-the-count-of-numbers-which-are-not-special",
    "title": "Find the Count of Numbers Which Are Not Special",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 26.97624387787797
  },
  "3234": {
    "titleSlug": "count-the-number-of-substrings-with-dominant-ones",
    "title": "Count the Number of Substrings With Dominant Ones",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window",
      "Enumeration"
    ],
    "acRate": 17.167187912129318
  },
  "3235": {
    "titleSlug": "check-if-the-rectangle-corner-is-reachable",
    "title": "Check if the Rectangle Corner Is Reachable",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Geometry"
    ],
    "acRate": 25.772000702617248
  },
  "3238": {
    "titleSlug": "find-the-number-of-winning-players",
    "title": "Find the Number of Winning Players",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 59.82334265013161
  },
  "3239": {
    "titleSlug": "minimum-number-of-flips-to-make-binary-grid-palindromic-i",
    "title": "Minimum Number of Flips to Make Binary Grid Palindromic I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Matrix"
    ],
    "acRate": 74.36160393805763
  },
  "3240": {
    "titleSlug": "minimum-number-of-flips-to-make-binary-grid-palindromic-ii",
    "title": "Minimum Number of Flips to Make Binary Grid Palindromic II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers",
      "Matrix"
    ],
    "acRate": 24.665915995665937
  },
  "3241": {
    "titleSlug": "time-taken-to-mark-all-nodes",
    "title": "Time Taken to Mark All Nodes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Graph"
    ],
    "acRate": 24.82176104627401
  },
  "3242": {
    "titleSlug": "design-neighbor-sum-service",
    "title": "Design Neighbor Sum Service",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Design",
      "Matrix",
      "Simulation"
    ],
    "acRate": 75.72355791205777
  },
  "3243": {
    "titleSlug": "shortest-distance-after-road-addition-queries-i",
    "title": "Shortest Distance After Road Addition Queries I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 61.844280361472336
  },
  "3244": {
    "titleSlug": "shortest-distance-after-road-addition-queries-ii",
    "title": "Shortest Distance After Road Addition Queries II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Graph",
      "Ordered Set"
    ],
    "acRate": 25.639915579847393
  },
  "3245": {
    "titleSlug": "alternating-groups-iii",
    "title": "Alternating Groups III",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Indexed Tree"
    ],
    "acRate": 15.22044162174138
  },
  "3248": {
    "titleSlug": "snake-in-matrix",
    "title": "Snake in Matrix",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Simulation"
    ],
    "acRate": 81.66010337189269
  },
  "3249": {
    "titleSlug": "count-the-number-of-good-nodes",
    "title": "Count the Number of Good Nodes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 54.69151185621507
  },
  "3250": {
    "titleSlug": "find-the-count-of-monotonic-pairs-i",
    "title": "Find the Count of Monotonic Pairs I",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Combinatorics",
      "Prefix Sum"
    ],
    "acRate": 46.55465079091737
  },
  "3251": {
    "titleSlug": "find-the-count-of-monotonic-pairs-ii",
    "title": "Find the Count of Monotonic Pairs II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Combinatorics",
      "Prefix Sum"
    ],
    "acRate": 23.046900409809407
  },
  "3254": {
    "titleSlug": "find-the-power-of-k-size-subarrays-i",
    "title": "Find the Power of K-Size Subarrays I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 62.45707042591276
  },
  "3255": {
    "titleSlug": "find-the-power-of-k-size-subarrays-ii",
    "title": "Find the Power of K-Size Subarrays II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window"
    ],
    "acRate": 30.56315289648623
  },
  "3256": {
    "titleSlug": "maximum-value-sum-by-placing-three-rooks-i",
    "title": "Maximum Value Sum by Placing Three Rooks I",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix",
      "Enumeration"
    ],
    "acRate": 15.279764111799707
  },
  "3257": {
    "titleSlug": "maximum-value-sum-by-placing-three-rooks-ii",
    "title": "Maximum Value Sum by Placing Three Rooks II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix",
      "Enumeration"
    ],
    "acRate": 26.43611709675724
  },
  "3258": {
    "titleSlug": "count-substrings-that-satisfy-k-constraint-i",
    "title": "Count Substrings That Satisfy K-Constraint I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window"
    ],
    "acRate": 77.99114204365706
  },
  "3259": {
    "titleSlug": "maximum-energy-boost-from-two-drinks",
    "title": "Maximum Energy Boost From Two Drinks",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 49.419622977586464
  },
  "3260": {
    "titleSlug": "find-the-largest-palindrome-divisible-by-k",
    "title": "Find the Largest Palindrome Divisible by K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming",
      "Greedy",
      "Number Theory"
    ],
    "acRate": 15.391943385955361
  },
  "3261": {
    "titleSlug": "count-substrings-that-satisfy-k-constraint-ii",
    "title": "Count Substrings That Satisfy K-Constraint II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 21.5219620577679
  },
  "3264": {
    "titleSlug": "final-array-state-after-k-multiplication-operations-i",
    "title": "Final Array State After K Multiplication Operations I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 87.05209915885426
  },
  "3265": {
    "titleSlug": "count-almost-equal-pairs-i",
    "title": "Count Almost Equal Pairs I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting",
      "Enumeration"
    ],
    "acRate": 37.59002618943693
  },
  "3266": {
    "titleSlug": "final-array-state-after-k-multiplication-operations-ii",
    "title": "Final Array State After K Multiplication Operations II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "acRate": 11.871687860281249
  },
  "3267": {
    "titleSlug": "count-almost-equal-pairs-ii",
    "title": "Count Almost Equal Pairs II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting",
      "Enumeration"
    ],
    "acRate": 26.654623602329707
  },
  "3270": {
    "titleSlug": "find-the-key-of-the-numbers",
    "title": "Find the Key of the Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 75.98672552115218
  },
  "3271": {
    "titleSlug": "hash-divided-string",
    "title": "Hash Divided String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 82.97824957315714
  },
  "3272": {
    "titleSlug": "find-the-count-of-good-integers",
    "title": "Find the Count of Good Integers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "Combinatorics",
      "Enumeration"
    ],
    "acRate": 69.6826296955357
  },
  "3273": {
    "titleSlug": "minimum-amount-of-damage-dealt-to-bob",
    "title": "Minimum Amount of Damage Dealt to Bob",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 38.32225668291242
  },
  "3274": {
    "titleSlug": "check-if-two-chessboard-squares-have-the-same-color",
    "title": "Check if Two Chessboard Squares Have the Same Color",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 71.87195450532568
  },
  "3275": {
    "titleSlug": "k-th-nearest-obstacle-queries",
    "title": "K-th Nearest Obstacle Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Heap (Priority Queue)"
    ],
    "acRate": 48.224203241149496
  },
  "3276": {
    "titleSlug": "select-cells-in-grid-with-maximum-score",
    "title": "Select Cells in Grid With Maximum Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Matrix",
      "Bitmask"
    ],
    "acRate": 14.498700407689363
  },
  "3277": {
    "titleSlug": "maximum-xor-score-subarray-queries",
    "title": "Maximum XOR Score Subarray Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 42.153899300457724
  },
  "3280": {
    "titleSlug": "convert-date-to-binary",
    "title": "Convert Date to Binary",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String"
    ],
    "acRate": 88.27948815406056
  },
  "3281": {
    "titleSlug": "maximize-score-of-numbers-in-ranges",
    "title": "Maximize Score of Numbers in Ranges",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "acRate": 34.6900089206066
  },
  "3282": {
    "titleSlug": "reach-end-of-array-with-max-score",
    "title": "Reach End of Array With Max Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 32.51625691976696
  },
  "3283": {
    "titleSlug": "maximum-number-of-moves-to-kill-all-pawns",
    "title": "Maximum Number of Moves to Kill All Pawns",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation",
      "Breadth-First Search",
      "Game Theory",
      "Bitmask"
    ],
    "acRate": 32.35441515485617
  },
  "3285": {
    "titleSlug": "find-indices-of-stable-mountains",
    "title": "Find Indices of Stable Mountains",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 86.1132364192808
  },
  "3286": {
    "titleSlug": "find-a-safe-walk-through-a-grid",
    "title": "Find a Safe Walk Through a Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Matrix",
      "Shortest Path"
    ],
    "acRate": 30.702393235014462
  },
  "3287": {
    "titleSlug": "find-the-maximum-sequence-value-of-array",
    "title": "Find the Maximum Sequence Value of Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation"
    ],
    "acRate": 18.837345860246625
  },
  "3288": {
    "titleSlug": "length-of-the-longest-increasing-path",
    "title": "Length of the Longest Increasing Path",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sorting"
    ],
    "acRate": 17.01542425403015
  },
  "3289": {
    "titleSlug": "the-two-sneaky-numbers-of-digitville",
    "title": "The Two Sneaky Numbers of Digitville",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math"
    ],
    "acRate": 88.33944062219562
  },
  "3290": {
    "titleSlug": "maximum-multiplication-score",
    "title": "Maximum Multiplication Score",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 40.91228655521264
  },
  "3291": {
    "titleSlug": "minimum-number-of-valid-strings-to-form-target-i",
    "title": "Minimum Number of Valid Strings to Form Target I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Binary Search",
      "Dynamic Programming",
      "Trie",
      "Segment Tree",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 20.20163711639961
  },
  "3292": {
    "titleSlug": "minimum-number-of-valid-strings-to-form-target-ii",
    "title": "Minimum Number of Valid Strings to Form Target II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Binary Search",
      "Dynamic Programming",
      "Segment Tree",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "acRate": 18.228155339805827
  },
  "3295": {
    "titleSlug": "report-spam-message",
    "title": "Report Spam Message",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String"
    ],
    "acRate": 47.65802099359996
  },
  "3296": {
    "titleSlug": "minimum-number-of-seconds-to-make-mountain-height-zero",
    "title": "Minimum Number of Seconds to Make Mountain Height Zero",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Search",
      "Greedy",
      "Heap (Priority Queue)"
    ],
    "acRate": 36.03102858538969
  },
  "3297": {
    "titleSlug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i",
    "title": "Count Substrings That Can Be Rearranged to Contain a String I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 41.60341111423484
  },
  "3298": {
    "titleSlug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii",
    "title": "Count Substrings That Can Be Rearranged to Contain a String II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 55.330692079808685
  },
  "3300": {
    "titleSlug": "minimum-element-after-replacement-with-digit-sum",
    "title": "Minimum Element After Replacement With Digit Sum",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 83.66529287591366
  },
  "3301": {
    "titleSlug": "maximize-the-total-height-of-unique-towers",
    "title": "Maximize the Total Height of Unique Towers",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 36.50039409976354
  },
  "3302": {
    "titleSlug": "find-the-lexicographically-smallest-valid-sequence",
    "title": "Find the Lexicographically Smallest Valid Sequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 20.45142176475978
  },
  "3303": {
    "titleSlug": "find-the-occurrence-of-first-almost-equal-substring",
    "title": "Find the Occurrence of First Almost Equal Substring",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "String Matching"
    ],
    "acRate": 13.967256690630098
  },
  "3304": {
    "titleSlug": "find-the-k-th-character-in-string-game-i",
    "title": "Find the K-th Character in String Game I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation",
      "Recursion",
      "Simulation"
    ],
    "acRate": 81.7632259571112
  },
  "3305": {
    "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-i",
    "title": "Count of Substrings Containing Every Vowel and K Consonants I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 41.28040135238303
  },
  "3306": {
    "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii",
    "title": "Count of Substrings Containing Every Vowel and K Consonants II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 40.71809217324555
  },
  "3307": {
    "titleSlug": "find-the-k-th-character-in-string-game-ii",
    "title": "Find the K-th Character in String Game II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation",
      "Recursion"
    ],
    "acRate": 48.805796106332984
  },
  "3309": {
    "titleSlug": "maximum-possible-number-by-binary-concatenation",
    "title": "Maximum Possible Number by Binary Concatenation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Enumeration"
    ],
    "acRate": 65.04724616948387
  },
  "3310": {
    "titleSlug": "remove-methods-from-project",
    "title": "Remove Methods From Project",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 49.41833316414577
  },
  "3311": {
    "titleSlug": "construct-2d-grid-matching-graph-layout",
    "title": "Construct 2D Grid Matching Graph Layout",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Graph",
      "Matrix"
    ],
    "acRate": 27.951807228915666
  },
  "3312": {
    "titleSlug": "sorted-gcd-pair-queries",
    "title": "Sorted GCD Pair Queries",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Binary Search",
      "Combinatorics",
      "Counting",
      "Number Theory",
      "Prefix Sum"
    ],
    "acRate": 19.915393461475276
  },
  "3314": {
    "titleSlug": "construct-the-minimum-bitwise-array-i",
    "title": "Construct the Minimum Bitwise Array I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 74.03392424435658
  },
  "3315": {
    "titleSlug": "construct-the-minimum-bitwise-array-ii",
    "title": "Construct the Minimum Bitwise Array II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation"
    ],
    "acRate": 34.93031746738502
  },
  "3316": {
    "titleSlug": "find-maximum-removals-from-source-string",
    "title": "Find Maximum Removals From Source String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 37.94046719216787
  },
  "3317": {
    "titleSlug": "find-the-number-of-possible-ways-for-an-event",
    "title": "Find the Number of Possible Ways for an Event",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 33.31684567552289
  },
  "3318": {
    "titleSlug": "find-x-sum-of-all-k-long-subarrays-i",
    "title": "Find X-Sum of All K-Long Subarrays I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Heap (Priority Queue)"
    ],
    "acRate": 63.69129153922653
  },
  "3319": {
    "titleSlug": "k-th-largest-perfect-subtree-size-in-binary-tree",
    "title": "K-th Largest Perfect Subtree Size in Binary Tree",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Sorting",
      "Binary Tree"
    ],
    "acRate": 61.05413315625077
  },
  "3320": {
    "titleSlug": "count-the-number-of-winning-sequences",
    "title": "Count The Number of Winning Sequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 31.311801720816746
  },
  "3321": {
    "titleSlug": "find-x-sum-of-all-k-long-subarrays-ii",
    "title": "Find X-Sum of All K-Long Subarrays II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Heap (Priority Queue)"
    ],
    "acRate": 16.150142921618777
  },
  "3324": {
    "titleSlug": "find-the-sequence-of-strings-appeared-on-the-screen",
    "title": "Find the Sequence of Strings Appeared on the Screen",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 79.39470934163883
  },
  "3325": {
    "titleSlug": "count-substrings-with-k-frequency-characters-i",
    "title": "Count Substrings With K-Frequency Characters I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "acRate": 54.60188752250055
  },
  "3326": {
    "titleSlug": "minimum-division-operations-to-make-array-non-decreasing",
    "title": "Minimum Division Operations to Make Array Non Decreasing",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Greedy",
      "Number Theory"
    ],
    "acRate": 28.61767019589131
  },
  "3327": {
    "titleSlug": "check-if-dfs-strings-are-palindromes",
    "title": "Check if DFS Strings Are Palindromes",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Tree",
      "Depth-First Search",
      "Hash Function"
    ],
    "acRate": 18.018571844565955
  },
  "3330": {
    "titleSlug": "find-the-original-typed-string-i",
    "title": "Find the Original Typed String I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 71.95746469332876
  },
  "3331": {
    "titleSlug": "find-subtree-sizes-after-changes",
    "title": "Find Subtree Sizes After Changes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 54.271657002284314
  },
  "3332": {
    "titleSlug": "maximum-points-tourist-can-earn",
    "title": "Maximum Points Tourist Can Earn",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 46.41037196242244
  },
  "3333": {
    "titleSlug": "find-the-original-typed-string-ii",
    "title": "Find the Original Typed String II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 46.58667361849939
  },
  "3334": {
    "titleSlug": "find-the-maximum-factor-score-of-array",
    "title": "Find the Maximum Factor Score of Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Number Theory"
    ],
    "acRate": 40.39990624380218
  },
  "3335": {
    "titleSlug": "total-characters-in-string-after-transformations-i",
    "title": "Total Characters in String After Transformations I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Dynamic Programming",
      "Counting"
    ],
    "acRate": 45.753472475909824
  },
  "3336": {
    "titleSlug": "find-the-number-of-subsequences-with-equal-gcd",
    "title": "Find the Number of Subsequences With Equal GCD",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Number Theory"
    ],
    "acRate": 28.977829222687205
  },
  "3337": {
    "titleSlug": "total-characters-in-string-after-transformations-ii",
    "title": "Total Characters in String After Transformations II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Dynamic Programming",
      "Counting"
    ],
    "acRate": 58.20528233835519
  },
  "3340": {
    "titleSlug": "check-balanced-string",
    "title": "Check Balanced String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 80.93351306455347
  },
  "3341": {
    "titleSlug": "find-minimum-time-to-reach-last-room-i",
    "title": "Find Minimum Time to Reach Last Room I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Heap (Priority Queue)",
      "Matrix",
      "Shortest Path"
    ],
    "acRate": 55.70783062853736
  },
  "3342": {
    "titleSlug": "find-minimum-time-to-reach-last-room-ii",
    "title": "Find Minimum Time to Reach Last Room II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Graph",
      "Heap (Priority Queue)",
      "Matrix",
      "Shortest Path"
    ],
    "acRate": 68.52522600021128
  },
  "3343": {
    "titleSlug": "count-number-of-balanced-permutations",
    "title": "Count Number of Balanced Permutations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 49.41826693090959
  },
  "3345": {
    "titleSlug": "smallest-divisible-digit-product-i",
    "title": "Smallest Divisible Digit Product I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Enumeration"
    ],
    "acRate": 63.89507034285068
  },
  "3346": {
    "titleSlug": "maximum-frequency-of-an-element-after-performing-operations-i",
    "title": "Maximum Frequency of an Element After Performing Operations I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 21.12564350296336
  },
  "3347": {
    "titleSlug": "maximum-frequency-of-an-element-after-performing-operations-ii",
    "title": "Maximum Frequency of an Element After Performing Operations II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 37.15267712948776
  },
  "3348": {
    "titleSlug": "smallest-divisible-digit-product-ii",
    "title": "Smallest Divisible Digit Product II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Backtracking",
      "Greedy",
      "Number Theory"
    ],
    "acRate": 10.655356311965352
  },
  "3349": {
    "titleSlug": "adjacent-increasing-subarrays-detection-i",
    "title": "Adjacent Increasing Subarrays Detection I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 42.90276093019398
  },
  "3350": {
    "titleSlug": "adjacent-increasing-subarrays-detection-ii",
    "title": "Adjacent Increasing Subarrays Detection II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 41.00579605455515
  },
  "3351": {
    "titleSlug": "sum-of-good-subsequences",
    "title": "Sum of Good Subsequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ],
    "acRate": 29.832876712328765
  },
  "3352": {
    "titleSlug": "count-k-reducible-numbers-less-than-n",
    "title": "Count K-Reducible Numbers Less Than N",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "acRate": 25.245988245393914
  },
  "3354": {
    "titleSlug": "make-array-elements-equal-to-zero",
    "title": "Make Array Elements Equal to Zero",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation",
      "Prefix Sum"
    ],
    "acRate": 55.60160989968163
  },
  "3355": {
    "titleSlug": "zero-array-transformation-i",
    "title": "Zero Array Transformation I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 54.42825801116703
  },
  "3356": {
    "titleSlug": "zero-array-transformation-ii",
    "title": "Zero Array Transformation II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Prefix Sum"
    ],
    "acRate": 43.61078546307151
  },
  "3357": {
    "titleSlug": "minimize-the-maximum-adjacent-element-difference",
    "title": "Minimize the Maximum Adjacent Element Difference",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 16.114467408585057
  },
  "3360": {
    "titleSlug": "stone-removal-game",
    "title": "Stone Removal Game",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Simulation"
    ],
    "acRate": 41.62033359809372
  },
  "3361": {
    "titleSlug": "shift-distance-between-two-strings",
    "title": "Shift Distance Between Two Strings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Prefix Sum"
    ],
    "acRate": 52.74989963869932
  },
  "3362": {
    "titleSlug": "zero-array-transformation-iii",
    "title": "Zero Array Transformation III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ],
    "acRate": 55.18070103840748
  },
  "3363": {
    "titleSlug": "find-the-maximum-number-of-fruits-collected",
    "title": "Find the Maximum Number of Fruits Collected",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 39.77162555208446
  },
  "3364": {
    "titleSlug": "minimum-positive-sum-subarray",
    "title": "Minimum Positive Sum Subarray ",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sliding Window",
      "Prefix Sum"
    ],
    "acRate": 44.576722840435245
  },
  "3365": {
    "titleSlug": "rearrange-k-substrings-to-form-target-string",
    "title": "Rearrange K Substrings to Form Target String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Sorting"
    ],
    "acRate": 56.12300573997686
  },
  "3366": {
    "titleSlug": "minimum-array-sum",
    "title": "Minimum Array Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 29.700143810770786
  },
  "3367": {
    "titleSlug": "maximize-sum-of-weights-after-edge-removals",
    "title": "Maximize Sum of Weights after Edge Removals",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 28.69009584664537
  },
  "3370": {
    "titleSlug": "smallest-number-with-all-set-bits",
    "title": "Smallest Number With All Set Bits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 75.83570796894959
  },
  "3371": {
    "titleSlug": "identify-the-largest-outlier-in-an-array",
    "title": "Identify the Largest Outlier in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting",
      "Enumeration"
    ],
    "acRate": 35.792625837804096
  },
  "3372": {
    "titleSlug": "maximize-the-number-of-target-nodes-after-connecting-trees-i",
    "title": "Maximize the Number of Target Nodes After Connecting Trees I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 69.67211009017187
  },
  "3373": {
    "titleSlug": "maximize-the-number-of-target-nodes-after-connecting-trees-ii",
    "title": "Maximize the Number of Target Nodes After Connecting Trees II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "acRate": 73.1595540676699
  },
  "3374": {
    "titleSlug": "first-letter-capitalization-ii",
    "title": "First Letter Capitalization II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 74.74816226517834
  },
  "3375": {
    "titleSlug": "minimum-operations-to-make-array-values-equal-to-k",
    "title": "Minimum Operations to Make Array Values Equal to K",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 73.43550215370665
  },
  "3376": {
    "titleSlug": "minimum-time-to-break-locks-i",
    "title": "Minimum Time to Break Locks I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Depth-First Search",
      "Bitmask"
    ],
    "acRate": 30.486139214892756
  },
  "3377": {
    "titleSlug": "digit-operations-to-make-two-integers-equal",
    "title": "Digit Operations to Make Two Integers Equal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Graph",
      "Heap (Priority Queue)",
      "Number Theory",
      "Shortest Path"
    ],
    "acRate": 27.63834925968707
  },
  "3378": {
    "titleSlug": "count-connected-components-in-lcm-graph",
    "title": "Count Connected Components in LCM Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Union Find",
      "Number Theory"
    ],
    "acRate": 28.497817218922204
  },
  "3379": {
    "titleSlug": "transformed-array",
    "title": "Transformed Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation"
    ],
    "acRate": 56.553598036637744
  },
  "3380": {
    "titleSlug": "maximum-area-rectangle-with-point-constraints-i",
    "title": "Maximum Area Rectangle With Point Constraints I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Indexed Tree",
      "Segment Tree",
      "Geometry",
      "Sorting",
      "Enumeration"
    ],
    "acRate": 49.82965161006704
  },
  "3381": {
    "titleSlug": "maximum-subarray-sum-with-length-divisible-by-k",
    "title": "Maximum Subarray Sum With Length Divisible by K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ],
    "acRate": 27.07830056957958
  },
  "3382": {
    "titleSlug": "maximum-area-rectangle-with-point-constraints-ii",
    "title": "Maximum Area Rectangle With Point Constraints II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Binary Indexed Tree",
      "Segment Tree",
      "Geometry",
      "Sorting"
    ],
    "acRate": 20.176148108205265
  },
  "3386": {
    "titleSlug": "button-with-longest-push-time",
    "title": "Button with Longest Push Time",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 40.61554616596245
  },
  "3387": {
    "titleSlug": "maximize-amount-after-two-days-of-conversions",
    "title": "Maximize Amount After Two Days of Conversions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 59.21908044176393
  },
  "3388": {
    "titleSlug": "count-beautiful-splits-in-an-array",
    "title": "Count Beautiful Splits in an Array",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 15.826506766646977
  },
  "3389": {
    "titleSlug": "minimum-operations-to-make-character-frequencies-equal",
    "title": "Minimum Operations to Make Character Frequencies Equal",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Counting",
      "Enumeration"
    ],
    "acRate": 25.011413291593293
  },
  "3392": {
    "titleSlug": "count-subarrays-of-length-three-with-a-condition",
    "title": "Count Subarrays of Length Three With a Condition",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 61.92908324228503
  },
  "3393": {
    "titleSlug": "count-paths-with-the-given-xor-value",
    "title": "Count Paths With the Given XOR Value",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Matrix"
    ],
    "acRate": 39.78465511496168
  },
  "3394": {
    "titleSlug": "check-if-grid-can-be-cut-into-sections",
    "title": "Check if Grid can be Cut into Sections",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting"
    ],
    "acRate": 68.36516987111506
  },
  "3395": {
    "titleSlug": "subsequences-with-a-unique-middle-mode-i",
    "title": "Subsequences with a Unique Middle Mode I",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Combinatorics"
    ],
    "acRate": 17.28064877922526
  },
  "3396": {
    "titleSlug": "minimum-number-of-operations-to-make-elements-in-array-distinct",
    "title": "Minimum Number of Operations to Make Elements in Array Distinct",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 71.56035813522692
  },
  "3397": {
    "titleSlug": "maximum-number-of-distinct-elements-after-operations",
    "title": "Maximum Number of Distinct Elements After Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 31.141730471207403
  },
  "3398": {
    "titleSlug": "smallest-substring-with-identical-characters-i",
    "title": "Smallest Substring With Identical Characters I",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Enumeration"
    ],
    "acRate": 19.259060722475358
  },
  "3399": {
    "titleSlug": "smallest-substring-with-identical-characters-ii",
    "title": "Smallest Substring With Identical Characters II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Binary Search"
    ],
    "acRate": 39.8825237592397
  },
  "3402": {
    "titleSlug": "minimum-operations-to-make-columns-strictly-increasing",
    "title": "Minimum Operations to Make Columns Strictly Increasing",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Matrix"
    ],
    "acRate": 72.0512596983698
  },
  "3403": {
    "titleSlug": "find-the-lexicographically-largest-string-from-the-box-i",
    "title": "Find the Lexicographically Largest String From the Box I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Enumeration"
    ],
    "acRate": 41.06289406087024
  },
  "3404": {
    "titleSlug": "count-special-subsequences",
    "title": "Count Special Subsequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Enumeration"
    ],
    "acRate": 28.893777852992606
  },
  "3405": {
    "titleSlug": "count-the-number-of-arrays-with-k-matching-adjacent-elements",
    "title": "Count the Number of Arrays with K Matching Adjacent Elements",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Combinatorics"
    ],
    "acRate": 58.46356352200147
  },
  "3407": {
    "titleSlug": "substring-matching-pattern",
    "title": "Substring Matching Pattern",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "String Matching"
    ],
    "acRate": 27.127890236075697
  },
  "3408": {
    "titleSlug": "design-task-manager",
    "title": "Design Task Manager",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Design",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "acRate": 34.09792781536576
  },
  "3409": {
    "titleSlug": "longest-subsequence-with-decreasing-adjacent-difference",
    "title": "Longest Subsequence With Decreasing Adjacent Difference",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 14.735499641310412
  },
  "3410": {
    "titleSlug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element",
    "title": "Maximize Subarray Sum After Removing All Occurrences of One Element",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Segment Tree"
    ],
    "acRate": 20.037340801493635
  },
  "3411": {
    "titleSlug": "maximum-subarray-with-equal-products",
    "title": "Maximum Subarray With Equal Products",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sliding Window",
      "Enumeration",
      "Number Theory"
    ],
    "acRate": 45.25775821297341
  },
  "3412": {
    "titleSlug": "find-mirror-score-of-a-string",
    "title": "Find Mirror Score of a String",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 34.04294820224024
  },
  "3413": {
    "titleSlug": "maximum-coins-from-k-consecutive-bags",
    "title": "Maximum Coins From K Consecutive Bags",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sliding Window",
      "Sorting",
      "Prefix Sum"
    ],
    "acRate": 23.501527106133878
  },
  "3414": {
    "titleSlug": "maximum-score-of-non-overlapping-intervals",
    "title": "Maximum Score of Non-overlapping Intervals",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "acRate": 30.27555874697065
  },
  "3417": {
    "titleSlug": "zigzag-grid-traversal-with-skip",
    "title": "Zigzag Grid Traversal With Skip",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "acRate": 63.683082699637794
  },
  "3418": {
    "titleSlug": "maximum-amount-of-money-robot-can-earn",
    "title": "Maximum Amount of Money Robot Can Earn",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "acRate": 28.763633900142267
  },
  "3419": {
    "titleSlug": "minimize-the-maximum-edge-weight-of-graph",
    "title": "Minimize the Maximum Edge Weight of Graph",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Shortest Path"
    ],
    "acRate": 42.857142857142854
  },
  "3420": {
    "titleSlug": "count-non-decreasing-subarrays-after-k-operations",
    "title": "Count Non-Decreasing Subarrays After K Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Segment Tree",
      "Queue",
      "Sliding Window",
      "Monotonic Stack",
      "Monotonic Queue"
    ],
    "acRate": 21.18961551100887
  },
  "3421": {
    "titleSlug": "find-students-who-improved",
    "title": "Find Students Who Improved",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 46.59728550189439
  },
  "3423": {
    "titleSlug": "maximum-difference-between-adjacent-elements-in-a-circular-array",
    "title": "Maximum Difference Between Adjacent Elements in a Circular Array",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 75.92303818065591
  },
  "3424": {
    "titleSlug": "minimum-cost-to-make-arrays-identical",
    "title": "Minimum Cost to Make Arrays Identical",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 36.74362432949591
  },
  "3425": {
    "titleSlug": "longest-special-path",
    "title": "Longest Special Path",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Prefix Sum"
    ],
    "acRate": 20.13531462726216
  },
  "3426": {
    "titleSlug": "manhattan-distances-of-all-arrangements-of-pieces",
    "title": "Manhattan Distances of All Arrangements of Pieces",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Combinatorics"
    ],
    "acRate": 33.10777191760374
  },
  "3427": {
    "titleSlug": "sum-of-variable-length-subarrays",
    "title": "Sum of Variable Length Subarrays",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Prefix Sum"
    ],
    "acRate": 85.15965515255084
  },
  "3428": {
    "titleSlug": "maximum-and-minimum-sums-of-at-most-size-k-subsequences",
    "title": "Maximum and Minimum Sums of at Most Size K Subsequences",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Sorting",
      "Combinatorics"
    ],
    "acRate": 20.335981009769014
  },
  "3429": {
    "titleSlug": "paint-house-iv",
    "title": "Paint House IV",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 43.726875210225366
  },
  "3430": {
    "titleSlug": "maximum-and-minimum-sums-of-at-most-size-k-subarrays",
    "title": "Maximum and Minimum Sums of at Most Size K Subarrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Stack",
      "Monotonic Stack"
    ],
    "acRate": 22.554764894656063
  },
  "3432": {
    "titleSlug": "count-partitions-with-even-sum-difference",
    "title": "Count Partitions with Even Sum Difference",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Prefix Sum"
    ],
    "acRate": 72.97705173084404
  },
  "3433": {
    "titleSlug": "count-mentions-per-user",
    "title": "Count Mentions Per User",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Sorting",
      "Simulation"
    ],
    "acRate": 30.072259120035838
  },
  "3434": {
    "titleSlug": "maximum-frequency-after-subarray-operation",
    "title": "Maximum Frequency After Subarray Operation",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming",
      "Greedy",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 27.691110025644157
  },
  "3435": {
    "titleSlug": "frequencies-of-shortest-supersequences",
    "title": "Frequencies of Shortest Supersequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Bit Manipulation",
      "Graph",
      "Topological Sort",
      "Enumeration"
    ],
    "acRate": 15.929203539823009
  },
  "3436": {
    "titleSlug": "find-valid-emails",
    "title": "Find Valid Emails",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 54.690754104712546
  },
  "3438": {
    "titleSlug": "find-valid-pair-of-adjacent-digits-in-string",
    "title": "Find Valid Pair of Adjacent Digits in String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 59.59778227273389
  },
  "3439": {
    "titleSlug": "reschedule-meetings-for-maximum-free-time-i",
    "title": "Reschedule Meetings for Maximum Free Time I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sliding Window"
    ],
    "acRate": 32.19146813655039
  },
  "3440": {
    "titleSlug": "reschedule-meetings-for-maximum-free-time-ii",
    "title": "Reschedule Meetings for Maximum Free Time II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Enumeration"
    ],
    "acRate": 39.853808764053284
  },
  "3441": {
    "titleSlug": "minimum-cost-good-caption",
    "title": "Minimum Cost Good Caption",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 18.894331700489854
  },
  "3442": {
    "titleSlug": "maximum-difference-between-even-and-odd-frequency-i",
    "title": "Maximum Difference Between Even and Odd Frequency I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 61.28600283447344
  },
  "3443": {
    "titleSlug": "maximum-manhattan-distance-after-k-changes",
    "title": "Maximum Manhattan Distance After K Changes",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Counting"
    ],
    "acRate": 54.031769196228105
  },
  "3444": {
    "titleSlug": "minimum-increments-for-target-multiples-in-an-array",
    "title": "Minimum Increments for Target Multiples in an Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Number Theory",
      "Bitmask"
    ],
    "acRate": 25.675675675675674
  },
  "3445": {
    "titleSlug": "maximum-difference-between-even-and-odd-frequency-ii",
    "title": "Maximum Difference Between Even and Odd Frequency II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sliding Window",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 49.15211819429222
  },
  "3446": {
    "titleSlug": "sort-matrix-by-diagonals",
    "title": "Sort Matrix by Diagonals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Matrix"
    ],
    "acRate": 70.53823678555044
  },
  "3447": {
    "titleSlug": "assign-elements-to-groups-with-constraints",
    "title": "Assign Elements to Groups with Constraints",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 25.912895290188693
  },
  "3448": {
    "titleSlug": "count-substrings-divisible-by-last-digit",
    "title": "Count Substrings Divisible By Last Digit",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 20.93864282811865
  },
  "3449": {
    "titleSlug": "maximize-the-minimum-game-score",
    "title": "Maximize the Minimum Game Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 24.75232549345837
  },
  "3451": {
    "titleSlug": "find-invalid-ip-addresses",
    "title": "Find Invalid IP Addresses",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 55.1487414187643
  },
  "3452": {
    "titleSlug": "sum-of-good-numbers",
    "title": "Sum of Good Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 69.19526201317498
  },
  "3453": {
    "titleSlug": "separate-squares-i",
    "title": "Separate Squares I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search"
    ],
    "acRate": 38.30369985004744
  },
  "3454": {
    "titleSlug": "separate-squares-ii",
    "title": "Separate Squares II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Segment Tree",
      "Line Sweep"
    ],
    "acRate": 19.18770940590014
  },
  "3455": {
    "titleSlug": "shortest-matching-substring",
    "title": "Shortest Matching Substring",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Binary Search",
      "String Matching"
    ],
    "acRate": 21.97891321978913
  },
  "3456": {
    "titleSlug": "find-special-substring-of-length-k",
    "title": "Find Special Substring of Length K",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String"
    ],
    "acRate": 35.067902605091774
  },
  "3457": {
    "titleSlug": "eat-pizzas",
    "title": "Eat Pizzas!",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting"
    ],
    "acRate": 32.25347568487123
  },
  "3458": {
    "titleSlug": "select-k-disjoint-special-substrings",
    "title": "Select K Disjoint Special Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ],
    "acRate": 17.869409357932472
  },
  "3459": {
    "titleSlug": "length-of-longest-v-shaped-diagonal-segment",
    "title": "Length of Longest V-Shaped Diagonal Segment",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Memoization",
      "Matrix"
    ],
    "acRate": 33.622810099894586
  },
  "3461": {
    "titleSlug": "check-if-digits-are-equal-in-string-after-operations-i",
    "title": "Check If Digits Are Equal in String After Operations I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Simulation",
      "Combinatorics",
      "Number Theory"
    ],
    "acRate": 77.5361317175813
  },
  "3462": {
    "titleSlug": "maximum-sum-with-at-most-k-elements",
    "title": "Maximum Sum With at Most K Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "acRate": 59.973680214607484
  },
  "3463": {
    "titleSlug": "check-if-digits-are-equal-in-string-after-operations-ii",
    "title": "Check If Digits Are Equal in String After Operations II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Combinatorics",
      "Number Theory"
    ],
    "acRate": 10.728624535315985
  },
  "3464": {
    "titleSlug": "maximize-the-distance-between-points-on-a-square",
    "title": "Maximize the Distance Between Points on a Square",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy"
    ],
    "acRate": 19.317501496707244
  },
  "3465": {
    "titleSlug": "find-products-with-valid-serial-numbers",
    "title": "Find Products with Valid Serial Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 52.2848162475822
  },
  "3467": {
    "titleSlug": "transform-array-by-parity",
    "title": "Transform Array by Parity",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Counting"
    ],
    "acRate": 89.55188380058352
  },
  "3468": {
    "titleSlug": "find-the-number-of-copy-arrays",
    "title": "Find the Number of Copy Arrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 45.99520270905841
  },
  "3469": {
    "titleSlug": "find-minimum-cost-to-remove-array-elements",
    "title": "Find Minimum Cost to Remove Array Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 18.84752498392847
  },
  "3470": {
    "titleSlug": "permutations-iv",
    "title": "Permutations IV",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Combinatorics",
      "Enumeration"
    ],
    "acRate": 28.31733198585144
  },
  "3471": {
    "titleSlug": "find-the-largest-almost-missing-integer",
    "title": "Find the Largest Almost Missing Integer",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table"
    ],
    "acRate": 36.74466177856437
  },
  "3472": {
    "titleSlug": "longest-palindromic-subsequence-after-at-most-k-operations",
    "title": "Longest Palindromic Subsequence After at Most K Operations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 36.472219259891226
  },
  "3473": {
    "titleSlug": "sum-of-k-subarrays-with-length-at-least-m",
    "title": "Sum of K Subarrays With Length at Least M",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 24.940285892771836
  },
  "3474": {
    "titleSlug": "lexicographically-smallest-generated-string",
    "title": "Lexicographically Smallest Generated String",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Greedy",
      "String Matching"
    ],
    "acRate": 28.99860917941586
  },
  "3475": {
    "titleSlug": "dna-pattern-recognition",
    "title": "DNA Pattern Recognition ",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 85.07247980524511
  },
  "3477": {
    "titleSlug": "fruits-into-baskets-ii",
    "title": "Fruits Into Baskets II",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Segment Tree",
      "Simulation"
    ],
    "acRate": 53.087381293981004
  },
  "3478": {
    "titleSlug": "choose-k-elements-with-maximum-sum",
    "title": "Choose K Elements With Maximum Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 31.536498593700525
  },
  "3479": {
    "titleSlug": "fruits-into-baskets-iii",
    "title": "Fruits Into Baskets III",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Segment Tree",
      "Ordered Set"
    ],
    "acRate": 21.960346271991064
  },
  "3480": {
    "titleSlug": "maximize-subarrays-after-removing-one-conflicting-pair",
    "title": "Maximize Subarrays After Removing One Conflicting Pair",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Segment Tree",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 31.95113356043698
  },
  "3482": {
    "titleSlug": "analyze-organization-hierarchy",
    "title": "Analyze Organization Hierarchy",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 60.18197573656846
  },
  "3483": {
    "titleSlug": "unique-3-digit-even-numbers",
    "title": "Unique 3-Digit Even Numbers",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Recursion",
      "Enumeration"
    ],
    "acRate": 67.4087955513006
  },
  "3484": {
    "titleSlug": "design-spreadsheet",
    "title": "Design Spreadsheet",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Design",
      "Matrix"
    ],
    "acRate": 67.61944840088049
  },
  "3485": {
    "titleSlug": "longest-common-prefix-of-k-strings-after-removal",
    "title": "Longest Common Prefix of K Strings After Removal",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Trie"
    ],
    "acRate": 20.382949817440775
  },
  "3486": {
    "titleSlug": "longest-special-path-ii",
    "title": "Longest Special Path II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Prefix Sum"
    ],
    "acRate": 16.06601901180403
  },
  "3487": {
    "titleSlug": "maximum-unique-subarray-sum-after-deletion",
    "title": "Maximum Unique Subarray Sum After Deletion",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy"
    ],
    "acRate": 27.66914507977668
  },
  "3488": {
    "titleSlug": "closest-equal-element-queries",
    "title": "Closest Equal Element Queries",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search"
    ],
    "acRate": 31.330803586419957
  },
  "3489": {
    "titleSlug": "zero-array-transformation-iv",
    "title": "Zero Array Transformation IV",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 29.755745397665745
  },
  "3490": {
    "titleSlug": "count-beautiful-numbers",
    "title": "Count Beautiful Numbers",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Dynamic Programming"
    ],
    "acRate": 20.9402390438247
  },
  "3492": {
    "titleSlug": "maximum-containers-on-a-ship",
    "title": "Maximum Containers on a Ship",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 74.59871589085071
  },
  "3493": {
    "titleSlug": "properties-graph",
    "title": "Properties Graph",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 46.9005180437264
  },
  "3494": {
    "titleSlug": "find-the-minimum-amount-of-time-to-brew-potions",
    "title": "Find the Minimum Amount of Time to Brew Potions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Simulation",
      "Prefix Sum"
    ],
    "acRate": 35.38946563913127
  },
  "3495": {
    "titleSlug": "minimum-operations-to-make-array-elements-zero",
    "title": "Minimum Operations to Make Array Elements Zero",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 31.82361896476729
  },
  "3497": {
    "titleSlug": "analyze-subscription-conversion",
    "title": "Analyze Subscription Conversion ",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 75.32309731580692
  },
  "3498": {
    "titleSlug": "reverse-degree-of-a-string",
    "title": "Reverse Degree of a String",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 87.2639960597603
  },
  "3499": {
    "titleSlug": "maximize-active-section-with-trade-i",
    "title": "Maximize Active Section with Trade I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Enumeration"
    ],
    "acRate": 29.993996878376755
  },
  "3500": {
    "titleSlug": "minimum-cost-to-divide-array-into-subarrays",
    "title": "Minimum Cost to Divide Array Into Subarrays",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 23.154387263976307
  },
  "3501": {
    "titleSlug": "maximize-active-section-with-trade-ii",
    "title": "Maximize Active Section with Trade II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Binary Search",
      "Segment Tree"
    ],
    "acRate": 18.92989581493908
  },
  "3502": {
    "titleSlug": "minimum-cost-to-reach-every-position",
    "title": "Minimum Cost to Reach Every Position",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array"
    ],
    "acRate": 82.15659275438013
  },
  "3503": {
    "titleSlug": "longest-palindrome-after-substring-concatenation-i",
    "title": "Longest Palindrome After Substring Concatenation I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Enumeration"
    ],
    "acRate": 43.28174164469768
  },
  "3504": {
    "titleSlug": "longest-palindrome-after-substring-concatenation-ii",
    "title": "Longest Palindrome After Substring Concatenation II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 15.912670228206158
  },
  "3505": {
    "titleSlug": "minimum-operations-to-make-elements-within-k-subarrays-equal",
    "title": "Minimum Operations to Make Elements Within K Subarrays Equal",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Dynamic Programming",
      "Sliding Window",
      "Heap (Priority Queue)"
    ],
    "acRate": 27.090635953930896
  },
  "3507": {
    "titleSlug": "minimum-pair-removal-to-sort-array-i",
    "title": "Minimum Pair Removal to Sort Array I",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Linked List",
      "Heap (Priority Queue)",
      "Simulation",
      "Doubly-Linked List",
      "Ordered Set"
    ],
    "acRate": 56.022815484829046
  },
  "3508": {
    "titleSlug": "implement-router",
    "title": "Implement Router",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Design",
      "Queue",
      "Ordered Set"
    ],
    "acRate": 22.031763242657142
  },
  "3509": {
    "titleSlug": "maximum-product-of-subsequences-with-an-alternating-sum-equal-to-k",
    "title": "Maximum Product of Subsequences With an Alternating Sum Equal to K",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ],
    "acRate": 11.146914254505734
  },
  "3510": {
    "titleSlug": "minimum-pair-removal-to-sort-array-ii",
    "title": "Minimum Pair Removal to Sort Array II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Linked List",
      "Heap (Priority Queue)",
      "Simulation",
      "Doubly-Linked List",
      "Ordered Set"
    ],
    "acRate": 13.858980466888996
  },
  "3512": {
    "titleSlug": "minimum-operations-to-make-array-sum-divisible-by-k",
    "title": "Minimum Operations to Make Array Sum Divisible by K",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 86.96635034261897
  },
  "3513": {
    "titleSlug": "number-of-unique-xor-triplets-i",
    "title": "Number of Unique XOR Triplets I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation"
    ],
    "acRate": 24.989940341853426
  },
  "3514": {
    "titleSlug": "number-of-unique-xor-triplets-ii",
    "title": "Number of Unique XOR Triplets II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Bit Manipulation",
      "Enumeration"
    ],
    "acRate": 29.51111111111111
  },
  "3515": {
    "titleSlug": "shortest-path-in-a-weighted-tree",
    "title": "Shortest Path in a Weighted Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Depth-First Search",
      "Binary Indexed Tree",
      "Segment Tree"
    ],
    "acRate": 32.39332401545671
  },
  "3516": {
    "titleSlug": "find-closest-person",
    "title": "Find Closest Person",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 82.91982966117386
  },
  "3517": {
    "titleSlug": "smallest-palindromic-rearrangement-i",
    "title": "Smallest Palindromic Rearrangement I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Sorting",
      "Counting Sort"
    ],
    "acRate": 62.88173806107808
  },
  "3518": {
    "titleSlug": "smallest-palindromic-rearrangement-ii",
    "title": "Smallest Palindromic Rearrangement II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Combinatorics",
      "Counting"
    ],
    "acRate": 12.287773625200213
  },
  "3519": {
    "titleSlug": "count-numbers-with-non-decreasing-digits",
    "title": "Count Numbers with Non-Decreasing Digits ",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "String",
      "Dynamic Programming"
    ],
    "acRate": 34.392324093816626
  },
  "3521": {
    "titleSlug": "find-product-recommendation-pairs",
    "title": "Find Product Recommendation Pairs",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 63.59269932756965
  },
  "3522": {
    "titleSlug": "calculate-score-after-performing-instructions",
    "title": "Calculate Score After Performing Instructions",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Simulation"
    ],
    "acRate": 55.74291529669642
  },
  "3523": {
    "titleSlug": "make-array-non-decreasing",
    "title": "Make Array Non-decreasing",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 54.829740076566594
  },
  "3524": {
    "titleSlug": "find-x-value-of-array-i",
    "title": "Find X Value of Array I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming"
    ],
    "acRate": 33.394285714285715
  },
  "3525": {
    "titleSlug": "find-x-value-of-array-ii",
    "title": "Find X Value of Array II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Segment Tree"
    ],
    "acRate": 27.393586005830905
  },
  "3527": {
    "titleSlug": "find-the-most-common-response",
    "title": "Find the Most Common Response",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 74.81920776718465
  },
  "3528": {
    "titleSlug": "unit-conversion-i",
    "title": "Unit Conversion I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "acRate": 56.3709870832905
  },
  "3529": {
    "titleSlug": "count-cells-in-overlapping-horizontal-and-vertical-substrings",
    "title": "Count Cells in Overlapping Horizontal and Vertical Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String",
      "Rolling Hash",
      "String Matching",
      "Matrix",
      "Hash Function"
    ],
    "acRate": 22.77815757990087
  },
  "3530": {
    "titleSlug": "maximum-profit-from-valid-topological-order-in-dag",
    "title": "Maximum Profit from Valid Topological Order in DAG",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Graph",
      "Topological Sort",
      "Bitmask"
    ],
    "acRate": 27.23969252271139
  },
  "3531": {
    "titleSlug": "count-covered-buildings",
    "title": "Count Covered Buildings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 37.63994411804107
  },
  "3532": {
    "titleSlug": "path-existence-queries-in-a-graph-i",
    "title": "Path Existence Queries in a Graph I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Union Find",
      "Graph"
    ],
    "acRate": 54.885914207484035
  },
  "3533": {
    "titleSlug": "concatenated-divisibility",
    "title": "Concatenated Divisibility",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Bitmask"
    ],
    "acRate": 26.077083955781298
  },
  "3534": {
    "titleSlug": "path-existence-queries-in-a-graph-ii",
    "title": "Path Existence Queries in a Graph II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Greedy",
      "Graph",
      "Sorting"
    ],
    "acRate": 22.770259253220285
  },
  "3536": {
    "titleSlug": "maximum-product-of-two-digits",
    "title": "Maximum Product of Two Digits",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Sorting"
    ],
    "acRate": 69.76401766882884
  },
  "3537": {
    "titleSlug": "fill-a-special-grid",
    "title": "Fill a Special Grid",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Divide and Conquer",
      "Matrix"
    ],
    "acRate": 69.8998677498583
  },
  "3538": {
    "titleSlug": "merge-operations-for-minimum-travel-time",
    "title": "Merge Operations for Minimum Travel Time",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "acRate": 27.544075440754405
  },
  "3539": {
    "titleSlug": "find-sum-of-array-product-of-magical-sequences",
    "title": "Find Sum of Array Product of Magical Sequences",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Combinatorics",
      "Bitmask"
    ],
    "acRate": 22.666273411001328
  },
  "3541": {
    "titleSlug": "find-most-frequent-vowel-and-consonant",
    "title": "Find Most Frequent Vowel and Consonant",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "acRate": 87.72566246280289
  },
  "3542": {
    "titleSlug": "minimum-operations-to-convert-all-elements-to-zero",
    "title": "Minimum Operations to Convert All Elements to Zero",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "acRate": 23.820888178127692
  },
  "3543": {
    "titleSlug": "maximum-weighted-k-edge-path",
    "title": "Maximum Weighted K-Edge Path",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Dynamic Programming",
      "Graph"
    ],
    "acRate": 18.65217743897494
  },
  "3544": {
    "titleSlug": "subtree-inversion-sum",
    "title": "Subtree Inversion Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 41.74925279219758
  },
  "3545": {
    "titleSlug": "minimum-deletions-for-at-most-k-distinct-characters",
    "title": "Minimum Deletions for At Most K Distinct Characters",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Counting"
    ],
    "acRate": 72.40767045454545
  },
  "3546": {
    "titleSlug": "equal-sum-grid-partition-i",
    "title": "Equal Sum Grid Partition I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Matrix",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 42.020739653115534
  },
  "3547": {
    "titleSlug": "maximum-sum-of-edge-values-in-a-graph",
    "title": "Maximum Sum of Edge Values in a Graph",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Greedy",
      "Depth-First Search",
      "Graph",
      "Sorting"
    ],
    "acRate": 32.76891776596443
  },
  "3548": {
    "titleSlug": "equal-sum-grid-partition-ii",
    "title": "Equal Sum Grid Partition II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Matrix",
      "Enumeration",
      "Prefix Sum"
    ],
    "acRate": 19.244868035190617
  },
  "3550": {
    "titleSlug": "smallest-index-with-digit-sum-equal-to-index",
    "title": "Smallest Index With Digit Sum Equal to Index",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math"
    ],
    "acRate": 79.88884273818707
  },
  "3551": {
    "titleSlug": "minimum-swaps-to-sort-by-digit-sum",
    "title": "Minimum Swaps to Sort by Digit Sum",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "acRate": 50.52862646716244
  },
  "3552": {
    "titleSlug": "grid-teleportation-traversal",
    "title": "Grid Teleportation Traversal",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 21.836379277785937
  },
  "3553": {
    "titleSlug": "minimum-weighted-subgraph-with-the-required-paths-ii",
    "title": "Minimum Weighted Subgraph With the Required Paths II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 49.18633034987795
  },
  "3554": {
    "titleSlug": "find-category-recommendation-pairs",
    "title": "Find Category Recommendation Pairs",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 68.39309428950862
  },
  "3556": {
    "titleSlug": "sum-of-largest-prime-substrings",
    "title": "Sum of Largest Prime Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "Math",
      "String",
      "Sorting",
      "Number Theory"
    ],
    "acRate": 37.0968562848854
  },
  "3557": {
    "titleSlug": "find-maximum-number-of-non-intersecting-substrings",
    "title": "Find Maximum Number of Non Intersecting Substrings",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 28.772652913807388
  },
  "3558": {
    "titleSlug": "number-of-ways-to-assign-edge-weights-i",
    "title": "Number of Ways to Assign Edge Weights I",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Math",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 54.054945572781676
  },
  "3559": {
    "titleSlug": "number-of-ways-to-assign-edge-weights-ii",
    "title": "Number of Ways to Assign Edge Weights II",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 61.37120035500333
  },
  "3560": {
    "titleSlug": "find-minimum-log-transportation-cost",
    "title": "Find Minimum Log Transportation Cost",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Math"
    ],
    "acRate": 41.24545299347332
  },
  "3561": {
    "titleSlug": "resulting-string-after-adjacent-removals",
    "title": "Resulting String After Adjacent Removals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Stack",
      "Simulation"
    ],
    "acRate": 55.18001764092695
  },
  "3562": {
    "titleSlug": "maximum-profit-from-trading-stocks-with-discounts",
    "title": "Maximum Profit from Trading Stocks with Discounts",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 20.06168953795795
  },
  "3563": {
    "titleSlug": "lexicographically-smallest-string-after-adjacent-removals",
    "title": "Lexicographically Smallest String After Adjacent Removals",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming"
    ],
    "acRate": 14.564343820444966
  },
  "3564": {
    "titleSlug": "seasonal-sales-analysis",
    "title": "Seasonal Sales Analysis",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 62.978109213375035
  },
  "3566": {
    "titleSlug": "partition-array-into-two-equal-product-subsets",
    "title": "Partition Array into Two Equal Product Subsets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Bit Manipulation",
      "Recursion",
      "Enumeration"
    ],
    "acRate": 34.8950649597868
  },
  "3567": {
    "titleSlug": "minimum-absolute-difference-in-sliding-submatrix",
    "title": "Minimum Absolute Difference in Sliding Submatrix",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Sorting",
      "Matrix"
    ],
    "acRate": 68.67960426179604
  },
  "3568": {
    "titleSlug": "minimum-moves-to-clean-the-classroom",
    "title": "Minimum Moves to Clean the Classroom",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Breadth-First Search",
      "Matrix"
    ],
    "acRate": 25.334790926482647
  },
  "3569": {
    "titleSlug": "maximize-count-of-distinct-primes-after-split",
    "title": "Maximize Count of Distinct Primes After Split",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Segment Tree",
      "Number Theory"
    ],
    "acRate": 14.33628318584071
  },
  "3570": {
    "titleSlug": "find-books-with-no-available-copies",
    "title": "Find Books with No Available Copies",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 55.8330795004569
  },
  "3572": {
    "titleSlug": "maximize-ysum-by-picking-a-triplet-of-distinct-xvalues",
    "title": "Maximize Y\u2011Sum by Picking a Triplet of Distinct X\u2011Values",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "acRate": 62.0516165098295
  },
  "3573": {
    "titleSlug": "best-time-to-buy-and-sell-stock-v",
    "title": "Best Time to Buy and Sell Stock V",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 39.297737877266556
  },
  "3574": {
    "titleSlug": "maximize-subarray-gcd-score",
    "title": "Maximize Subarray GCD Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Enumeration",
      "Number Theory"
    ],
    "acRate": 21.61986237679003
  },
  "3575": {
    "titleSlug": "maximum-good-subtree-score",
    "title": "Maximum Good Subtree Score",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Tree",
      "Depth-First Search",
      "Bitmask"
    ],
    "acRate": 44.22788605697151
  },
  "3576": {
    "titleSlug": "transform-array-to-all-equal-elements",
    "title": "Transform Array to All Equal Elements",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 31.940461063713922
  },
  "3577": {
    "titleSlug": "count-the-number-of-computer-unlocking-permutations",
    "title": "Count the Number of Computer Unlocking Permutations",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Brainteaser",
      "Combinatorics"
    ],
    "acRate": 38.30246502331779
  },
  "3578": {
    "titleSlug": "count-partitions-with-max-min-difference-at-most-k",
    "title": "Count Partitions With Max-Min Difference at Most K",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Queue",
      "Sliding Window",
      "Prefix Sum",
      "Monotonic Queue"
    ],
    "acRate": 37.30371673630965
  },
  "3579": {
    "titleSlug": "minimum-steps-to-convert-string-with-operations",
    "title": "Minimum Steps to Convert String with Operations",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "acRate": 39.57441450516242
  },
  "3580": {
    "titleSlug": "find-consistently-improving-employees",
    "title": "Find Consistently Improving Employees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 60.05330174711282
  },
  "3582": {
    "titleSlug": "generate-tag-for-video-caption",
    "title": "Generate Tag for Video Caption",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "String",
      "Simulation"
    ],
    "acRate": 31.468457790069802
  },
  "3583": {
    "titleSlug": "count-special-triplets",
    "title": "Count Special Triplets",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "acRate": 36.73182031522052
  },
  "3584": {
    "titleSlug": "maximum-product-of-first-and-last-elements-of-a-subsequence",
    "title": "Maximum Product of First and Last Elements of a Subsequence",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Two Pointers"
    ],
    "acRate": 29.990027332496123
  },
  "3585": {
    "titleSlug": "find-weighted-median-node-in-tree",
    "title": "Find Weighted Median Node in Tree",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 22.52057167605024
  },
  "3586": {
    "titleSlug": "find-covid-recovery-patients",
    "title": "Find COVID Recovery Patients",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Database"
    ],
    "acRate": 39.83147346845821
  },
  "3587": {
    "titleSlug": "minimum-adjacent-swaps-to-alternate-parity",
    "title": "Minimum Adjacent Swaps to Alternate Parity",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Greedy"
    ],
    "acRate": 41.45405541216509
  },
  "3588": {
    "titleSlug": "find-maximum-area-of-a-triangle",
    "title": "Find Maximum Area of a Triangle",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Greedy",
      "Geometry",
      "Enumeration"
    ],
    "acRate": 26.83456113300211
  },
  "3589": {
    "titleSlug": "count-prime-gap-balanced-subarrays",
    "title": "Count Prime-Gap Balanced Subarrays",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Math",
      "Queue",
      "Sliding Window",
      "Number Theory",
      "Monotonic Queue"
    ],
    "acRate": 17.651299715624624
  },
  "3590": {
    "titleSlug": "kth-smallest-path-xor-sum",
    "title": "Kth Smallest Path XOR Sum",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Tree",
      "Depth-First Search",
      "Ordered Set"
    ],
    "acRate": 26.938239159001316
  },
  "3591": {
    "titleSlug": "check-if-any-element-has-prime-frequency",
    "title": "Check if Any Element Has Prime Frequency",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Hash Table",
      "Math",
      "Counting",
      "Number Theory"
    ],
    "acRate": 62.77013428354614
  },
  "3592": {
    "titleSlug": "inverse-coin-change",
    "title": "Inverse Coin Change",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming"
    ],
    "acRate": 48.708133971291865
  },
  "3593": {
    "titleSlug": "minimum-increments-to-equalize-leaf-paths",
    "title": "Minimum Increments to Equalize Leaf Paths",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "acRate": 40.58412956562987
  },
  "3594": {
    "titleSlug": "minimum-time-to-transport-all-individuals",
    "title": "Minimum Time to Transport All Individuals",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path",
      "Bitmask"
    ],
    "acRate": 24.537852112676056
  },
  "3597": {
    "titleSlug": "partition-string",
    "title": "Partition String ",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Hash Table",
      "String",
      "Trie",
      "Simulation"
    ],
    "acRate": 55.866544789762344
  },
  "3598": {
    "titleSlug": "longest-common-prefix-between-adjacent-strings-after-removals",
    "title": "Longest Common Prefix Between Adjacent Strings After Removals",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "String"
    ],
    "acRate": 30.8798533259487
  },
  "3599": {
    "titleSlug": "partition-array-to-minimize-xor",
    "title": "Partition Array to Minimize XOR",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [
      "Array",
      "Dynamic Programming",
      "Bit Manipulation",
      "Prefix Sum"
    ],
    "acRate": 38.91895716155506
  },
  "3600": {
    "titleSlug": "maximize-spanning-tree-stability-with-upgrades",
    "title": "Maximize Spanning Tree Stability with Upgrades",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [
      "Binary Search",
      "Greedy",
      "Union Find",
      "Graph",
      "Minimum Spanning Tree"
    ],
    "acRate": 37.97784625635046
  },
  "3601": {
    "titleSlug": "find-drivers-with-improved-fuel-efficiency",
    "title": "Find Drivers with Improved Fuel Efficiency",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 55.43199315654406
  },
  "3602": {
    "titleSlug": "hexadecimal-and-hexatrigesimal-conversion",
    "title": "Hexadecimal and Hexatrigesimal Conversion",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 78.65959400183617
  },
  "3603": {
    "titleSlug": "minimum-cost-path-with-alternating-directions-ii",
    "title": "Minimum Cost Path with Alternating Directions II",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 42.65193706442679
  },
  "3604": {
    "titleSlug": "minimum-time-to-reach-destination-in-directed-graph",
    "title": "Minimum Time to Reach Destination in Directed Graph",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 44.92000546971147
  },
  "3605": {
    "titleSlug": "minimum-stability-factor-of-array",
    "title": "Minimum Stability Factor of Array",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 14.759667509938563
  },
  "3606": {
    "titleSlug": "coupon-code-validator",
    "title": "Coupon Code Validator",
    "difficulty": "Easy",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 54.59597077706443
  },
  "3607": {
    "titleSlug": "power-grid-maintenance",
    "title": "Power Grid Maintenance",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 44.04972740215995
  },
  "3608": {
    "titleSlug": "minimum-time-for-k-connected-components",
    "title": "Minimum Time for K Connected Components",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 44.172301290841176
  },
  "3609": {
    "titleSlug": "minimum-moves-to-reach-target-in-grid",
    "title": "Minimum Moves to Reach Target in Grid",
    "difficulty": "Hard",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 10.330773520957571
  },
  "3611": {
    "titleSlug": "find-overbooked-employees",
    "title": "Find Overbooked Employees",
    "difficulty": "Medium",
    "isPaidOnly": false,
    "topicTags": [],
    "acRate": 0
  }
}