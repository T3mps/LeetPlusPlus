#!/usr/bin/env python3
"""
Regenerate AllProblems.h from existing problem files
Useful if AllProblems.h gets out of sync or deleted
"""

from pathlib import Path
import re
import subprocess
import platform

def regenerate_all_problems_header():
    """Scan Problems directory and regenerate AllProblems.h"""
    problems_dir = Path(__file__).parent.parent / "src" / "Problems"
    all_problems_path = problems_dir / "AllProblems.h"
    
    problem_files = []
    for file in problems_dir.glob("*.h"):
        # Skip AllProblems.h itself
        if file.name == "AllProblems.h":
            continue
        # Match pattern: number_name.h
        if re.match(r'^\d+_.*\.h$', file.name):
            problem_files.append(file.name)
    
    def get_problem_number(filename):
        match = re.match(r'^(\d+)_', filename)
        return int(match.group(1)) if match else 0
    
    problem_files.sort(key=get_problem_number)
    
    content = """#pragma once

// This file is automatically generated by LeetPlusPlus
// It includes all problem solution headers

"""
    
    for filename in problem_files:
        content += f'#include "{filename}"\n'
    
    all_problems_path.write_text(content, encoding='utf-8')
    print(f"Regenerated AllProblems.h with {len(problem_files)} problems:")
    for filename in problem_files:
        print(f"  - {filename}")
    
    # Regenerate VS project files if on Windows
    regenerate_vs_project()

def regenerate_vs_project():
    """Regenerate Visual Studio project files if on Windows and premake5 is available"""
    if platform.system() != 'Windows':
        return
    
    try:
        # Check if premake5 is available
        result = subprocess.run(['premake5', '--version'], 
                              capture_output=True, 
                              text=True, 
                              shell=True)
        
        if result.returncode == 0:
            # Run premake5 vs2022 to regenerate project files
            project_root = Path(__file__).parent.parent
            result = subprocess.run(['premake5', 'vs2022'], 
                                  cwd=project_root,
                                  capture_output=True,
                                  text=True,
                                  shell=True)
            
            if result.returncode == 0:
                print("VS2022 project files regenerated successfully")
    except Exception:
        # Silently fail if premake5 is not available
        pass

if __name__ == "__main__":
    regenerate_all_problems_header()